// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/contract/StackUpDAO.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.StackUpDAO {

  #region Events
  #endregion
  public static partial class StackUpDAOContainer
  {
    static readonly string __ServiceName = "StackUpDAO";

    #region Marshallers
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Address> __Marshaller_aelf_Address = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Address.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.StackUpDAO.CreateProposalInput> __Marshaller_CreateProposalInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.StackUpDAO.CreateProposalInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.StackUpDAO.Proposal> __Marshaller_Proposal = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.StackUpDAO.Proposal.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.StackUpDAO.VoteInput> __Marshaller_VoteInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.StackUpDAO.VoteInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.StackUpDAO.ProposalList> __Marshaller_ProposalList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.StackUpDAO.ProposalList.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Initialize = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Initialize",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_JoinDAO = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "JoinDAO",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.StackUpDAO.CreateProposalInput, global::AElf.Contracts.StackUpDAO.Proposal> __Method_CreateProposal = new aelf::Method<global::AElf.Contracts.StackUpDAO.CreateProposalInput, global::AElf.Contracts.StackUpDAO.Proposal>(
        aelf::MethodType.Action,
        __ServiceName,
        "CreateProposal",
        __Marshaller_CreateProposalInput,
        __Marshaller_Proposal);

    static readonly aelf::Method<global::AElf.Contracts.StackUpDAO.VoteInput, global::AElf.Contracts.StackUpDAO.Proposal> __Method_VoteOnProposal = new aelf::Method<global::AElf.Contracts.StackUpDAO.VoteInput, global::AElf.Contracts.StackUpDAO.Proposal>(
        aelf::MethodType.Action,
        __ServiceName,
        "VoteOnProposal",
        __Marshaller_VoteInput,
        __Marshaller_Proposal);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.StackUpDAO.ProposalList> __Method_GetAllProposals = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.StackUpDAO.ProposalList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetAllProposals",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_ProposalList);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AElf.Contracts.StackUpDAO.StackUpDAOReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS12.Acs12Reflection.Descriptor.Services[0],
          global::AElf.Contracts.StackUpDAO.StackUpDAOReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of StackUpDAO</summary>
    public abstract partial class StackUpDAOBase : AElf.Sdk.CSharp.CSharpSmartContract<AElf.Contracts.StackUpDAO.StackUpDAOState>
    {
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Initialize(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty JoinDAO(global::AElf.Types.Address input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.StackUpDAO.Proposal CreateProposal(global::AElf.Contracts.StackUpDAO.CreateProposalInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.StackUpDAO.Proposal VoteOnProposal(global::AElf.Contracts.StackUpDAO.VoteInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.StackUpDAO.ProposalList GetAllProposals(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

    }

    public static aelf::ServerServiceDefinition BindService(StackUpDAOBase serviceImpl)
    {
      return aelf::ServerServiceDefinition.CreateBuilder()
          .AddDescriptors(Descriptors)
          .AddMethod(__Method_Initialize, serviceImpl.Initialize)
          .AddMethod(__Method_JoinDAO, serviceImpl.JoinDAO)
          .AddMethod(__Method_CreateProposal, serviceImpl.CreateProposal)
          .AddMethod(__Method_VoteOnProposal, serviceImpl.VoteOnProposal)
          .AddMethod(__Method_GetAllProposals, serviceImpl.GetAllProposals).Build();
    }

  }
}
#endregion

