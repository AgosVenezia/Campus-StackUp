// Generated by view binder compiler. Do not edit!
package com.circle.w3s.sample.wallet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.circle.w3s.sample.wallet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AcquireTokenForExistingUserBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView acquireTokenText2;

  @NonNull
  public final TextView circleHeader5;

  @NonNull
  public final ProgressBar loadingProgressBar2;

  @NonNull
  public final ImageView logoimageView3;

  private AcquireTokenForExistingUserBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView acquireTokenText2, @NonNull TextView circleHeader5,
      @NonNull ProgressBar loadingProgressBar2, @NonNull ImageView logoimageView3) {
    this.rootView = rootView;
    this.acquireTokenText2 = acquireTokenText2;
    this.circleHeader5 = circleHeader5;
    this.loadingProgressBar2 = loadingProgressBar2;
    this.logoimageView3 = logoimageView3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AcquireTokenForExistingUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AcquireTokenForExistingUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.acquire_token_for_existing_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AcquireTokenForExistingUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.acquireTokenText2;
      TextView acquireTokenText2 = ViewBindings.findChildViewById(rootView, id);
      if (acquireTokenText2 == null) {
        break missingId;
      }

      id = R.id.circleHeader5;
      TextView circleHeader5 = ViewBindings.findChildViewById(rootView, id);
      if (circleHeader5 == null) {
        break missingId;
      }

      id = R.id.loadingProgressBar2;
      ProgressBar loadingProgressBar2 = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgressBar2 == null) {
        break missingId;
      }

      id = R.id.logoimageView3;
      ImageView logoimageView3 = ViewBindings.findChildViewById(rootView, id);
      if (logoimageView3 == null) {
        break missingId;
      }

      return new AcquireTokenForExistingUserBinding((ConstraintLayout) rootView, acquireTokenText2,
          circleHeader5, loadingProgressBar2, logoimageView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
