{
	"id": "10acba05ace5628add72f0e5ecd5c464",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/EduToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\";\r\n\r\ncontract EduToken is ERC1155, AccessControl {\r\n    // Define roles for teachers and students\r\n    bytes32 public constant TEACHER_ROLE = keccak256(\"TEACHER_ROLE\");\r\n    bytes32 public constant STUDENT_ROLE = keccak256(\"STUDENT_ROLE\");\r\n\r\n    constructor() ERC1155(\"https://myapi.com/api/token/{id}.json\") {\r\n        grantRole(DEFAULT_ADMIN_ROLE, msg.sender); // The deployer can manage roles\r\n    }\r\n\r\n    // Custom function to award credits\r\n    function awardCredits(address student, uint256 amount) external {\r\n        require(\r\n            hasRole(TEACHER_ROLE, msg.sender),\r\n            \"Only teachers can award credits\"\r\n        );\r\n        _mint(student, 0, amount, \"\"); // Assuming '0' is the ID for credits\r\n    }\r\n\r\n    // Custom function for students to claim rewards\r\n    function claimReward(uint256 rewardId) external {\r\n        require(\r\n            hasRole(STUDENT_ROLE, msg.sender),\r\n            \"Only students can claim rewards\"\r\n        );\r\n        uint256 creditCost = getRewardCost(rewardId); // A function to determine the cost\r\n        _burn(msg.sender, 0, creditCost);\r\n        _mint(msg.sender, rewardId, 1, \"\");\r\n    }\r\n\r\n    // Sample function to determine reward cost (can be more dynamic)\r\n    function getRewardCost(uint256 rewardId) internal pure returns (uint256) {\r\n        // For simplicity, assume each reward NFT costs 10 credits\r\n        return 10;\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        virtual\r\n        override(ERC1155, AccessControl)\r\n        returns (bool)\r\n    {\r\n        return\r\n            ERC1155.supportsInterface(interfaceId) ||\r\n            AccessControl.supportsInterface(interfaceId);\r\n    }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return a == 0 ? 0 : (a - 1) / b + 1;\n        }\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/EduToken.sol": {
				"EduToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "STUDENT_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TEACHER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "student",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "awardCredits",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rewardId",
									"type": "uint256"
								}
							],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/EduToken.sol\":290:1996  contract EduToken is ERC1155, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/EduToken.sol\":532:688  constructor() ERC1155(\"https://myapi.com/api/token/{id}.json\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x25\n  dup2\n  mstore\n  0x20\n  add\n  data_be7838470a3c26528d43bae23565234ed295a39bde7b6c68ac16c023b38bf94f\n  0x25\n  swap2\n  codecopy\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  tag_5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1301:1305  uri_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1293:1300  _setURI */\n  shl(0x20, tag_6)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  pop\n    /* \"contracts/EduToken.sol\":606:647  grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/EduToken.sol\":616:634  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/EduToken.sol\":636:646  msg.sender */\n  caller\n    /* \"contracts/EduToken.sol\":606:615  grantRole */\n  shl(0x20, tag_9)\n    /* \"contracts/EduToken.sol\":606:647  grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/EduToken.sol\":290:1996  contract EduToken is ERC1155, AccessControl {... */\n  jump(tag_10)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\ntag_6:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  0x02\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\ntag_9:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n  tag_14\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4313:4317  role */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n  shl(0x20, tag_15)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n  tag_17\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2475:2479  role */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n  shl(0x20, tag_18)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n  tag_20\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4341:4345  role */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4347:4354  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n  shl(0x20, tag_21)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\ntag_15:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3901:3907  _roles */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3908:3912  role */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n  0x01\n  add\n  sload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\ntag_18:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n  tag_24\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3276:3280  role */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n  tag_25\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n  shl(0x20, tag_26)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n  shl(0x20, tag_27)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_21:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_29\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_30)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_31\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_32\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_26)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_28)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_31:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_28:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_26:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\ntag_27:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n  tag_36\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3528:3532  role */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3534:3541  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n  shl(0x20, tag_30)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n  tag_37\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3598:3605  account */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3607:3611  role */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n  mload(0x40)\n  0xe2517d3f00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_38\n  swap3\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\ntag_37:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_30:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_41:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_42:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_43:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_44:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_71:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_73\n  tag_43\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":714:798   */\ntag_72:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_45:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_46:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_47:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_48:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_78\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_47\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1429:1468   */\n  tag_79\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_47\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_49:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_50:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_51:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_83\n    /* \"#utility.yul\":1818:1852   */\n  tag_84\n    /* \"#utility.yul\":1827:1851   */\n  tag_85\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":1818:1852   */\n  tag_50\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1800:1853   */\n  tag_49\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_52:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_53:\n    /* \"#utility.yul\":2056:2095   */\n  tag_88\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_51\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2117:2208   */\n  tag_89\n    /* \"#utility.yul\":2166:2207   */\n  tag_90\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_52\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_48\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_54:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_55:\n    /* \"#utility.yul\":2377:2409   */\n  tag_93\n  tag_54\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2418:2483   */\n  tag_94\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_53\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_56:\n    /* \"#utility.yul\":2555:2675   */\ntag_96:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_99\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_55\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_96)\ntag_98:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_57:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_102\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_45\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2906:2935   */\n  tag_103\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_46\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_104:\n    /* \"#utility.yul\":3133:3213   */\n  tag_105\n    /* \"#utility.yul\":3189:3211   */\n  tag_106\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_46\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_56\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_101:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_58:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_59:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_109\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_58\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_60:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_111\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_59\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_13:\n    /* \"#utility.yul\":3950:3987   */\n  tag_113\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_41\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_115\n  tag_42\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":4038:4094   */\ntag_114:\n    /* \"#utility.yul\":4118:4156   */\n  tag_116\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_44\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":4203:4270   */\n  tag_117\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_57\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_119\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_120:\n    /* \"#utility.yul\":5144:5211   */\n  tag_121\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_60\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_118)\n    /* \"#utility.yul\":4365:4983   */\ntag_119:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_122\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_45\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_123:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_123)\ntag_125:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_127\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_59\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_126:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_118:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_61:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_62:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_130\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_61\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_63:\n    /* \"#utility.yul\":5555:5579   */\n  tag_132\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_62\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5669   */\ntag_64:\n    /* \"#utility.yul\":5629:5636   */\n  0x00\n    /* \"#utility.yul\":5658:5663   */\n  dup2\n    /* \"#utility.yul\":5647:5663   */\n  swap1\n  pop\n    /* \"#utility.yul\":5592:5669   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5675:5793   */\ntag_65:\n    /* \"#utility.yul\":5762:5786   */\n  tag_135\n    /* \"#utility.yul\":5780:5785   */\n  dup2\n    /* \"#utility.yul\":5762:5786   */\n  tag_64\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5757:5760   */\n  dup3\n    /* \"#utility.yul\":5750:5787   */\n  mstore\n    /* \"#utility.yul\":5675:5793   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5799:6131   */\ntag_39:\n    /* \"#utility.yul\":5920:5924   */\n  0x00\n    /* \"#utility.yul\":5958:5960   */\n  0x40\n    /* \"#utility.yul\":5947:5956   */\n  dup3\n    /* \"#utility.yul\":5943:5961   */\n  add\n    /* \"#utility.yul\":5935:5961   */\n  swap1\n  pop\n    /* \"#utility.yul\":5971:6042   */\n  tag_137\n    /* \"#utility.yul\":6039:6040   */\n  0x00\n    /* \"#utility.yul\":6028:6037   */\n  dup4\n    /* \"#utility.yul\":6024:6041   */\n  add\n    /* \"#utility.yul\":6015:6021   */\n  dup6\n    /* \"#utility.yul\":5971:6042   */\n  tag_63\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":6052:6124   */\n  tag_138\n    /* \"#utility.yul\":6120:6122   */\n  0x20\n    /* \"#utility.yul\":6109:6118   */\n  dup4\n    /* \"#utility.yul\":6105:6123   */\n  add\n    /* \"#utility.yul\":6096:6102   */\n  dup5\n    /* \"#utility.yul\":6052:6124   */\n  tag_65\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5799:6131   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/EduToken.sol\":290:1996  contract EduToken is ERC1155, AccessControl {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_be7838470a3c26528d43bae23565234ed295a39bde7b6c68ac16c023b38bf94f 68747470733a2f2f6d796170692e636f6d2f6170692f746f6b656e2f7b69647d2e6a736f6e\n\nsub_0: assembly {\n        /* \"contracts/EduToken.sol\":290:1996  contract EduToken is ERC1155, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x86e5c15a\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xae169a50\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xae169a50\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf7be43fb\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x86e5c15a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x2eb2c2d6\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3ff3226d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EduToken.sol\":1690:1993  function supportsInterface(bytes4 interfaceId)... */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_5:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_6:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_7:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_8:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_9:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/EduToken.sol\":737:1012  function awardCredits(address student, uint256 amount) external {... */\n    tag_10:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_11:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EduToken.sol\":388:452  bytes32 public constant TEACHER_ROLE = keccak256(\"TEACHER_ROLE\") */\n    tag_12:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_13:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_14:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_15:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/EduToken.sol\":1074:1434  function claimReward(uint256 rewardId) external {... */\n    tag_16:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_17:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_18:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_19:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      stop\n        /* \"contracts/EduToken.sol\":459:523  bytes32 public constant STUDENT_ROLE = keccak256(\"STUDENT_ROLE\") */\n    tag_20:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_27:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2324:2331  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2350:2359  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2360:2362  id */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2364:2371  account */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2343:2372  return _balances[id][account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EduToken.sol\":1690:1993  function supportsInterface(bytes4 interfaceId)... */\n    tag_33:\n        /* \"contracts/EduToken.sol\":1844:1848  bool */\n      0x00\n        /* \"contracts/EduToken.sol\":1886:1924  ERC1155.supportsInterface(interfaceId) */\n      tag_102\n        /* \"contracts/EduToken.sol\":1912:1923  interfaceId */\n      dup3\n        /* \"contracts/EduToken.sol\":1886:1911  ERC1155.supportsInterface */\n      tag_103\n        /* \"contracts/EduToken.sol\":1886:1924  ERC1155.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/EduToken.sol\":1886:1985  ERC1155.supportsInterface(interfaceId) ||... */\n      dup1\n      tag_104\n      jumpi\n      pop\n        /* \"contracts/EduToken.sol\":1941:1985  AccessControl.supportsInterface(interfaceId) */\n      tag_105\n        /* \"contracts/EduToken.sol\":1973:1984  interfaceId */\n      dup3\n        /* \"contracts/EduToken.sol\":1941:1972  AccessControl.supportsInterface */\n      tag_106\n        /* \"contracts/EduToken.sol\":1941:1985  AccessControl.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/EduToken.sol\":1886:1985  ERC1155.supportsInterface(interfaceId) ||... */\n    tag_104:\n        /* \"contracts/EduToken.sol\":1866:1985  return... */\n      swap1\n      pop\n        /* \"contracts/EduToken.sol\":1690:1993  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2144:2157  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2176:2180  _uri */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2169:2180  return _uri */\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_110\n      swap1\n      tag_109\n      jump\t// in\n    tag_110:\n      dup1\n      iszero\n      tag_111\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_112\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_111)\n    tag_112:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_113:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_113\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4208:4222  address sender */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      tag_116\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4225:4235  _msgSender */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4208:4237  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4259:4265  sender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4251:4255  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_118\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      tag_119\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4287:4291  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4293:4299  sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4270:4286  isApprovedForAll */\n      tag_91\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_119:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4269:4300  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_120\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4352:4358  sender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4360:4364  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap3\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4408:4412  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4414:4416  to */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4418:4421  ids */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4423:4429  values */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4431:4435  data */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4385:4407  _safeBatchTransferFrom */\n      tag_124\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_123:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4198:4443  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_55:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_125\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_45\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_125:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_127\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_128\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_127:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_130\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_131\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_130:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_133\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_134\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_134:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_135\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_136\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_135:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EduToken.sol\":737:1012  function awardCredits(address student, uint256 amount) external {... */\n    tag_61:\n        /* \"contracts/EduToken.sol\":834:867  hasRole(TEACHER_ROLE, msg.sender) */\n      tag_138\n        /* \"contracts/EduToken.sol\":427:452  keccak256(\"TEACHER_ROLE\") */\n      0xd16e204b8a42a15ab0ea6bb8ec1ecdfbe69f38074fc865323af19efe7d9573d9\n        /* \"contracts/EduToken.sol\":856:866  msg.sender */\n      caller\n        /* \"contracts/EduToken.sol\":834:841  hasRole */\n      tag_73\n        /* \"contracts/EduToken.sol\":834:867  hasRole(TEACHER_ROLE, msg.sender) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/EduToken.sol\":812:926  require(... */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/EduToken.sol\":937:966  _mint(student, 0, amount, \"\") */\n      tag_142\n        /* \"contracts/EduToken.sol\":943:950  student */\n      dup3\n        /* \"contracts/EduToken.sol\":952:953  0 */\n      0x00\n        /* \"contracts/EduToken.sol\":955:961  amount */\n      dup4\n        /* \"contracts/EduToken.sol\":937:966  _mint(student, 0, amount, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/EduToken.sol\":937:942  _mint */\n      tag_143\n        /* \"contracts/EduToken.sol\":937:966  _mint(student, 0, amount, \"\") */\n      jump\t// in\n    tag_142:\n        /* \"contracts/EduToken.sol\":737:1012  function awardCredits(address student, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_65:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2660:2676  uint256[] memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2711:2714  ids */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2711:2721  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2692:2700  accounts */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2692:2707  accounts.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2692:2721  accounts.length != ids.length */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n      tag_145\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2770:2773  ids */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2770:2780  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2782:2790  accounts */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2782:2797  accounts.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n    tag_145:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2819:2849  uint256[] memory batchBalances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2866:2874  accounts */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2866:2881  accounts.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2852:2882  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_148\n      jumpi\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n    tag_148:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_151:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2819:2882  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2898:2907  uint256 i */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_152:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2917:2925  accounts */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2917:2932  accounts.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2913:2914  i */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2913:2932  i < accounts.length */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_155\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      tag_156\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3010:3011  i */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2982:2990  accounts */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2982:3009  accounts.unsafeMemoryAccess */\n      tag_157\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      tag_158\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3037:3038  i */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3014:3017  ids */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3014:3036  ids.unsafeMemoryAccess */\n      tag_159\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_158:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2972:2981  balanceOf */\n      tag_27\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      jump\t// in\n    tag_155:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2953:2966  batchBalances */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2967:2968  i */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2953:2969  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_160\n      jumpi\n      tag_161\n      tag_162\n      jump\t// in\n    tag_161:\n    tag_160:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2953:3040  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2934:2937  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_152)\n    tag_153:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3068:3081  batchBalances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3061:3081  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EduToken.sol\":388:452  bytes32 public constant TEACHER_ROLE = keccak256(\"TEACHER_ROLE\") */\n    tag_69:\n        /* \"contracts/EduToken.sol\":427:452  keccak256(\"TEACHER_ROLE\") */\n      0xd16e204b8a42a15ab0ea6bb8ec1ecdfbe69f38074fc865323af19efe7d9573d9\n        /* \"contracts/EduToken.sol\":388:452  bytes32 public constant TEACHER_ROLE = keccak256(\"TEACHER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_81:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_165\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      tag_166\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3260:3270  _msgSender */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3274:3282  operator */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3284:3292  approved */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3241:3259  _setApprovalForAll */\n      tag_167\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_165:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EduToken.sol\":1074:1434  function claimReward(uint256 rewardId) external {... */\n    tag_84:\n        /* \"contracts/EduToken.sol\":1155:1188  hasRole(STUDENT_ROLE, msg.sender) */\n      tag_169\n        /* \"contracts/EduToken.sol\":498:523  keccak256(\"STUDENT_ROLE\") */\n      0x36a5c4aaacb6b388bbd448bf11096b7dafc5652bcc9046084fd0e95b1fb0b2cc\n        /* \"contracts/EduToken.sol\":1177:1187  msg.sender */\n      caller\n        /* \"contracts/EduToken.sol\":1155:1162  hasRole */\n      tag_73\n        /* \"contracts/EduToken.sol\":1155:1188  hasRole(STUDENT_ROLE, msg.sender) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/EduToken.sol\":1133:1247  require(... */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/EduToken.sol\":1258:1276  uint256 creditCost */\n      0x00\n        /* \"contracts/EduToken.sol\":1279:1302  getRewardCost(rewardId) */\n      tag_173\n        /* \"contracts/EduToken.sol\":1293:1301  rewardId */\n      dup3\n        /* \"contracts/EduToken.sol\":1279:1292  getRewardCost */\n      tag_174\n        /* \"contracts/EduToken.sol\":1279:1302  getRewardCost(rewardId) */\n      jump\t// in\n    tag_173:\n        /* \"contracts/EduToken.sol\":1258:1302  uint256 creditCost = getRewardCost(rewardId) */\n      swap1\n      pop\n        /* \"contracts/EduToken.sol\":1349:1381  _burn(msg.sender, 0, creditCost) */\n      tag_175\n        /* \"contracts/EduToken.sol\":1355:1365  msg.sender */\n      caller\n        /* \"contracts/EduToken.sol\":1367:1368  0 */\n      0x00\n        /* \"contracts/EduToken.sol\":1370:1380  creditCost */\n      dup4\n        /* \"contracts/EduToken.sol\":1349:1354  _burn */\n      tag_176\n        /* \"contracts/EduToken.sol\":1349:1381  _burn(msg.sender, 0, creditCost) */\n      jump\t// in\n    tag_175:\n        /* \"contracts/EduToken.sol\":1392:1426  _mint(msg.sender, rewardId, 1, \"\") */\n      tag_177\n        /* \"contracts/EduToken.sol\":1398:1408  msg.sender */\n      caller\n        /* \"contracts/EduToken.sol\":1410:1418  rewardId */\n      dup4\n        /* \"contracts/EduToken.sol\":1420:1421  1 */\n      0x01\n        /* \"contracts/EduToken.sol\":1392:1426  _mint(msg.sender, rewardId, 1, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/EduToken.sol\":1392:1397  _mint */\n      tag_143\n        /* \"contracts/EduToken.sol\":1392:1426  _mint(msg.sender, rewardId, 1, \"\") */\n      jump\t// in\n    tag_177:\n        /* \"contracts/EduToken.sol\":1122:1434  {... */\n      pop\n        /* \"contracts/EduToken.sol\":1074:1434  function claimReward(uint256 rewardId) external {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_178\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_45\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_178:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_180\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_128\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_180:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_182\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_136\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_182:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_91:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3457:3461  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3480:3498  _operatorApprovals */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3499:3506  account */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3508:3516  operator */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3473:3517  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_96:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3714:3728  address sender */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      tag_185\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3731:3741  _msgSender */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      jump\t// in\n    tag_185:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3714:3743  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3765:3771  sender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3757:3761  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_186\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      tag_187\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3793:3797  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3799:3805  sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3776:3792  isApprovedForAll */\n      tag_91\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_187:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3775:3806  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n    tag_186:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3858:3864  sender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3866:3870  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap3\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_188:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      tag_190\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3909:3913  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3915:3917  to */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3919:3921  id */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3923:3928  value */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3930:3934  data */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3891:3908  _safeTransferFrom */\n      tag_191\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n    tag_190:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3704:3942  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EduToken.sol\":459:523  bytes32 public constant STUDENT_ROLE = keccak256(\"STUDENT_ROLE\") */\n    tag_98:\n        /* \"contracts/EduToken.sol\":498:523  keccak256(\"STUDENT_ROLE\") */\n      0x36a5c4aaacb6b388bbd448bf11096b7dafc5652bcc9046084fd0e95b1fb0b2cc\n        /* \"contracts/EduToken.sol\":459:523  bytes32 public constant STUDENT_ROLE = keccak256(\"STUDENT_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_103:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1482:1486  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1532:1558  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1517:1528  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_193\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1589:1626  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1574:1585  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_193:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_194\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      tag_195\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1666:1677  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1642:1665  super.supportsInterface */\n      tag_196\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_195:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_194:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1498:1678  return... */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_106:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_198\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_199\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_103\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_199:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_198:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n    tag_124:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9222:9223  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9208:9210  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n      tag_202\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9278:9279  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n    tag_202:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9321:9322  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9305:9309  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9375:9376  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n    tag_205:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_207\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9425:9429  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9431:9433  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9435:9438  ids */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9440:9446  values */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9448:9452  data */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9398:9424  _updateWithAcceptanceCheck */\n      tag_208\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_207:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_210\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_211\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_212\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_210:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_131:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_214\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_214:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_215\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_216\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_216:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_213)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_215:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_213:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_136:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_219\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_219:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_221\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_221:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_218)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_220:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_218:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_143:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10856:10857  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10842:10844  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n      tag_224\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10912:10913  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n    tag_224:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10936:10956  uint256[] memory ids */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10958:10981  uint256[] memory values */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      tag_226\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11004:11006  id */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11008:11013  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10985:11003  _asSingletonArrays */\n      tag_227\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_226:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10935:11014  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_228\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11059:11060  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11063:11065  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11067:11070  ids */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11072:11078  values */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11080:11084  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11024:11050  _updateWithAcceptanceCheck */\n      tag_208\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_228:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10828:11092  {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n    tag_157:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4689:4700  address res */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4772:4775  pos */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      mul\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4761:4765  0x20 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4756:4759  arr */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4752:4766  add(arr, 0x20) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4735:4784  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n    tag_159:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4290:4301  uint256 res */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4378:4382  0x20 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4373:4376  pos */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4369:4383  mul(pos, 0x20) */\n      mul\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4362:4366  0x20 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4357:4360  arr */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4353:4367  add(arr, 0x20) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4349:4384  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4343:4385  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4336:4385  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_167:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13395:13396  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13375:13383  operator */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n      tag_232\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13451:13452  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      0xced3e10000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n    tag_232:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13512:13520  approved */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13474:13492  _operatorApprovals */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13493:13498  owner */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13500:13508  operator */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13474:13520  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13557:13565  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13550:13555  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13567:13575  approved */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_234\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EduToken.sol\":1513:1682  function getRewardCost(uint256 rewardId) internal pure returns (uint256) {... */\n    tag_174:\n        /* \"contracts/EduToken.sol\":1577:1584  uint256 */\n      0x00\n        /* \"contracts/EduToken.sol\":1672:1674  10 */\n      0x0a\n        /* \"contracts/EduToken.sol\":1665:1674  return 10 */\n      swap1\n      pop\n        /* \"contracts/EduToken.sol\":1513:1682  function getRewardCost(uint256 rewardId) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12099:12428  function _burn(address from, uint256 id, uint256 value) internal {... */\n    tag_176:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12194:12195  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12178:12196  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12178:12182  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12178:12196  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12174:12262  if (from == address(0)) {... */\n      tag_237\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12248:12249  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12219:12251  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12174:12262  if (from == address(0)) {... */\n    tag_237:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12272:12292  uint256[] memory ids */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12294:12317  uint256[] memory values */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12321:12350  _asSingletonArrays(id, value) */\n      tag_239\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12340:12342  id */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12344:12349  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12321:12339  _asSingletonArrays */\n      tag_227\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12321:12350  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_239:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12271:12350  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      tag_240\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12387:12391  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12401:12402  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12405:12408  ids */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12410:12416  values */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12360:12386  _updateWithAcceptanceCheck */\n      tag_208\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      jump\t// in\n    tag_240:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12164:12428  {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":12099:12428  function _burn(address from, uint256 id, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_191:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8287:8288  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8273:8275  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n      tag_242\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8343:8344  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n    tag_242:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8386:8387  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8370:8374  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n      tag_244\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8440:8441  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n    tag_244:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8464:8484  uint256[] memory ids */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8486:8509  uint256[] memory values */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      tag_246\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8532:8534  id */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8536:8541  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8513:8531  _asSingletonArrays */\n      tag_227\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_246:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8463:8542  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_247\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8579:8583  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8585:8587  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8589:8592  ids */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8594:8600  values */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8602:8606  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8552:8578  _updateWithAcceptanceCheck */\n      tag_208\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_247:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8259:8614  {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_196:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n    tag_208:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      tag_250\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7213:7217  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7219:7221  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7228:7234  values */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n      tag_251\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      jump\t// in\n    tag_250:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7263:7264  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7249:7251  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n      tag_252\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7281:7297  address operator */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      tag_253\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7300:7310  _msgSender */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      jump\t// in\n    tag_253:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7281:7312  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7330:7333  ids */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      tag_254\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      tag_255\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7401:7402  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7378:7381  ids */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7378:7400  ids.unsafeMemoryAccess */\n      tag_159\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7365:7403  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      tag_256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7463:7464  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7437:7443  values */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7437:7462  values.unsafeMemoryAccess */\n      tag_159\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7421:7465  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_257\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7524:7528  from */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7530:7532  to */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7534:7536  id */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7538:7543  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7545:7549  data */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n      tag_258\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_257:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      jump(tag_259)\n    tag_254:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_260\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7635:7639  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7641:7643  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7650:7656  values */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7658:7662  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n      tag_261\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n    tag_260:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n    tag_259:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7267:7688  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n    tag_252:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_212:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_263\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_263:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_264\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap3\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_264:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16082:16931  function _asSingletonArrays(... */\n    tag_227:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16190:16213  uint256[] memory array1 */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16215:16238  uint256[] memory array2 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16376:16380  0x40 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16370:16381  mload(0x40) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16360:16381  array1 := mload(0x40) */\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16446:16447  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16438:16444  array1 */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16431:16448  mstore(array1, 1) */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16584:16592  element1 */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16577:16581  0x20 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16569:16575  array1 */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16565:16582  add(array1, 0x20) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16558:16593  mstore(add(array1, 0x20), element1) */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16706:16710  0x40 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16698:16704  array1 */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16694:16711  add(array1, 0x40) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16684:16711  array2 := add(array1, 0x40) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16739:16740  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16731:16737  array2 */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16724:16741  mstore(array2, 1) */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16780:16788  element2 */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16773:16777  0x20 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16765:16771  array2 */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16761:16778  add(array2, 0x20) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16754:16789  mstore(add(array2, 0x20), element2) */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16909:16913  0x40 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16901:16907  array2 */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16897:16914  add(array2, 0x40) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16891:16895  0x40 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16884:16915  mstore(0x40, add(array2, 0x40)) */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16082:16931  function _asSingletonArrays(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_251:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5279:5285  values */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n      tag_269\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5341:5344  ids */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5353:5359  values */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n    tag_269:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      tag_271\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5407:5417  _msgSender */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      jump\t// in\n    tag_271:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5388:5419  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5435:5444  uint256 i */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_272:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5450:5451  i */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5485:5495  uint256 id */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      tag_275\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5521:5522  i */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5498:5501  ids */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5498:5520  ids.unsafeMemoryAccess */\n      tag_159\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_275:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5485:5523  uint256 id = ids.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5537:5550  uint256 value */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      tag_276\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5579:5580  i */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5553:5559  values */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5553:5578  values.unsafeMemoryAccess */\n      tag_159\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_276:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5537:5581  uint256 value = values.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5616:5617  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5600:5604  from */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n      tag_277\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5670:5672  id */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5674:5678  from */\n      dup11\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5638:5679  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5715:5720  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5701:5712  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n      iszero\n      tag_278\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5778:5782  from */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5784:5795  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5797:5802  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5804:5806  id */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      0x03dee4c500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n    tag_278:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5978:5983  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5964:5975  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5952:5954  id */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5956:5960  from */\n      dup12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5620:6016  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n    tag_277:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6048:6049  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6034:6036  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n      tag_281\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6080:6082  id */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6084:6086  to */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      dup3\n      dup3\n      sload\n      tag_282\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n    tag_281:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5471:6121  {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_272)\n    tag_273:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      tag_284\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      tag_285\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6202:6203  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6179:6182  ids */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6179:6201  ids.unsafeMemoryAccess */\n      tag_159\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_285:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      tag_286\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6260:6261  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6234:6240  values */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6234:6259  values.unsafeMemoryAccess */\n      tag_159\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_286:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6218:6262  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6312:6314  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6306:6310  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6316:6318  id */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6320:6325  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_287\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      jump(tag_288)\n    tag_284:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6392:6394  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6386:6390  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6401:6407  values */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_289\n      swap3\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n    tag_288:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13761:14736  function _doSafeTransferAcceptanceCheck(... */\n    tag_258:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13984:13985  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13967:13969  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13963:14730  if (to.code.length > 0) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14022:14024  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14054:14058  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14060:14062  id */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14064:14069  value */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14071:14075  data */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_295\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_296\n      swap2\n      swap1\n      tag_297\n      jump\t// in\n    tag_296:\n      0x01\n    tag_295:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14001:14720  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_298\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_303\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_302)\n    tag_303:\n      0x60\n      swap2\n      pop\n    tag_302:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14356:14706  if (reason.length == 0) {... */\n      tag_304\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14488:14490  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14465:14491  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14356:14706  if (reason.length == 0) {... */\n    tag_304:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14658:14664  reason */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14652:14665  mload(reason) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14643:14649  reason */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14639:14641  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14635:14650  add(32, reason) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14628:14666  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14001:14720  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_298:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14137:14180  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14125:14133  response */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_308\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14273:14275  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_308:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14077:14309  returns (bytes4 response) {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13963:14730  if (to.code.length > 0) {... */\n    tag_292:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13761:14736  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14924:15966  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_261:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15172:15173  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15155:15157  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15155:15169  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15155:15173  to.code.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15151:15960  if (to.code.length > 0) {... */\n      iszero\n      tag_311\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15210:15212  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15193:15236  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15237:15245  operator */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15247:15251  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15253:15256  ids */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15258:15264  values */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15266:15270  data */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15193:15271  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_312\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_313\n      jump\t// in\n    tag_312:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_314\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_315\n      swap2\n      swap1\n      tag_297\n      jump\t// in\n    tag_315:\n      0x01\n    tag_314:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15189:15950  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_316\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_321\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_320)\n    tag_321:\n      0x60\n      swap2\n      pop\n    tag_320:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15607:15608  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15590:15596  reason */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15590:15603  reason.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15590:15608  reason.length == 0 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15586:15936  if (reason.length == 0) {... */\n      tag_322\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15718:15720  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15695:15721  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15586:15936  if (reason.length == 0) {... */\n    tag_322:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15888:15894  reason */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15882:15895  mload(reason) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15873:15879  reason */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15869:15871  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15865:15880  add(32, reason) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15858:15896  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15189:15950  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n    tag_316:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15362:15410  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15350:15410  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15350:15358  response */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15350:15410  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15346:15525  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_326\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15503:15505  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15480:15506  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_327\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_327:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15346:15525  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_326:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15272:15539  returns (... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15151:15960  if (to.code.length > 0) {... */\n    tag_311:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14924:15966  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_328:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_329:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_330:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_331:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_332:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_394\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_331\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_333:\n        /* \"#utility.yul\":641:665   */\n      tag_396\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_332\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_397:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_334:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_399\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_333\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_335:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_336:\n        /* \"#utility.yul\":997:1021   */\n      tag_402\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_335\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_403:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_337:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_405\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_336\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_26:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_408\n      tag_329\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":1290:1409   */\n    tag_407:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_409\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_334\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_410\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_337\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_338:\n        /* \"#utility.yul\":1764:1788   */\n      tag_412\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_335\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_29:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_414\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_338\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_339:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_340:\n        /* \"#utility.yul\":2256:2279   */\n      tag_417\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_339\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_418:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_341:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_420\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_340\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_32:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_423\n      tag_329\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":2528:2647   */\n    tag_422:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_424\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_341\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_342:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_343:\n        /* \"#utility.yul\":2963:2984   */\n      tag_427\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_342\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_35:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_429\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_343\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_38:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_432\n      tag_329\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3289:3408   */\n    tag_431:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_433\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_337\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3647   */\n    tag_344:\n        /* \"#utility.yul\":3600:3606   */\n      0x00\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3640   */\n      mload\n        /* \"#utility.yul\":3618:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3822   */\n    tag_345:\n        /* \"#utility.yul\":3737:3748   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup3\n        /* \"#utility.yul\":3766:3769   */\n      dup3\n        /* \"#utility.yul\":3759:3778   */\n      mstore\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3806:3809   */\n      dup3\n        /* \"#utility.yul\":3802:3816   */\n      add\n        /* \"#utility.yul\":3787:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:4074   */\n    tag_346:\n        /* \"#utility.yul\":3909:3910   */\n      0x00\n        /* \"#utility.yul\":3919:4032   */\n    tag_437:\n        /* \"#utility.yul\":3933:3939   */\n      dup4\n        /* \"#utility.yul\":3930:3931   */\n      dup2\n        /* \"#utility.yul\":3927:3940   */\n      lt\n        /* \"#utility.yul\":3919:4032   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":4018:4019   */\n      dup1\n        /* \"#utility.yul\":4013:4016   */\n      dup3\n        /* \"#utility.yul\":4009:4020   */\n      add\n        /* \"#utility.yul\":4003:4021   */\n      mload\n        /* \"#utility.yul\":3999:4000   */\n      dup2\n        /* \"#utility.yul\":3994:3997   */\n      dup5\n        /* \"#utility.yul\":3990:4001   */\n      add\n        /* \"#utility.yul\":3983:4022   */\n      mstore\n        /* \"#utility.yul\":3955:3957   */\n      0x20\n        /* \"#utility.yul\":3952:3953   */\n      dup2\n        /* \"#utility.yul\":3948:3958   */\n      add\n        /* \"#utility.yul\":3943:3958   */\n      swap1\n      pop\n        /* \"#utility.yul\":3919:4032   */\n      jump(tag_437)\n    tag_439:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4057:4063   */\n      dup5\n        /* \"#utility.yul\":4052:4055   */\n      dup5\n        /* \"#utility.yul\":4048:4064   */\n      add\n        /* \"#utility.yul\":4041:4068   */\n      mstore\n        /* \"#utility.yul\":3890:4074   */\n      pop\n        /* \"#utility.yul\":3828:4074   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4080:4182   */\n    tag_347:\n        /* \"#utility.yul\":4121:4127   */\n      0x00\n        /* \"#utility.yul\":4172:4174   */\n      0x1f\n        /* \"#utility.yul\":4168:4175   */\n      not\n        /* \"#utility.yul\":4163:4165   */\n      0x1f\n        /* \"#utility.yul\":4156:4161   */\n      dup4\n        /* \"#utility.yul\":4152:4166   */\n      add\n        /* \"#utility.yul\":4148:4176   */\n      and\n        /* \"#utility.yul\":4138:4176   */\n      swap1\n      pop\n        /* \"#utility.yul\":4080:4182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4188:4565   */\n    tag_348:\n        /* \"#utility.yul\":4276:4279   */\n      0x00\n        /* \"#utility.yul\":4304:4343   */\n      tag_442\n        /* \"#utility.yul\":4337:4342   */\n      dup3\n        /* \"#utility.yul\":4304:4343   */\n      tag_344\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4359:4430   */\n      tag_443\n        /* \"#utility.yul\":4423:4429   */\n      dup2\n        /* \"#utility.yul\":4418:4421   */\n      dup6\n        /* \"#utility.yul\":4359:4430   */\n      tag_345\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":4352:4430   */\n      swap4\n      pop\n        /* \"#utility.yul\":4439:4504   */\n      tag_444\n        /* \"#utility.yul\":4497:4503   */\n      dup2\n        /* \"#utility.yul\":4492:4495   */\n      dup6\n        /* \"#utility.yul\":4485:4489   */\n      0x20\n        /* \"#utility.yul\":4478:4483   */\n      dup7\n        /* \"#utility.yul\":4474:4490   */\n      add\n        /* \"#utility.yul\":4439:4504   */\n      tag_346\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":4529:4558   */\n      tag_445\n        /* \"#utility.yul\":4551:4557   */\n      dup2\n        /* \"#utility.yul\":4529:4558   */\n      tag_347\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":4524:4527   */\n      dup5\n        /* \"#utility.yul\":4520:4559   */\n      add\n        /* \"#utility.yul\":4513:4559   */\n      swap2\n      pop\n        /* \"#utility.yul\":4280:4565   */\n      pop\n        /* \"#utility.yul\":4188:4565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4571:4884   */\n    tag_41:\n        /* \"#utility.yul\":4684:4688   */\n      0x00\n        /* \"#utility.yul\":4722:4724   */\n      0x20\n        /* \"#utility.yul\":4711:4720   */\n      dup3\n        /* \"#utility.yul\":4707:4725   */\n      add\n        /* \"#utility.yul\":4699:4725   */\n      swap1\n      pop\n        /* \"#utility.yul\":4771:4780   */\n      dup2\n        /* \"#utility.yul\":4765:4769   */\n      dup2\n        /* \"#utility.yul\":4761:4781   */\n      sub\n        /* \"#utility.yul\":4757:4758   */\n      0x00\n        /* \"#utility.yul\":4746:4755   */\n      dup4\n        /* \"#utility.yul\":4742:4759   */\n      add\n        /* \"#utility.yul\":4735:4782   */\n      mstore\n        /* \"#utility.yul\":4799:4877   */\n      tag_447\n        /* \"#utility.yul\":4872:4876   */\n      dup2\n        /* \"#utility.yul\":4863:4869   */\n      dup5\n        /* \"#utility.yul\":4799:4877   */\n      tag_348\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":4791:4877   */\n      swap1\n      pop\n        /* \"#utility.yul\":4571:4884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:4967   */\n    tag_349:\n        /* \"#utility.yul\":4927:4934   */\n      0x00\n        /* \"#utility.yul\":4956:4961   */\n      dup2\n        /* \"#utility.yul\":4945:4961   */\n      swap1\n      pop\n        /* \"#utility.yul\":4890:4967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4973:5095   */\n    tag_350:\n        /* \"#utility.yul\":5046:5070   */\n      tag_450\n        /* \"#utility.yul\":5064:5069   */\n      dup2\n        /* \"#utility.yul\":5046:5070   */\n      tag_349\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":5039:5044   */\n      dup2\n        /* \"#utility.yul\":5036:5071   */\n      eq\n        /* \"#utility.yul\":5026:5089   */\n      tag_451\n      jumpi\n        /* \"#utility.yul\":5085:5086   */\n      0x00\n        /* \"#utility.yul\":5082:5083   */\n      dup1\n        /* \"#utility.yul\":5075:5087   */\n      revert\n        /* \"#utility.yul\":5026:5089   */\n    tag_451:\n        /* \"#utility.yul\":4973:5095   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5101:5240   */\n    tag_351:\n        /* \"#utility.yul\":5147:5152   */\n      0x00\n        /* \"#utility.yul\":5185:5191   */\n      dup2\n        /* \"#utility.yul\":5172:5192   */\n      calldataload\n        /* \"#utility.yul\":5163:5192   */\n      swap1\n      pop\n        /* \"#utility.yul\":5201:5234   */\n      tag_453\n        /* \"#utility.yul\":5228:5233   */\n      dup2\n        /* \"#utility.yul\":5201:5234   */\n      tag_350\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":5101:5240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5246:5575   */\n    tag_44:\n        /* \"#utility.yul\":5305:5311   */\n      0x00\n        /* \"#utility.yul\":5354:5356   */\n      0x20\n        /* \"#utility.yul\":5342:5351   */\n      dup3\n        /* \"#utility.yul\":5333:5340   */\n      dup5\n        /* \"#utility.yul\":5329:5352   */\n      sub\n        /* \"#utility.yul\":5325:5357   */\n      slt\n        /* \"#utility.yul\":5322:5441   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":5360:5439   */\n      tag_456\n      tag_329\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":5322:5441   */\n    tag_455:\n        /* \"#utility.yul\":5480:5481   */\n      0x00\n        /* \"#utility.yul\":5505:5558   */\n      tag_457\n        /* \"#utility.yul\":5550:5557   */\n      dup5\n        /* \"#utility.yul\":5541:5547   */\n      dup3\n        /* \"#utility.yul\":5530:5539   */\n      dup6\n        /* \"#utility.yul\":5526:5548   */\n      add\n        /* \"#utility.yul\":5505:5558   */\n      tag_351\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":5495:5558   */\n      swap2\n      pop\n        /* \"#utility.yul\":5451:5568   */\n      pop\n        /* \"#utility.yul\":5246:5575   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5581:5699   */\n    tag_352:\n        /* \"#utility.yul\":5668:5692   */\n      tag_459\n        /* \"#utility.yul\":5686:5691   */\n      dup2\n        /* \"#utility.yul\":5668:5692   */\n      tag_349\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":5663:5666   */\n      dup3\n        /* \"#utility.yul\":5656:5693   */\n      mstore\n        /* \"#utility.yul\":5581:5699   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5705:5927   */\n    tag_47:\n        /* \"#utility.yul\":5798:5802   */\n      0x00\n        /* \"#utility.yul\":5836:5838   */\n      0x20\n        /* \"#utility.yul\":5825:5834   */\n      dup3\n        /* \"#utility.yul\":5821:5839   */\n      add\n        /* \"#utility.yul\":5813:5839   */\n      swap1\n      pop\n        /* \"#utility.yul\":5849:5920   */\n      tag_461\n        /* \"#utility.yul\":5917:5918   */\n      0x00\n        /* \"#utility.yul\":5906:5915   */\n      dup4\n        /* \"#utility.yul\":5902:5919   */\n      add\n        /* \"#utility.yul\":5893:5899   */\n      dup5\n        /* \"#utility.yul\":5849:5920   */\n      tag_352\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":5705:5927   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5933:6050   */\n    tag_353:\n        /* \"#utility.yul\":6042:6043   */\n      0x00\n        /* \"#utility.yul\":6039:6040   */\n      dup1\n        /* \"#utility.yul\":6032:6044   */\n      revert\n        /* \"#utility.yul\":6056:6236   */\n    tag_150:\n        /* \"#utility.yul\":6104:6181   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6094:6182   */\n      mstore\n        /* \"#utility.yul\":6201:6205   */\n      0x41\n        /* \"#utility.yul\":6198:6199   */\n      0x04\n        /* \"#utility.yul\":6191:6206   */\n      mstore\n        /* \"#utility.yul\":6225:6229   */\n      0x24\n        /* \"#utility.yul\":6222:6223   */\n      0x00\n        /* \"#utility.yul\":6215:6230   */\n      revert\n        /* \"#utility.yul\":6242:6523   */\n    tag_354:\n        /* \"#utility.yul\":6325:6352   */\n      tag_465\n        /* \"#utility.yul\":6347:6351   */\n      dup3\n        /* \"#utility.yul\":6325:6352   */\n      tag_347\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":6317:6323   */\n      dup2\n        /* \"#utility.yul\":6313:6353   */\n      add\n        /* \"#utility.yul\":6455:6461   */\n      dup2\n        /* \"#utility.yul\":6443:6453   */\n      dup2\n        /* \"#utility.yul\":6440:6462   */\n      lt\n        /* \"#utility.yul\":6419:6437   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6407:6417   */\n      dup3\n        /* \"#utility.yul\":6404:6438   */\n      gt\n        /* \"#utility.yul\":6401:6463   */\n      or\n        /* \"#utility.yul\":6398:6486   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":6466:6484   */\n      tag_467\n      tag_150\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":6398:6486   */\n    tag_466:\n        /* \"#utility.yul\":6506:6516   */\n      dup1\n        /* \"#utility.yul\":6502:6504   */\n      0x40\n        /* \"#utility.yul\":6495:6517   */\n      mstore\n        /* \"#utility.yul\":6285:6523   */\n      pop\n        /* \"#utility.yul\":6242:6523   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6529:6658   */\n    tag_355:\n        /* \"#utility.yul\":6563:6569   */\n      0x00\n        /* \"#utility.yul\":6590:6610   */\n      tag_469\n      tag_328\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":6580:6610   */\n      swap1\n      pop\n        /* \"#utility.yul\":6619:6652   */\n      tag_470\n        /* \"#utility.yul\":6647:6651   */\n      dup3\n        /* \"#utility.yul\":6639:6645   */\n      dup3\n        /* \"#utility.yul\":6619:6652   */\n      tag_354\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":6529:6658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6664:6975   */\n    tag_356:\n        /* \"#utility.yul\":6741:6745   */\n      0x00\n        /* \"#utility.yul\":6831:6849   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6823:6829   */\n      dup3\n        /* \"#utility.yul\":6820:6850   */\n      gt\n        /* \"#utility.yul\":6817:6873   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":6853:6871   */\n      tag_473\n      tag_150\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":6817:6873   */\n    tag_472:\n        /* \"#utility.yul\":6903:6907   */\n      0x20\n        /* \"#utility.yul\":6895:6901   */\n      dup3\n        /* \"#utility.yul\":6891:6908   */\n      mul\n        /* \"#utility.yul\":6883:6908   */\n      swap1\n      pop\n        /* \"#utility.yul\":6963:6967   */\n      0x20\n        /* \"#utility.yul\":6957:6961   */\n      dup2\n        /* \"#utility.yul\":6953:6968   */\n      add\n        /* \"#utility.yul\":6945:6968   */\n      swap1\n      pop\n        /* \"#utility.yul\":6664:6975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6981:7098   */\n    tag_357:\n        /* \"#utility.yul\":7090:7091   */\n      0x00\n        /* \"#utility.yul\":7087:7088   */\n      dup1\n        /* \"#utility.yul\":7080:7092   */\n      revert\n        /* \"#utility.yul\":7121:7831   */\n    tag_358:\n        /* \"#utility.yul\":7217:7222   */\n      0x00\n        /* \"#utility.yul\":7242:7323   */\n      tag_476\n        /* \"#utility.yul\":7258:7322   */\n      tag_477\n        /* \"#utility.yul\":7315:7321   */\n      dup5\n        /* \"#utility.yul\":7258:7322   */\n      tag_356\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":7242:7323   */\n      tag_355\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":7233:7323   */\n      swap1\n      pop\n        /* \"#utility.yul\":7343:7348   */\n      dup1\n        /* \"#utility.yul\":7372:7378   */\n      dup4\n        /* \"#utility.yul\":7365:7370   */\n      dup3\n        /* \"#utility.yul\":7358:7379   */\n      mstore\n        /* \"#utility.yul\":7406:7410   */\n      0x20\n        /* \"#utility.yul\":7399:7404   */\n      dup3\n        /* \"#utility.yul\":7395:7411   */\n      add\n        /* \"#utility.yul\":7388:7411   */\n      swap1\n      pop\n        /* \"#utility.yul\":7459:7463   */\n      0x20\n        /* \"#utility.yul\":7451:7457   */\n      dup5\n        /* \"#utility.yul\":7447:7464   */\n      mul\n        /* \"#utility.yul\":7439:7445   */\n      dup4\n        /* \"#utility.yul\":7435:7465   */\n      add\n        /* \"#utility.yul\":7488:7491   */\n      dup6\n        /* \"#utility.yul\":7480:7486   */\n      dup2\n        /* \"#utility.yul\":7477:7492   */\n      gt\n        /* \"#utility.yul\":7474:7596   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":7507:7586   */\n      tag_479\n      tag_357\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":7474:7596   */\n    tag_478:\n        /* \"#utility.yul\":7622:7628   */\n      dup4\n        /* \"#utility.yul\":7605:7825   */\n    tag_480:\n        /* \"#utility.yul\":7639:7645   */\n      dup2\n        /* \"#utility.yul\":7634:7637   */\n      dup2\n        /* \"#utility.yul\":7631:7646   */\n      lt\n        /* \"#utility.yul\":7605:7825   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":7714:7717   */\n      dup1\n        /* \"#utility.yul\":7743:7780   */\n      tag_483\n        /* \"#utility.yul\":7776:7779   */\n      dup9\n        /* \"#utility.yul\":7764:7774   */\n      dup3\n        /* \"#utility.yul\":7743:7780   */\n      tag_337\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":7738:7741   */\n      dup5\n        /* \"#utility.yul\":7731:7781   */\n      mstore\n        /* \"#utility.yul\":7810:7814   */\n      0x20\n        /* \"#utility.yul\":7805:7808   */\n      dup5\n        /* \"#utility.yul\":7801:7815   */\n      add\n        /* \"#utility.yul\":7794:7815   */\n      swap4\n      pop\n        /* \"#utility.yul\":7681:7825   */\n      pop\n        /* \"#utility.yul\":7665:7669   */\n      0x20\n        /* \"#utility.yul\":7660:7663   */\n      dup2\n        /* \"#utility.yul\":7656:7670   */\n      add\n        /* \"#utility.yul\":7649:7670   */\n      swap1\n      pop\n        /* \"#utility.yul\":7605:7825   */\n      jump(tag_480)\n    tag_482:\n        /* \"#utility.yul\":7609:7630   */\n      pop\n        /* \"#utility.yul\":7223:7831   */\n      pop\n      pop\n        /* \"#utility.yul\":7121:7831   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7854:8224   */\n    tag_359:\n        /* \"#utility.yul\":7925:7930   */\n      0x00\n        /* \"#utility.yul\":7974:7977   */\n      dup3\n        /* \"#utility.yul\":7967:7971   */\n      0x1f\n        /* \"#utility.yul\":7959:7965   */\n      dup4\n        /* \"#utility.yul\":7955:7972   */\n      add\n        /* \"#utility.yul\":7951:7978   */\n      slt\n        /* \"#utility.yul\":7941:8063   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":7982:8061   */\n      tag_486\n      tag_353\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":7941:8063   */\n    tag_485:\n        /* \"#utility.yul\":8099:8105   */\n      dup2\n        /* \"#utility.yul\":8086:8106   */\n      calldataload\n        /* \"#utility.yul\":8124:8218   */\n      tag_487\n        /* \"#utility.yul\":8214:8217   */\n      dup5\n        /* \"#utility.yul\":8206:8212   */\n      dup3\n        /* \"#utility.yul\":8199:8203   */\n      0x20\n        /* \"#utility.yul\":8191:8197   */\n      dup7\n        /* \"#utility.yul\":8187:8204   */\n      add\n        /* \"#utility.yul\":8124:8218   */\n      tag_358\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":8115:8218   */\n      swap2\n      pop\n        /* \"#utility.yul\":7931:8224   */\n      pop\n        /* \"#utility.yul\":7854:8224   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8230:8347   */\n    tag_360:\n        /* \"#utility.yul\":8339:8340   */\n      0x00\n        /* \"#utility.yul\":8336:8337   */\n      dup1\n        /* \"#utility.yul\":8329:8341   */\n      revert\n        /* \"#utility.yul\":8353:8660   */\n    tag_361:\n        /* \"#utility.yul\":8414:8418   */\n      0x00\n        /* \"#utility.yul\":8504:8522   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8496:8502   */\n      dup3\n        /* \"#utility.yul\":8493:8523   */\n      gt\n        /* \"#utility.yul\":8490:8546   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":8526:8544   */\n      tag_491\n      tag_150\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":8490:8546   */\n    tag_490:\n        /* \"#utility.yul\":8564:8593   */\n      tag_492\n        /* \"#utility.yul\":8586:8592   */\n      dup3\n        /* \"#utility.yul\":8564:8593   */\n      tag_347\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":8556:8593   */\n      swap1\n      pop\n        /* \"#utility.yul\":8648:8652   */\n      0x20\n        /* \"#utility.yul\":8642:8646   */\n      dup2\n        /* \"#utility.yul\":8638:8653   */\n      add\n        /* \"#utility.yul\":8630:8653   */\n      swap1\n      pop\n        /* \"#utility.yul\":8353:8660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8666:8812   */\n    tag_362:\n        /* \"#utility.yul\":8763:8769   */\n      dup3\n        /* \"#utility.yul\":8758:8761   */\n      dup2\n        /* \"#utility.yul\":8753:8756   */\n      dup4\n        /* \"#utility.yul\":8740:8770   */\n      calldatacopy\n        /* \"#utility.yul\":8804:8805   */\n      0x00\n        /* \"#utility.yul\":8795:8801   */\n      dup4\n        /* \"#utility.yul\":8790:8793   */\n      dup4\n        /* \"#utility.yul\":8786:8802   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      mstore\n        /* \"#utility.yul\":8666:8812   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8818:9241   */\n    tag_363:\n        /* \"#utility.yul\":8895:8900   */\n      0x00\n        /* \"#utility.yul\":8920:8985   */\n      tag_495\n        /* \"#utility.yul\":8936:8984   */\n      tag_496\n        /* \"#utility.yul\":8977:8983   */\n      dup5\n        /* \"#utility.yul\":8936:8984   */\n      tag_361\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":8920:8985   */\n      tag_355\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":8911:8985   */\n      swap1\n      pop\n        /* \"#utility.yul\":9008:9014   */\n      dup3\n        /* \"#utility.yul\":9001:9006   */\n      dup2\n        /* \"#utility.yul\":8994:9015   */\n      mstore\n        /* \"#utility.yul\":9046:9050   */\n      0x20\n        /* \"#utility.yul\":9039:9044   */\n      dup2\n        /* \"#utility.yul\":9035:9051   */\n      add\n        /* \"#utility.yul\":9084:9087   */\n      dup5\n        /* \"#utility.yul\":9075:9081   */\n      dup5\n        /* \"#utility.yul\":9070:9073   */\n      dup5\n        /* \"#utility.yul\":9066:9082   */\n      add\n        /* \"#utility.yul\":9063:9088   */\n      gt\n        /* \"#utility.yul\":9060:9172   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":9091:9170   */\n      tag_498\n      tag_360\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9060:9172   */\n    tag_497:\n        /* \"#utility.yul\":9181:9235   */\n      tag_499\n        /* \"#utility.yul\":9228:9234   */\n      dup5\n        /* \"#utility.yul\":9223:9226   */\n      dup3\n        /* \"#utility.yul\":9218:9221   */\n      dup6\n        /* \"#utility.yul\":9181:9235   */\n      tag_362\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":8901:9241   */\n      pop\n        /* \"#utility.yul\":8818:9241   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9260:9598   */\n    tag_364:\n        /* \"#utility.yul\":9315:9320   */\n      0x00\n        /* \"#utility.yul\":9364:9367   */\n      dup3\n        /* \"#utility.yul\":9357:9361   */\n      0x1f\n        /* \"#utility.yul\":9349:9355   */\n      dup4\n        /* \"#utility.yul\":9345:9362   */\n      add\n        /* \"#utility.yul\":9341:9368   */\n      slt\n        /* \"#utility.yul\":9331:9453   */\n      tag_501\n      jumpi\n        /* \"#utility.yul\":9372:9451   */\n      tag_502\n      tag_353\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":9331:9453   */\n    tag_501:\n        /* \"#utility.yul\":9489:9495   */\n      dup2\n        /* \"#utility.yul\":9476:9496   */\n      calldataload\n        /* \"#utility.yul\":9514:9592   */\n      tag_503\n        /* \"#utility.yul\":9588:9591   */\n      dup5\n        /* \"#utility.yul\":9580:9586   */\n      dup3\n        /* \"#utility.yul\":9573:9577   */\n      0x20\n        /* \"#utility.yul\":9565:9571   */\n      dup7\n        /* \"#utility.yul\":9561:9578   */\n      add\n        /* \"#utility.yul\":9514:9592   */\n      tag_363\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":9505:9592   */\n      swap2\n      pop\n        /* \"#utility.yul\":9321:9598   */\n      pop\n        /* \"#utility.yul\":9260:9598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9604:11113   */\n    tag_50:\n        /* \"#utility.yul\":9758:9764   */\n      0x00\n        /* \"#utility.yul\":9766:9772   */\n      dup1\n        /* \"#utility.yul\":9774:9780   */\n      0x00\n        /* \"#utility.yul\":9782:9788   */\n      dup1\n        /* \"#utility.yul\":9790:9796   */\n      0x00\n        /* \"#utility.yul\":9839:9842   */\n      0xa0\n        /* \"#utility.yul\":9827:9836   */\n      dup7\n        /* \"#utility.yul\":9818:9825   */\n      dup9\n        /* \"#utility.yul\":9814:9837   */\n      sub\n        /* \"#utility.yul\":9810:9843   */\n      slt\n        /* \"#utility.yul\":9807:9927   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":9846:9925   */\n      tag_506\n      tag_329\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":9807:9927   */\n    tag_505:\n        /* \"#utility.yul\":9966:9967   */\n      0x00\n        /* \"#utility.yul\":9991:10044   */\n      tag_507\n        /* \"#utility.yul\":10036:10043   */\n      dup9\n        /* \"#utility.yul\":10027:10033   */\n      dup3\n        /* \"#utility.yul\":10016:10025   */\n      dup10\n        /* \"#utility.yul\":10012:10034   */\n      add\n        /* \"#utility.yul\":9991:10044   */\n      tag_334\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":9981:10044   */\n      swap6\n      pop\n        /* \"#utility.yul\":9937:10054   */\n      pop\n        /* \"#utility.yul\":10093:10095   */\n      0x20\n        /* \"#utility.yul\":10119:10172   */\n      tag_508\n        /* \"#utility.yul\":10164:10171   */\n      dup9\n        /* \"#utility.yul\":10155:10161   */\n      dup3\n        /* \"#utility.yul\":10144:10153   */\n      dup10\n        /* \"#utility.yul\":10140:10162   */\n      add\n        /* \"#utility.yul\":10119:10172   */\n      tag_334\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":10109:10172   */\n      swap5\n      pop\n        /* \"#utility.yul\":10064:10182   */\n      pop\n        /* \"#utility.yul\":10249:10251   */\n      0x40\n        /* \"#utility.yul\":10238:10247   */\n      dup7\n        /* \"#utility.yul\":10234:10252   */\n      add\n        /* \"#utility.yul\":10221:10253   */\n      calldataload\n        /* \"#utility.yul\":10280:10298   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10272:10278   */\n      dup2\n        /* \"#utility.yul\":10269:10299   */\n      gt\n        /* \"#utility.yul\":10266:10383   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":10302:10381   */\n      tag_510\n      tag_330\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":10266:10383   */\n    tag_509:\n        /* \"#utility.yul\":10407:10485   */\n      tag_511\n        /* \"#utility.yul\":10477:10484   */\n      dup9\n        /* \"#utility.yul\":10468:10474   */\n      dup3\n        /* \"#utility.yul\":10457:10466   */\n      dup10\n        /* \"#utility.yul\":10453:10475   */\n      add\n        /* \"#utility.yul\":10407:10485   */\n      tag_359\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":10397:10485   */\n      swap4\n      pop\n        /* \"#utility.yul\":10192:10495   */\n      pop\n        /* \"#utility.yul\":10562:10564   */\n      0x60\n        /* \"#utility.yul\":10551:10560   */\n      dup7\n        /* \"#utility.yul\":10547:10565   */\n      add\n        /* \"#utility.yul\":10534:10566   */\n      calldataload\n        /* \"#utility.yul\":10593:10611   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10585:10591   */\n      dup2\n        /* \"#utility.yul\":10582:10612   */\n      gt\n        /* \"#utility.yul\":10579:10696   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":10615:10694   */\n      tag_513\n      tag_330\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10579:10696   */\n    tag_512:\n        /* \"#utility.yul\":10720:10798   */\n      tag_514\n        /* \"#utility.yul\":10790:10797   */\n      dup9\n        /* \"#utility.yul\":10781:10787   */\n      dup3\n        /* \"#utility.yul\":10770:10779   */\n      dup10\n        /* \"#utility.yul\":10766:10788   */\n      add\n        /* \"#utility.yul\":10720:10798   */\n      tag_359\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":10710:10798   */\n      swap3\n      pop\n        /* \"#utility.yul\":10505:10808   */\n      pop\n        /* \"#utility.yul\":10875:10878   */\n      0x80\n        /* \"#utility.yul\":10864:10873   */\n      dup7\n        /* \"#utility.yul\":10860:10879   */\n      add\n        /* \"#utility.yul\":10847:10880   */\n      calldataload\n        /* \"#utility.yul\":10907:10925   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10899:10905   */\n      dup2\n        /* \"#utility.yul\":10896:10926   */\n      gt\n        /* \"#utility.yul\":10893:11010   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":10929:11008   */\n      tag_516\n      tag_330\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":10893:11010   */\n    tag_515:\n        /* \"#utility.yul\":11034:11096   */\n      tag_517\n        /* \"#utility.yul\":11088:11095   */\n      dup9\n        /* \"#utility.yul\":11079:11085   */\n      dup3\n        /* \"#utility.yul\":11068:11077   */\n      dup10\n        /* \"#utility.yul\":11064:11086   */\n      add\n        /* \"#utility.yul\":11034:11096   */\n      tag_364\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":11024:11096   */\n      swap2\n      pop\n        /* \"#utility.yul\":10818:11106   */\n      pop\n        /* \"#utility.yul\":9604:11113   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11119:11593   */\n    tag_54:\n        /* \"#utility.yul\":11187:11193   */\n      0x00\n        /* \"#utility.yul\":11195:11201   */\n      dup1\n        /* \"#utility.yul\":11244:11246   */\n      0x40\n        /* \"#utility.yul\":11232:11241   */\n      dup4\n        /* \"#utility.yul\":11223:11230   */\n      dup6\n        /* \"#utility.yul\":11219:11242   */\n      sub\n        /* \"#utility.yul\":11215:11247   */\n      slt\n        /* \"#utility.yul\":11212:11331   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":11250:11329   */\n      tag_520\n      tag_329\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":11212:11331   */\n    tag_519:\n        /* \"#utility.yul\":11370:11371   */\n      0x00\n        /* \"#utility.yul\":11395:11448   */\n      tag_521\n        /* \"#utility.yul\":11440:11447   */\n      dup6\n        /* \"#utility.yul\":11431:11437   */\n      dup3\n        /* \"#utility.yul\":11420:11429   */\n      dup7\n        /* \"#utility.yul\":11416:11438   */\n      add\n        /* \"#utility.yul\":11395:11448   */\n      tag_351\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":11385:11448   */\n      swap3\n      pop\n        /* \"#utility.yul\":11341:11458   */\n      pop\n        /* \"#utility.yul\":11497:11499   */\n      0x20\n        /* \"#utility.yul\":11523:11576   */\n      tag_522\n        /* \"#utility.yul\":11568:11575   */\n      dup6\n        /* \"#utility.yul\":11559:11565   */\n      dup3\n        /* \"#utility.yul\":11548:11557   */\n      dup7\n        /* \"#utility.yul\":11544:11566   */\n      add\n        /* \"#utility.yul\":11523:11576   */\n      tag_334\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":11513:11576   */\n      swap2\n      pop\n        /* \"#utility.yul\":11468:11586   */\n      pop\n        /* \"#utility.yul\":11119:11593   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11599:11910   */\n    tag_365:\n        /* \"#utility.yul\":11676:11680   */\n      0x00\n        /* \"#utility.yul\":11766:11784   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11758:11764   */\n      dup3\n        /* \"#utility.yul\":11755:11785   */\n      gt\n        /* \"#utility.yul\":11752:11808   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":11788:11806   */\n      tag_525\n      tag_150\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":11752:11808   */\n    tag_524:\n        /* \"#utility.yul\":11838:11842   */\n      0x20\n        /* \"#utility.yul\":11830:11836   */\n      dup3\n        /* \"#utility.yul\":11826:11843   */\n      mul\n        /* \"#utility.yul\":11818:11843   */\n      swap1\n      pop\n        /* \"#utility.yul\":11898:11902   */\n      0x20\n        /* \"#utility.yul\":11892:11896   */\n      dup2\n        /* \"#utility.yul\":11888:11903   */\n      add\n        /* \"#utility.yul\":11880:11903   */\n      swap1\n      pop\n        /* \"#utility.yul\":11599:11910   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11933:12643   */\n    tag_366:\n        /* \"#utility.yul\":12029:12034   */\n      0x00\n        /* \"#utility.yul\":12054:12135   */\n      tag_527\n        /* \"#utility.yul\":12070:12134   */\n      tag_528\n        /* \"#utility.yul\":12127:12133   */\n      dup5\n        /* \"#utility.yul\":12070:12134   */\n      tag_365\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":12054:12135   */\n      tag_355\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":12045:12135   */\n      swap1\n      pop\n        /* \"#utility.yul\":12155:12160   */\n      dup1\n        /* \"#utility.yul\":12184:12190   */\n      dup4\n        /* \"#utility.yul\":12177:12182   */\n      dup3\n        /* \"#utility.yul\":12170:12191   */\n      mstore\n        /* \"#utility.yul\":12218:12222   */\n      0x20\n        /* \"#utility.yul\":12211:12216   */\n      dup3\n        /* \"#utility.yul\":12207:12223   */\n      add\n        /* \"#utility.yul\":12200:12223   */\n      swap1\n      pop\n        /* \"#utility.yul\":12271:12275   */\n      0x20\n        /* \"#utility.yul\":12263:12269   */\n      dup5\n        /* \"#utility.yul\":12259:12276   */\n      mul\n        /* \"#utility.yul\":12251:12257   */\n      dup4\n        /* \"#utility.yul\":12247:12277   */\n      add\n        /* \"#utility.yul\":12300:12303   */\n      dup6\n        /* \"#utility.yul\":12292:12298   */\n      dup2\n        /* \"#utility.yul\":12289:12304   */\n      gt\n        /* \"#utility.yul\":12286:12408   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":12319:12398   */\n      tag_530\n      tag_357\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":12286:12408   */\n    tag_529:\n        /* \"#utility.yul\":12434:12440   */\n      dup4\n        /* \"#utility.yul\":12417:12637   */\n    tag_531:\n        /* \"#utility.yul\":12451:12457   */\n      dup2\n        /* \"#utility.yul\":12446:12449   */\n      dup2\n        /* \"#utility.yul\":12443:12458   */\n      lt\n        /* \"#utility.yul\":12417:12637   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":12526:12529   */\n      dup1\n        /* \"#utility.yul\":12555:12592   */\n      tag_534\n        /* \"#utility.yul\":12588:12591   */\n      dup9\n        /* \"#utility.yul\":12576:12586   */\n      dup3\n        /* \"#utility.yul\":12555:12592   */\n      tag_334\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":12550:12553   */\n      dup5\n        /* \"#utility.yul\":12543:12593   */\n      mstore\n        /* \"#utility.yul\":12622:12626   */\n      0x20\n        /* \"#utility.yul\":12617:12620   */\n      dup5\n        /* \"#utility.yul\":12613:12627   */\n      add\n        /* \"#utility.yul\":12606:12627   */\n      swap4\n      pop\n        /* \"#utility.yul\":12493:12637   */\n      pop\n        /* \"#utility.yul\":12477:12481   */\n      0x20\n        /* \"#utility.yul\":12472:12475   */\n      dup2\n        /* \"#utility.yul\":12468:12482   */\n      add\n        /* \"#utility.yul\":12461:12482   */\n      swap1\n      pop\n        /* \"#utility.yul\":12417:12637   */\n      jump(tag_531)\n    tag_533:\n        /* \"#utility.yul\":12421:12442   */\n      pop\n        /* \"#utility.yul\":12035:12643   */\n      pop\n      pop\n        /* \"#utility.yul\":11933:12643   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12666:13036   */\n    tag_367:\n        /* \"#utility.yul\":12737:12742   */\n      0x00\n        /* \"#utility.yul\":12786:12789   */\n      dup3\n        /* \"#utility.yul\":12779:12783   */\n      0x1f\n        /* \"#utility.yul\":12771:12777   */\n      dup4\n        /* \"#utility.yul\":12767:12784   */\n      add\n        /* \"#utility.yul\":12763:12790   */\n      slt\n        /* \"#utility.yul\":12753:12875   */\n      tag_536\n      jumpi\n        /* \"#utility.yul\":12794:12873   */\n      tag_537\n      tag_353\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":12753:12875   */\n    tag_536:\n        /* \"#utility.yul\":12911:12917   */\n      dup2\n        /* \"#utility.yul\":12898:12918   */\n      calldataload\n        /* \"#utility.yul\":12936:13030   */\n      tag_538\n        /* \"#utility.yul\":13026:13029   */\n      dup5\n        /* \"#utility.yul\":13018:13024   */\n      dup3\n        /* \"#utility.yul\":13011:13015   */\n      0x20\n        /* \"#utility.yul\":13003:13009   */\n      dup7\n        /* \"#utility.yul\":12999:13016   */\n      add\n        /* \"#utility.yul\":12936:13030   */\n      tag_366\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":12927:13030   */\n      swap2\n      pop\n        /* \"#utility.yul\":12743:13036   */\n      pop\n        /* \"#utility.yul\":12666:13036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13042:13936   */\n    tag_64:\n        /* \"#utility.yul\":13160:13166   */\n      0x00\n        /* \"#utility.yul\":13168:13174   */\n      dup1\n        /* \"#utility.yul\":13217:13219   */\n      0x40\n        /* \"#utility.yul\":13205:13214   */\n      dup4\n        /* \"#utility.yul\":13196:13203   */\n      dup6\n        /* \"#utility.yul\":13192:13215   */\n      sub\n        /* \"#utility.yul\":13188:13220   */\n      slt\n        /* \"#utility.yul\":13185:13304   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":13223:13302   */\n      tag_541\n      tag_329\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":13185:13304   */\n    tag_540:\n        /* \"#utility.yul\":13371:13372   */\n      0x00\n        /* \"#utility.yul\":13360:13369   */\n      dup4\n        /* \"#utility.yul\":13356:13373   */\n      add\n        /* \"#utility.yul\":13343:13374   */\n      calldataload\n        /* \"#utility.yul\":13401:13419   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13393:13399   */\n      dup2\n        /* \"#utility.yul\":13390:13420   */\n      gt\n        /* \"#utility.yul\":13387:13504   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":13423:13502   */\n      tag_543\n      tag_330\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":13387:13504   */\n    tag_542:\n        /* \"#utility.yul\":13528:13606   */\n      tag_544\n        /* \"#utility.yul\":13598:13605   */\n      dup6\n        /* \"#utility.yul\":13589:13595   */\n      dup3\n        /* \"#utility.yul\":13578:13587   */\n      dup7\n        /* \"#utility.yul\":13574:13596   */\n      add\n        /* \"#utility.yul\":13528:13606   */\n      tag_367\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":13518:13606   */\n      swap3\n      pop\n        /* \"#utility.yul\":13314:13616   */\n      pop\n        /* \"#utility.yul\":13683:13685   */\n      0x20\n        /* \"#utility.yul\":13672:13681   */\n      dup4\n        /* \"#utility.yul\":13668:13686   */\n      add\n        /* \"#utility.yul\":13655:13687   */\n      calldataload\n        /* \"#utility.yul\":13714:13732   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13706:13712   */\n      dup2\n        /* \"#utility.yul\":13703:13733   */\n      gt\n        /* \"#utility.yul\":13700:13817   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":13736:13815   */\n      tag_546\n      tag_330\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":13700:13817   */\n    tag_545:\n        /* \"#utility.yul\":13841:13919   */\n      tag_547\n        /* \"#utility.yul\":13911:13918   */\n      dup6\n        /* \"#utility.yul\":13902:13908   */\n      dup3\n        /* \"#utility.yul\":13891:13900   */\n      dup7\n        /* \"#utility.yul\":13887:13909   */\n      add\n        /* \"#utility.yul\":13841:13919   */\n      tag_359\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":13831:13919   */\n      swap2\n      pop\n        /* \"#utility.yul\":13626:13929   */\n      pop\n        /* \"#utility.yul\":13042:13936   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13942:14056   */\n    tag_368:\n        /* \"#utility.yul\":14009:14015   */\n      0x00\n        /* \"#utility.yul\":14043:14048   */\n      dup2\n        /* \"#utility.yul\":14037:14049   */\n      mload\n        /* \"#utility.yul\":14027:14049   */\n      swap1\n      pop\n        /* \"#utility.yul\":13942:14056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14062:14246   */\n    tag_369:\n        /* \"#utility.yul\":14161:14172   */\n      0x00\n        /* \"#utility.yul\":14195:14201   */\n      dup3\n        /* \"#utility.yul\":14190:14193   */\n      dup3\n        /* \"#utility.yul\":14183:14202   */\n      mstore\n        /* \"#utility.yul\":14235:14239   */\n      0x20\n        /* \"#utility.yul\":14230:14233   */\n      dup3\n        /* \"#utility.yul\":14226:14240   */\n      add\n        /* \"#utility.yul\":14211:14240   */\n      swap1\n      pop\n        /* \"#utility.yul\":14062:14246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14252:14384   */\n    tag_370:\n        /* \"#utility.yul\":14319:14323   */\n      0x00\n        /* \"#utility.yul\":14342:14345   */\n      dup2\n        /* \"#utility.yul\":14334:14345   */\n      swap1\n      pop\n        /* \"#utility.yul\":14372:14376   */\n      0x20\n        /* \"#utility.yul\":14367:14370   */\n      dup3\n        /* \"#utility.yul\":14363:14377   */\n      add\n        /* \"#utility.yul\":14355:14377   */\n      swap1\n      pop\n        /* \"#utility.yul\":14252:14384   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14390:14498   */\n    tag_371:\n        /* \"#utility.yul\":14467:14491   */\n      tag_552\n        /* \"#utility.yul\":14485:14490   */\n      dup2\n        /* \"#utility.yul\":14467:14491   */\n      tag_335\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":14462:14465   */\n      dup3\n        /* \"#utility.yul\":14455:14492   */\n      mstore\n        /* \"#utility.yul\":14390:14498   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14504:14683   */\n    tag_372:\n        /* \"#utility.yul\":14573:14583   */\n      0x00\n        /* \"#utility.yul\":14594:14640   */\n      tag_554\n        /* \"#utility.yul\":14636:14639   */\n      dup4\n        /* \"#utility.yul\":14628:14634   */\n      dup4\n        /* \"#utility.yul\":14594:14640   */\n      tag_371\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":14672:14676   */\n      0x20\n        /* \"#utility.yul\":14667:14670   */\n      dup4\n        /* \"#utility.yul\":14663:14677   */\n      add\n        /* \"#utility.yul\":14649:14677   */\n      swap1\n      pop\n        /* \"#utility.yul\":14504:14683   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14689:14802   */\n    tag_373:\n        /* \"#utility.yul\":14759:14763   */\n      0x00\n        /* \"#utility.yul\":14791:14795   */\n      0x20\n        /* \"#utility.yul\":14786:14789   */\n      dup3\n        /* \"#utility.yul\":14782:14796   */\n      add\n        /* \"#utility.yul\":14774:14796   */\n      swap1\n      pop\n        /* \"#utility.yul\":14689:14802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14838:15570   */\n    tag_374:\n        /* \"#utility.yul\":14957:14960   */\n      0x00\n        /* \"#utility.yul\":14986:15040   */\n      tag_557\n        /* \"#utility.yul\":15034:15039   */\n      dup3\n        /* \"#utility.yul\":14986:15040   */\n      tag_368\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":15056:15142   */\n      tag_558\n        /* \"#utility.yul\":15135:15141   */\n      dup2\n        /* \"#utility.yul\":15130:15133   */\n      dup6\n        /* \"#utility.yul\":15056:15142   */\n      tag_369\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":15049:15142   */\n      swap4\n      pop\n        /* \"#utility.yul\":15166:15222   */\n      tag_559\n        /* \"#utility.yul\":15216:15221   */\n      dup4\n        /* \"#utility.yul\":15166:15222   */\n      tag_370\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":15245:15252   */\n      dup1\n        /* \"#utility.yul\":15276:15277   */\n      0x00\n        /* \"#utility.yul\":15261:15545   */\n    tag_560:\n        /* \"#utility.yul\":15286:15292   */\n      dup4\n        /* \"#utility.yul\":15283:15284   */\n      dup2\n        /* \"#utility.yul\":15280:15293   */\n      lt\n        /* \"#utility.yul\":15261:15545   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":15362:15368   */\n      dup2\n        /* \"#utility.yul\":15356:15369   */\n      mload\n        /* \"#utility.yul\":15389:15452   */\n      tag_563\n        /* \"#utility.yul\":15448:15451   */\n      dup9\n        /* \"#utility.yul\":15433:15446   */\n      dup3\n        /* \"#utility.yul\":15389:15452   */\n      tag_372\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":15382:15452   */\n      swap8\n      pop\n        /* \"#utility.yul\":15475:15535   */\n      tag_564\n        /* \"#utility.yul\":15528:15534   */\n      dup4\n        /* \"#utility.yul\":15475:15535   */\n      tag_373\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":15465:15535   */\n      swap3\n      pop\n        /* \"#utility.yul\":15321:15545   */\n      pop\n        /* \"#utility.yul\":15308:15309   */\n      0x01\n        /* \"#utility.yul\":15305:15306   */\n      dup2\n        /* \"#utility.yul\":15301:15310   */\n      add\n        /* \"#utility.yul\":15296:15310   */\n      swap1\n      pop\n        /* \"#utility.yul\":15261:15545   */\n      jump(tag_560)\n    tag_562:\n        /* \"#utility.yul\":15265:15279   */\n      pop\n        /* \"#utility.yul\":15561:15564   */\n      dup6\n        /* \"#utility.yul\":15554:15564   */\n      swap4\n      pop\n        /* \"#utility.yul\":14962:15570   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14838:15570   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15576:15949   */\n    tag_67:\n        /* \"#utility.yul\":15719:15723   */\n      0x00\n        /* \"#utility.yul\":15757:15759   */\n      0x20\n        /* \"#utility.yul\":15746:15755   */\n      dup3\n        /* \"#utility.yul\":15742:15760   */\n      add\n        /* \"#utility.yul\":15734:15760   */\n      swap1\n      pop\n        /* \"#utility.yul\":15806:15815   */\n      dup2\n        /* \"#utility.yul\":15800:15804   */\n      dup2\n        /* \"#utility.yul\":15796:15816   */\n      sub\n        /* \"#utility.yul\":15792:15793   */\n      0x00\n        /* \"#utility.yul\":15781:15790   */\n      dup4\n        /* \"#utility.yul\":15777:15794   */\n      add\n        /* \"#utility.yul\":15770:15817   */\n      mstore\n        /* \"#utility.yul\":15834:15942   */\n      tag_566\n        /* \"#utility.yul\":15937:15941   */\n      dup2\n        /* \"#utility.yul\":15928:15934   */\n      dup5\n        /* \"#utility.yul\":15834:15942   */\n      tag_374\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":15826:15942   */\n      swap1\n      pop\n        /* \"#utility.yul\":15576:15949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15955:16071   */\n    tag_375:\n        /* \"#utility.yul\":16025:16046   */\n      tag_568\n        /* \"#utility.yul\":16040:16045   */\n      dup2\n        /* \"#utility.yul\":16025:16046   */\n      tag_342\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":16018:16023   */\n      dup2\n        /* \"#utility.yul\":16015:16047   */\n      eq\n        /* \"#utility.yul\":16005:16065   */\n      tag_569\n      jumpi\n        /* \"#utility.yul\":16061:16062   */\n      0x00\n        /* \"#utility.yul\":16058:16059   */\n      dup1\n        /* \"#utility.yul\":16051:16063   */\n      revert\n        /* \"#utility.yul\":16005:16065   */\n    tag_569:\n        /* \"#utility.yul\":15955:16071   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16077:16210   */\n    tag_376:\n        /* \"#utility.yul\":16120:16125   */\n      0x00\n        /* \"#utility.yul\":16158:16164   */\n      dup2\n        /* \"#utility.yul\":16145:16165   */\n      calldataload\n        /* \"#utility.yul\":16136:16165   */\n      swap1\n      pop\n        /* \"#utility.yul\":16174:16204   */\n      tag_571\n        /* \"#utility.yul\":16198:16203   */\n      dup2\n        /* \"#utility.yul\":16174:16204   */\n      tag_375\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":16077:16210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16216:16684   */\n    tag_80:\n        /* \"#utility.yul\":16281:16287   */\n      0x00\n        /* \"#utility.yul\":16289:16295   */\n      dup1\n        /* \"#utility.yul\":16338:16340   */\n      0x40\n        /* \"#utility.yul\":16326:16335   */\n      dup4\n        /* \"#utility.yul\":16317:16324   */\n      dup6\n        /* \"#utility.yul\":16313:16336   */\n      sub\n        /* \"#utility.yul\":16309:16341   */\n      slt\n        /* \"#utility.yul\":16306:16425   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":16344:16423   */\n      tag_574\n      tag_329\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":16306:16425   */\n    tag_573:\n        /* \"#utility.yul\":16464:16465   */\n      0x00\n        /* \"#utility.yul\":16489:16542   */\n      tag_575\n        /* \"#utility.yul\":16534:16541   */\n      dup6\n        /* \"#utility.yul\":16525:16531   */\n      dup3\n        /* \"#utility.yul\":16514:16523   */\n      dup7\n        /* \"#utility.yul\":16510:16532   */\n      add\n        /* \"#utility.yul\":16489:16542   */\n      tag_334\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":16479:16542   */\n      swap3\n      pop\n        /* \"#utility.yul\":16435:16552   */\n      pop\n        /* \"#utility.yul\":16591:16593   */\n      0x20\n        /* \"#utility.yul\":16617:16667   */\n      tag_576\n        /* \"#utility.yul\":16659:16666   */\n      dup6\n        /* \"#utility.yul\":16650:16656   */\n      dup3\n        /* \"#utility.yul\":16639:16648   */\n      dup7\n        /* \"#utility.yul\":16635:16657   */\n      add\n        /* \"#utility.yul\":16617:16667   */\n      tag_376\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":16607:16667   */\n      swap2\n      pop\n        /* \"#utility.yul\":16562:16677   */\n      pop\n        /* \"#utility.yul\":16216:16684   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16690:17164   */\n    tag_90:\n        /* \"#utility.yul\":16758:16764   */\n      0x00\n        /* \"#utility.yul\":16766:16772   */\n      dup1\n        /* \"#utility.yul\":16815:16817   */\n      0x40\n        /* \"#utility.yul\":16803:16812   */\n      dup4\n        /* \"#utility.yul\":16794:16801   */\n      dup6\n        /* \"#utility.yul\":16790:16813   */\n      sub\n        /* \"#utility.yul\":16786:16818   */\n      slt\n        /* \"#utility.yul\":16783:16902   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":16821:16900   */\n      tag_579\n      tag_329\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":16783:16902   */\n    tag_578:\n        /* \"#utility.yul\":16941:16942   */\n      0x00\n        /* \"#utility.yul\":16966:17019   */\n      tag_580\n        /* \"#utility.yul\":17011:17018   */\n      dup6\n        /* \"#utility.yul\":17002:17008   */\n      dup3\n        /* \"#utility.yul\":16991:17000   */\n      dup7\n        /* \"#utility.yul\":16987:17009   */\n      add\n        /* \"#utility.yul\":16966:17019   */\n      tag_334\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":16956:17019   */\n      swap3\n      pop\n        /* \"#utility.yul\":16912:17029   */\n      pop\n        /* \"#utility.yul\":17068:17070   */\n      0x20\n        /* \"#utility.yul\":17094:17147   */\n      tag_581\n        /* \"#utility.yul\":17139:17146   */\n      dup6\n        /* \"#utility.yul\":17130:17136   */\n      dup3\n        /* \"#utility.yul\":17119:17128   */\n      dup7\n        /* \"#utility.yul\":17115:17137   */\n      add\n        /* \"#utility.yul\":17094:17147   */\n      tag_334\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":17084:17147   */\n      swap2\n      pop\n        /* \"#utility.yul\":17039:17157   */\n      pop\n        /* \"#utility.yul\":16690:17164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17170:18259   */\n    tag_95:\n        /* \"#utility.yul\":17274:17280   */\n      0x00\n        /* \"#utility.yul\":17282:17288   */\n      dup1\n        /* \"#utility.yul\":17290:17296   */\n      0x00\n        /* \"#utility.yul\":17298:17304   */\n      dup1\n        /* \"#utility.yul\":17306:17312   */\n      0x00\n        /* \"#utility.yul\":17355:17358   */\n      0xa0\n        /* \"#utility.yul\":17343:17352   */\n      dup7\n        /* \"#utility.yul\":17334:17341   */\n      dup9\n        /* \"#utility.yul\":17330:17353   */\n      sub\n        /* \"#utility.yul\":17326:17359   */\n      slt\n        /* \"#utility.yul\":17323:17443   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":17362:17441   */\n      tag_584\n      tag_329\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":17323:17443   */\n    tag_583:\n        /* \"#utility.yul\":17482:17483   */\n      0x00\n        /* \"#utility.yul\":17507:17560   */\n      tag_585\n        /* \"#utility.yul\":17552:17559   */\n      dup9\n        /* \"#utility.yul\":17543:17549   */\n      dup3\n        /* \"#utility.yul\":17532:17541   */\n      dup10\n        /* \"#utility.yul\":17528:17550   */\n      add\n        /* \"#utility.yul\":17507:17560   */\n      tag_334\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":17497:17560   */\n      swap6\n      pop\n        /* \"#utility.yul\":17453:17570   */\n      pop\n        /* \"#utility.yul\":17609:17611   */\n      0x20\n        /* \"#utility.yul\":17635:17688   */\n      tag_586\n        /* \"#utility.yul\":17680:17687   */\n      dup9\n        /* \"#utility.yul\":17671:17677   */\n      dup3\n        /* \"#utility.yul\":17660:17669   */\n      dup10\n        /* \"#utility.yul\":17656:17678   */\n      add\n        /* \"#utility.yul\":17635:17688   */\n      tag_334\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":17625:17688   */\n      swap5\n      pop\n        /* \"#utility.yul\":17580:17698   */\n      pop\n        /* \"#utility.yul\":17737:17739   */\n      0x40\n        /* \"#utility.yul\":17763:17816   */\n      tag_587\n        /* \"#utility.yul\":17808:17815   */\n      dup9\n        /* \"#utility.yul\":17799:17805   */\n      dup3\n        /* \"#utility.yul\":17788:17797   */\n      dup10\n        /* \"#utility.yul\":17784:17806   */\n      add\n        /* \"#utility.yul\":17763:17816   */\n      tag_337\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":17753:17816   */\n      swap4\n      pop\n        /* \"#utility.yul\":17708:17826   */\n      pop\n        /* \"#utility.yul\":17865:17867   */\n      0x60\n        /* \"#utility.yul\":17891:17944   */\n      tag_588\n        /* \"#utility.yul\":17936:17943   */\n      dup9\n        /* \"#utility.yul\":17927:17933   */\n      dup3\n        /* \"#utility.yul\":17916:17925   */\n      dup10\n        /* \"#utility.yul\":17912:17934   */\n      add\n        /* \"#utility.yul\":17891:17944   */\n      tag_337\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":17881:17944   */\n      swap3\n      pop\n        /* \"#utility.yul\":17836:17954   */\n      pop\n        /* \"#utility.yul\":18021:18024   */\n      0x80\n        /* \"#utility.yul\":18010:18019   */\n      dup7\n        /* \"#utility.yul\":18006:18025   */\n      add\n        /* \"#utility.yul\":17993:18026   */\n      calldataload\n        /* \"#utility.yul\":18053:18071   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18045:18051   */\n      dup2\n        /* \"#utility.yul\":18042:18072   */\n      gt\n        /* \"#utility.yul\":18039:18156   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":18075:18154   */\n      tag_590\n      tag_330\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":18039:18156   */\n    tag_589:\n        /* \"#utility.yul\":18180:18242   */\n      tag_591\n        /* \"#utility.yul\":18234:18241   */\n      dup9\n        /* \"#utility.yul\":18225:18231   */\n      dup3\n        /* \"#utility.yul\":18214:18223   */\n      dup10\n        /* \"#utility.yul\":18210:18232   */\n      add\n        /* \"#utility.yul\":18180:18242   */\n      tag_364\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":18170:18242   */\n      swap2\n      pop\n        /* \"#utility.yul\":17964:18252   */\n      pop\n        /* \"#utility.yul\":17170:18259   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18265:18445   */\n    tag_377:\n        /* \"#utility.yul\":18313:18390   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18310:18311   */\n      0x00\n        /* \"#utility.yul\":18303:18391   */\n      mstore\n        /* \"#utility.yul\":18410:18414   */\n      0x22\n        /* \"#utility.yul\":18407:18408   */\n      0x04\n        /* \"#utility.yul\":18400:18415   */\n      mstore\n        /* \"#utility.yul\":18434:18438   */\n      0x24\n        /* \"#utility.yul\":18431:18432   */\n      0x00\n        /* \"#utility.yul\":18424:18439   */\n      revert\n        /* \"#utility.yul\":18451:18771   */\n    tag_109:\n        /* \"#utility.yul\":18495:18501   */\n      0x00\n        /* \"#utility.yul\":18532:18533   */\n      0x02\n        /* \"#utility.yul\":18526:18530   */\n      dup3\n        /* \"#utility.yul\":18522:18534   */\n      div\n        /* \"#utility.yul\":18512:18534   */\n      swap1\n      pop\n        /* \"#utility.yul\":18579:18580   */\n      0x01\n        /* \"#utility.yul\":18573:18577   */\n      dup3\n        /* \"#utility.yul\":18569:18581   */\n      and\n        /* \"#utility.yul\":18600:18618   */\n      dup1\n        /* \"#utility.yul\":18590:18671   */\n      tag_594\n      jumpi\n        /* \"#utility.yul\":18656:18660   */\n      0x7f\n        /* \"#utility.yul\":18648:18654   */\n      dup3\n        /* \"#utility.yul\":18644:18661   */\n      and\n        /* \"#utility.yul\":18634:18661   */\n      swap2\n      pop\n        /* \"#utility.yul\":18590:18671   */\n    tag_594:\n        /* \"#utility.yul\":18718:18720   */\n      0x20\n        /* \"#utility.yul\":18710:18716   */\n      dup3\n        /* \"#utility.yul\":18707:18721   */\n      lt\n        /* \"#utility.yul\":18687:18705   */\n      dup2\n        /* \"#utility.yul\":18684:18722   */\n      sub\n        /* \"#utility.yul\":18681:18765   */\n      tag_595\n      jumpi\n        /* \"#utility.yul\":18737:18755   */\n      tag_596\n      tag_377\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":18681:18765   */\n    tag_595:\n        /* \"#utility.yul\":18502:18771   */\n      pop\n        /* \"#utility.yul\":18451:18771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18777:18895   */\n    tag_378:\n        /* \"#utility.yul\":18864:18888   */\n      tag_598\n        /* \"#utility.yul\":18882:18887   */\n      dup2\n        /* \"#utility.yul\":18864:18888   */\n      tag_332\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":18859:18862   */\n      dup3\n        /* \"#utility.yul\":18852:18889   */\n      mstore\n        /* \"#utility.yul\":18777:18895   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18901:19233   */\n    tag_122:\n        /* \"#utility.yul\":19022:19026   */\n      0x00\n        /* \"#utility.yul\":19060:19062   */\n      0x40\n        /* \"#utility.yul\":19049:19058   */\n      dup3\n        /* \"#utility.yul\":19045:19063   */\n      add\n        /* \"#utility.yul\":19037:19063   */\n      swap1\n      pop\n        /* \"#utility.yul\":19073:19144   */\n      tag_600\n        /* \"#utility.yul\":19141:19142   */\n      0x00\n        /* \"#utility.yul\":19130:19139   */\n      dup4\n        /* \"#utility.yul\":19126:19143   */\n      add\n        /* \"#utility.yul\":19117:19123   */\n      dup6\n        /* \"#utility.yul\":19073:19144   */\n      tag_378\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":19154:19226   */\n      tag_601\n        /* \"#utility.yul\":19222:19224   */\n      0x20\n        /* \"#utility.yul\":19211:19220   */\n      dup4\n        /* \"#utility.yul\":19207:19225   */\n      add\n        /* \"#utility.yul\":19198:19204   */\n      dup5\n        /* \"#utility.yul\":19154:19226   */\n      tag_378\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":18901:19233   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19239:19420   */\n    tag_379:\n        /* \"#utility.yul\":19379:19412   */\n      0x4f6e6c792074656163686572732063616e206177617264206372656469747300\n        /* \"#utility.yul\":19375:19376   */\n      0x00\n        /* \"#utility.yul\":19367:19373   */\n      dup3\n        /* \"#utility.yul\":19363:19377   */\n      add\n        /* \"#utility.yul\":19356:19413   */\n      mstore\n        /* \"#utility.yul\":19239:19420   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19426:19792   */\n    tag_380:\n        /* \"#utility.yul\":19568:19571   */\n      0x00\n        /* \"#utility.yul\":19589:19656   */\n      tag_604\n        /* \"#utility.yul\":19653:19655   */\n      0x1f\n        /* \"#utility.yul\":19648:19651   */\n      dup4\n        /* \"#utility.yul\":19589:19656   */\n      tag_345\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":19582:19656   */\n      swap2\n      pop\n        /* \"#utility.yul\":19665:19758   */\n      tag_605\n        /* \"#utility.yul\":19754:19757   */\n      dup3\n        /* \"#utility.yul\":19665:19758   */\n      tag_379\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":19783:19785   */\n      0x20\n        /* \"#utility.yul\":19778:19781   */\n      dup3\n        /* \"#utility.yul\":19774:19786   */\n      add\n        /* \"#utility.yul\":19767:19786   */\n      swap1\n      pop\n        /* \"#utility.yul\":19426:19792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19798:20217   */\n    tag_141:\n        /* \"#utility.yul\":19964:19968   */\n      0x00\n        /* \"#utility.yul\":20002:20004   */\n      0x20\n        /* \"#utility.yul\":19991:20000   */\n      dup3\n        /* \"#utility.yul\":19987:20005   */\n      add\n        /* \"#utility.yul\":19979:20005   */\n      swap1\n      pop\n        /* \"#utility.yul\":20051:20060   */\n      dup2\n        /* \"#utility.yul\":20045:20049   */\n      dup2\n        /* \"#utility.yul\":20041:20061   */\n      sub\n        /* \"#utility.yul\":20037:20038   */\n      0x00\n        /* \"#utility.yul\":20026:20035   */\n      dup4\n        /* \"#utility.yul\":20022:20039   */\n      add\n        /* \"#utility.yul\":20015:20062   */\n      mstore\n        /* \"#utility.yul\":20079:20210   */\n      tag_607\n        /* \"#utility.yul\":20205:20209   */\n      dup2\n        /* \"#utility.yul\":20079:20210   */\n      tag_380\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":20071:20210   */\n      swap1\n      pop\n        /* \"#utility.yul\":19798:20217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20223:20555   */\n    tag_147:\n        /* \"#utility.yul\":20344:20348   */\n      0x00\n        /* \"#utility.yul\":20382:20384   */\n      0x40\n        /* \"#utility.yul\":20371:20380   */\n      dup3\n        /* \"#utility.yul\":20367:20385   */\n      add\n        /* \"#utility.yul\":20359:20385   */\n      swap1\n      pop\n        /* \"#utility.yul\":20395:20466   */\n      tag_609\n        /* \"#utility.yul\":20463:20464   */\n      0x00\n        /* \"#utility.yul\":20452:20461   */\n      dup4\n        /* \"#utility.yul\":20448:20465   */\n      add\n        /* \"#utility.yul\":20439:20445   */\n      dup6\n        /* \"#utility.yul\":20395:20466   */\n      tag_338\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":20476:20548   */\n      tag_610\n        /* \"#utility.yul\":20544:20546   */\n      0x20\n        /* \"#utility.yul\":20533:20542   */\n      dup4\n        /* \"#utility.yul\":20529:20547   */\n      add\n        /* \"#utility.yul\":20520:20526   */\n      dup5\n        /* \"#utility.yul\":20476:20548   */\n      tag_338\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":20223:20555   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20561:20741   */\n    tag_162:\n        /* \"#utility.yul\":20609:20686   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20606:20607   */\n      0x00\n        /* \"#utility.yul\":20599:20687   */\n      mstore\n        /* \"#utility.yul\":20706:20710   */\n      0x32\n        /* \"#utility.yul\":20703:20704   */\n      0x04\n        /* \"#utility.yul\":20696:20711   */\n      mstore\n        /* \"#utility.yul\":20730:20734   */\n      0x24\n        /* \"#utility.yul\":20727:20728   */\n      0x00\n        /* \"#utility.yul\":20720:20735   */\n      revert\n        /* \"#utility.yul\":20747:20928   */\n    tag_381:\n        /* \"#utility.yul\":20887:20920   */\n      0x4f6e6c792073747564656e74732063616e20636c61696d207265776172647300\n        /* \"#utility.yul\":20883:20884   */\n      0x00\n        /* \"#utility.yul\":20875:20881   */\n      dup3\n        /* \"#utility.yul\":20871:20885   */\n      add\n        /* \"#utility.yul\":20864:20921   */\n      mstore\n        /* \"#utility.yul\":20747:20928   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20934:21300   */\n    tag_382:\n        /* \"#utility.yul\":21076:21079   */\n      0x00\n        /* \"#utility.yul\":21097:21164   */\n      tag_614\n        /* \"#utility.yul\":21161:21163   */\n      0x1f\n        /* \"#utility.yul\":21156:21159   */\n      dup4\n        /* \"#utility.yul\":21097:21164   */\n      tag_345\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":21090:21164   */\n      swap2\n      pop\n        /* \"#utility.yul\":21173:21266   */\n      tag_615\n        /* \"#utility.yul\":21262:21265   */\n      dup3\n        /* \"#utility.yul\":21173:21266   */\n      tag_381\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":21291:21293   */\n      0x20\n        /* \"#utility.yul\":21286:21289   */\n      dup3\n        /* \"#utility.yul\":21282:21294   */\n      add\n        /* \"#utility.yul\":21275:21294   */\n      swap1\n      pop\n        /* \"#utility.yul\":20934:21300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21306:21725   */\n    tag_172:\n        /* \"#utility.yul\":21472:21476   */\n      0x00\n        /* \"#utility.yul\":21510:21512   */\n      0x20\n        /* \"#utility.yul\":21499:21508   */\n      dup3\n        /* \"#utility.yul\":21495:21513   */\n      add\n        /* \"#utility.yul\":21487:21513   */\n      swap1\n      pop\n        /* \"#utility.yul\":21559:21568   */\n      dup2\n        /* \"#utility.yul\":21553:21557   */\n      dup2\n        /* \"#utility.yul\":21549:21569   */\n      sub\n        /* \"#utility.yul\":21545:21546   */\n      0x00\n        /* \"#utility.yul\":21534:21543   */\n      dup4\n        /* \"#utility.yul\":21530:21547   */\n      add\n        /* \"#utility.yul\":21523:21570   */\n      mstore\n        /* \"#utility.yul\":21587:21718   */\n      tag_617\n        /* \"#utility.yul\":21713:21717   */\n      dup2\n        /* \"#utility.yul\":21587:21718   */\n      tag_382\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":21579:21718   */\n      swap1\n      pop\n        /* \"#utility.yul\":21306:21725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21731:21953   */\n    tag_204:\n        /* \"#utility.yul\":21824:21828   */\n      0x00\n        /* \"#utility.yul\":21862:21864   */\n      0x20\n        /* \"#utility.yul\":21851:21860   */\n      dup3\n        /* \"#utility.yul\":21847:21865   */\n      add\n        /* \"#utility.yul\":21839:21865   */\n      swap1\n      pop\n        /* \"#utility.yul\":21875:21946   */\n      tag_619\n        /* \"#utility.yul\":21943:21944   */\n      0x00\n        /* \"#utility.yul\":21932:21941   */\n      dup4\n        /* \"#utility.yul\":21928:21945   */\n      add\n        /* \"#utility.yul\":21919:21925   */\n      dup5\n        /* \"#utility.yul\":21875:21946   */\n      tag_378\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":21731:21953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21959:22291   */\n    tag_266:\n        /* \"#utility.yul\":22080:22084   */\n      0x00\n        /* \"#utility.yul\":22118:22120   */\n      0x40\n        /* \"#utility.yul\":22107:22116   */\n      dup3\n        /* \"#utility.yul\":22103:22121   */\n      add\n        /* \"#utility.yul\":22095:22121   */\n      swap1\n      pop\n        /* \"#utility.yul\":22131:22202   */\n      tag_621\n        /* \"#utility.yul\":22199:22200   */\n      0x00\n        /* \"#utility.yul\":22188:22197   */\n      dup4\n        /* \"#utility.yul\":22184:22201   */\n      add\n        /* \"#utility.yul\":22175:22181   */\n      dup6\n        /* \"#utility.yul\":22131:22202   */\n      tag_378\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":22212:22284   */\n      tag_622\n        /* \"#utility.yul\":22280:22282   */\n      0x20\n        /* \"#utility.yul\":22269:22278   */\n      dup4\n        /* \"#utility.yul\":22265:22283   */\n      add\n        /* \"#utility.yul\":22256:22262   */\n      dup5\n        /* \"#utility.yul\":22212:22284   */\n      tag_352\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":21959:22291   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22297:22850   */\n    tag_280:\n        /* \"#utility.yul\":22474:22478   */\n      0x00\n        /* \"#utility.yul\":22512:22515   */\n      0x80\n        /* \"#utility.yul\":22501:22510   */\n      dup3\n        /* \"#utility.yul\":22497:22516   */\n      add\n        /* \"#utility.yul\":22489:22516   */\n      swap1\n      pop\n        /* \"#utility.yul\":22526:22597   */\n      tag_624\n        /* \"#utility.yul\":22594:22595   */\n      0x00\n        /* \"#utility.yul\":22583:22592   */\n      dup4\n        /* \"#utility.yul\":22579:22596   */\n      add\n        /* \"#utility.yul\":22570:22576   */\n      dup8\n        /* \"#utility.yul\":22526:22597   */\n      tag_378\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":22607:22679   */\n      tag_625\n        /* \"#utility.yul\":22675:22677   */\n      0x20\n        /* \"#utility.yul\":22664:22673   */\n      dup4\n        /* \"#utility.yul\":22660:22678   */\n      add\n        /* \"#utility.yul\":22651:22657   */\n      dup7\n        /* \"#utility.yul\":22607:22679   */\n      tag_338\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":22689:22761   */\n      tag_626\n        /* \"#utility.yul\":22757:22759   */\n      0x40\n        /* \"#utility.yul\":22746:22755   */\n      dup4\n        /* \"#utility.yul\":22742:22760   */\n      add\n        /* \"#utility.yul\":22733:22739   */\n      dup6\n        /* \"#utility.yul\":22689:22761   */\n      tag_338\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":22771:22843   */\n      tag_627\n        /* \"#utility.yul\":22839:22841   */\n      0x60\n        /* \"#utility.yul\":22828:22837   */\n      dup4\n        /* \"#utility.yul\":22824:22842   */\n      add\n        /* \"#utility.yul\":22815:22821   */\n      dup5\n        /* \"#utility.yul\":22771:22843   */\n      tag_338\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":22297:22850   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22856:23036   */\n    tag_383:\n        /* \"#utility.yul\":22904:22981   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22901:22902   */\n      0x00\n        /* \"#utility.yul\":22894:22982   */\n      mstore\n        /* \"#utility.yul\":23001:23005   */\n      0x11\n        /* \"#utility.yul\":22998:22999   */\n      0x04\n        /* \"#utility.yul\":22991:23006   */\n      mstore\n        /* \"#utility.yul\":23025:23029   */\n      0x24\n        /* \"#utility.yul\":23022:23023   */\n      0x00\n        /* \"#utility.yul\":23015:23030   */\n      revert\n        /* \"#utility.yul\":23042:23233   */\n    tag_283:\n        /* \"#utility.yul\":23082:23085   */\n      0x00\n        /* \"#utility.yul\":23101:23121   */\n      tag_630\n        /* \"#utility.yul\":23119:23120   */\n      dup3\n        /* \"#utility.yul\":23101:23121   */\n      tag_335\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":23096:23121   */\n      swap2\n      pop\n        /* \"#utility.yul\":23135:23155   */\n      tag_631\n        /* \"#utility.yul\":23153:23154   */\n      dup4\n        /* \"#utility.yul\":23135:23155   */\n      tag_335\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":23130:23155   */\n      swap3\n      pop\n        /* \"#utility.yul\":23178:23179   */\n      dup3\n        /* \"#utility.yul\":23175:23176   */\n      dup3\n        /* \"#utility.yul\":23171:23180   */\n      add\n        /* \"#utility.yul\":23164:23180   */\n      swap1\n      pop\n        /* \"#utility.yul\":23199:23202   */\n      dup1\n        /* \"#utility.yul\":23196:23197   */\n      dup3\n        /* \"#utility.yul\":23193:23203   */\n      gt\n        /* \"#utility.yul\":23190:23226   */\n      iszero\n      tag_632\n      jumpi\n        /* \"#utility.yul\":23206:23224   */\n      tag_633\n      tag_383\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":23190:23226   */\n    tag_632:\n        /* \"#utility.yul\":23042:23233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23239:23873   */\n    tag_290:\n        /* \"#utility.yul\":23460:23464   */\n      0x00\n        /* \"#utility.yul\":23498:23500   */\n      0x40\n        /* \"#utility.yul\":23487:23496   */\n      dup3\n        /* \"#utility.yul\":23483:23501   */\n      add\n        /* \"#utility.yul\":23475:23501   */\n      swap1\n      pop\n        /* \"#utility.yul\":23547:23556   */\n      dup2\n        /* \"#utility.yul\":23541:23545   */\n      dup2\n        /* \"#utility.yul\":23537:23557   */\n      sub\n        /* \"#utility.yul\":23533:23534   */\n      0x00\n        /* \"#utility.yul\":23522:23531   */\n      dup4\n        /* \"#utility.yul\":23518:23535   */\n      add\n        /* \"#utility.yul\":23511:23558   */\n      mstore\n        /* \"#utility.yul\":23575:23683   */\n      tag_635\n        /* \"#utility.yul\":23678:23682   */\n      dup2\n        /* \"#utility.yul\":23669:23675   */\n      dup6\n        /* \"#utility.yul\":23575:23683   */\n      tag_374\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":23567:23683   */\n      swap1\n      pop\n        /* \"#utility.yul\":23730:23739   */\n      dup2\n        /* \"#utility.yul\":23724:23728   */\n      dup2\n        /* \"#utility.yul\":23720:23740   */\n      sub\n        /* \"#utility.yul\":23715:23717   */\n      0x20\n        /* \"#utility.yul\":23704:23713   */\n      dup4\n        /* \"#utility.yul\":23700:23718   */\n      add\n        /* \"#utility.yul\":23693:23741   */\n      mstore\n        /* \"#utility.yul\":23758:23866   */\n      tag_636\n        /* \"#utility.yul\":23861:23865   */\n      dup2\n        /* \"#utility.yul\":23852:23858   */\n      dup5\n        /* \"#utility.yul\":23758:23866   */\n      tag_374\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":23750:23866   */\n      swap1\n      pop\n        /* \"#utility.yul\":23239:23873   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23879:23977   */\n    tag_384:\n        /* \"#utility.yul\":23930:23936   */\n      0x00\n        /* \"#utility.yul\":23964:23969   */\n      dup2\n        /* \"#utility.yul\":23958:23970   */\n      mload\n        /* \"#utility.yul\":23948:23970   */\n      swap1\n      pop\n        /* \"#utility.yul\":23879:23977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23983:24151   */\n    tag_385:\n        /* \"#utility.yul\":24066:24077   */\n      0x00\n        /* \"#utility.yul\":24100:24106   */\n      dup3\n        /* \"#utility.yul\":24095:24098   */\n      dup3\n        /* \"#utility.yul\":24088:24107   */\n      mstore\n        /* \"#utility.yul\":24140:24144   */\n      0x20\n        /* \"#utility.yul\":24135:24138   */\n      dup3\n        /* \"#utility.yul\":24131:24145   */\n      add\n        /* \"#utility.yul\":24116:24145   */\n      swap1\n      pop\n        /* \"#utility.yul\":23983:24151   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24157:24530   */\n    tag_386:\n        /* \"#utility.yul\":24243:24246   */\n      0x00\n        /* \"#utility.yul\":24271:24309   */\n      tag_640\n        /* \"#utility.yul\":24303:24308   */\n      dup3\n        /* \"#utility.yul\":24271:24309   */\n      tag_384\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":24325:24395   */\n      tag_641\n        /* \"#utility.yul\":24388:24394   */\n      dup2\n        /* \"#utility.yul\":24383:24386   */\n      dup6\n        /* \"#utility.yul\":24325:24395   */\n      tag_385\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":24318:24395   */\n      swap4\n      pop\n        /* \"#utility.yul\":24404:24469   */\n      tag_642\n        /* \"#utility.yul\":24462:24468   */\n      dup2\n        /* \"#utility.yul\":24457:24460   */\n      dup6\n        /* \"#utility.yul\":24450:24454   */\n      0x20\n        /* \"#utility.yul\":24443:24448   */\n      dup7\n        /* \"#utility.yul\":24439:24455   */\n      add\n        /* \"#utility.yul\":24404:24469   */\n      tag_346\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":24494:24523   */\n      tag_643\n        /* \"#utility.yul\":24516:24522   */\n      dup2\n        /* \"#utility.yul\":24494:24523   */\n      tag_347\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":24489:24492   */\n      dup5\n        /* \"#utility.yul\":24485:24524   */\n      add\n        /* \"#utility.yul\":24478:24524   */\n      swap2\n      pop\n        /* \"#utility.yul\":24247:24530   */\n      pop\n        /* \"#utility.yul\":24157:24530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24536:25287   */\n    tag_294:\n        /* \"#utility.yul\":24759:24763   */\n      0x00\n        /* \"#utility.yul\":24797:24800   */\n      0xa0\n        /* \"#utility.yul\":24786:24795   */\n      dup3\n        /* \"#utility.yul\":24782:24801   */\n      add\n        /* \"#utility.yul\":24774:24801   */\n      swap1\n      pop\n        /* \"#utility.yul\":24811:24882   */\n      tag_645\n        /* \"#utility.yul\":24879:24880   */\n      0x00\n        /* \"#utility.yul\":24868:24877   */\n      dup4\n        /* \"#utility.yul\":24864:24881   */\n      add\n        /* \"#utility.yul\":24855:24861   */\n      dup9\n        /* \"#utility.yul\":24811:24882   */\n      tag_378\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":24892:24964   */\n      tag_646\n        /* \"#utility.yul\":24960:24962   */\n      0x20\n        /* \"#utility.yul\":24949:24958   */\n      dup4\n        /* \"#utility.yul\":24945:24963   */\n      add\n        /* \"#utility.yul\":24936:24942   */\n      dup8\n        /* \"#utility.yul\":24892:24964   */\n      tag_378\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":24974:25046   */\n      tag_647\n        /* \"#utility.yul\":25042:25044   */\n      0x40\n        /* \"#utility.yul\":25031:25040   */\n      dup4\n        /* \"#utility.yul\":25027:25045   */\n      add\n        /* \"#utility.yul\":25018:25024   */\n      dup7\n        /* \"#utility.yul\":24974:25046   */\n      tag_338\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":25056:25128   */\n      tag_648\n        /* \"#utility.yul\":25124:25126   */\n      0x60\n        /* \"#utility.yul\":25113:25122   */\n      dup4\n        /* \"#utility.yul\":25109:25127   */\n      add\n        /* \"#utility.yul\":25100:25106   */\n      dup6\n        /* \"#utility.yul\":25056:25128   */\n      tag_338\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":25176:25185   */\n      dup2\n        /* \"#utility.yul\":25170:25174   */\n      dup2\n        /* \"#utility.yul\":25166:25186   */\n      sub\n        /* \"#utility.yul\":25160:25163   */\n      0x80\n        /* \"#utility.yul\":25149:25158   */\n      dup4\n        /* \"#utility.yul\":25145:25164   */\n      add\n        /* \"#utility.yul\":25138:25187   */\n      mstore\n        /* \"#utility.yul\":25204:25280   */\n      tag_649\n        /* \"#utility.yul\":25275:25279   */\n      dup2\n        /* \"#utility.yul\":25266:25272   */\n      dup5\n        /* \"#utility.yul\":25204:25280   */\n      tag_386\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":25196:25280   */\n      swap1\n      pop\n        /* \"#utility.yul\":24536:25287   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25293:25434   */\n    tag_387:\n        /* \"#utility.yul\":25349:25354   */\n      0x00\n        /* \"#utility.yul\":25380:25386   */\n      dup2\n        /* \"#utility.yul\":25374:25387   */\n      mload\n        /* \"#utility.yul\":25365:25387   */\n      swap1\n      pop\n        /* \"#utility.yul\":25396:25428   */\n      tag_651\n        /* \"#utility.yul\":25422:25427   */\n      dup2\n        /* \"#utility.yul\":25396:25428   */\n      tag_340\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":25293:25434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25440:25789   */\n    tag_297:\n        /* \"#utility.yul\":25509:25515   */\n      0x00\n        /* \"#utility.yul\":25558:25560   */\n      0x20\n        /* \"#utility.yul\":25546:25555   */\n      dup3\n        /* \"#utility.yul\":25537:25544   */\n      dup5\n        /* \"#utility.yul\":25533:25556   */\n      sub\n        /* \"#utility.yul\":25529:25561   */\n      slt\n        /* \"#utility.yul\":25526:25645   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":25564:25643   */\n      tag_654\n      tag_329\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":25526:25645   */\n    tag_653:\n        /* \"#utility.yul\":25684:25685   */\n      0x00\n        /* \"#utility.yul\":25709:25772   */\n      tag_655\n        /* \"#utility.yul\":25764:25771   */\n      dup5\n        /* \"#utility.yul\":25755:25761   */\n      dup3\n        /* \"#utility.yul\":25744:25753   */\n      dup6\n        /* \"#utility.yul\":25740:25762   */\n      add\n        /* \"#utility.yul\":25709:25772   */\n      tag_387\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":25699:25772   */\n      swap2\n      pop\n        /* \"#utility.yul\":25655:25782   */\n      pop\n        /* \"#utility.yul\":25440:25789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25795:26848   */\n    tag_313:\n        /* \"#utility.yul\":26118:26122   */\n      0x00\n        /* \"#utility.yul\":26156:26159   */\n      0xa0\n        /* \"#utility.yul\":26145:26154   */\n      dup3\n        /* \"#utility.yul\":26141:26160   */\n      add\n        /* \"#utility.yul\":26133:26160   */\n      swap1\n      pop\n        /* \"#utility.yul\":26170:26241   */\n      tag_657\n        /* \"#utility.yul\":26238:26239   */\n      0x00\n        /* \"#utility.yul\":26227:26236   */\n      dup4\n        /* \"#utility.yul\":26223:26240   */\n      add\n        /* \"#utility.yul\":26214:26220   */\n      dup9\n        /* \"#utility.yul\":26170:26241   */\n      tag_378\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":26251:26323   */\n      tag_658\n        /* \"#utility.yul\":26319:26321   */\n      0x20\n        /* \"#utility.yul\":26308:26317   */\n      dup4\n        /* \"#utility.yul\":26304:26322   */\n      add\n        /* \"#utility.yul\":26295:26301   */\n      dup8\n        /* \"#utility.yul\":26251:26323   */\n      tag_378\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":26370:26379   */\n      dup2\n        /* \"#utility.yul\":26364:26368   */\n      dup2\n        /* \"#utility.yul\":26360:26380   */\n      sub\n        /* \"#utility.yul\":26355:26357   */\n      0x40\n        /* \"#utility.yul\":26344:26353   */\n      dup4\n        /* \"#utility.yul\":26340:26358   */\n      add\n        /* \"#utility.yul\":26333:26381   */\n      mstore\n        /* \"#utility.yul\":26398:26506   */\n      tag_659\n        /* \"#utility.yul\":26501:26505   */\n      dup2\n        /* \"#utility.yul\":26492:26498   */\n      dup7\n        /* \"#utility.yul\":26398:26506   */\n      tag_374\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":26390:26506   */\n      swap1\n      pop\n        /* \"#utility.yul\":26553:26562   */\n      dup2\n        /* \"#utility.yul\":26547:26551   */\n      dup2\n        /* \"#utility.yul\":26543:26563   */\n      sub\n        /* \"#utility.yul\":26538:26540   */\n      0x60\n        /* \"#utility.yul\":26527:26536   */\n      dup4\n        /* \"#utility.yul\":26523:26541   */\n      add\n        /* \"#utility.yul\":26516:26564   */\n      mstore\n        /* \"#utility.yul\":26581:26689   */\n      tag_660\n        /* \"#utility.yul\":26684:26688   */\n      dup2\n        /* \"#utility.yul\":26675:26681   */\n      dup6\n        /* \"#utility.yul\":26581:26689   */\n      tag_374\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":26573:26689   */\n      swap1\n      pop\n        /* \"#utility.yul\":26737:26746   */\n      dup2\n        /* \"#utility.yul\":26731:26735   */\n      dup2\n        /* \"#utility.yul\":26727:26747   */\n      sub\n        /* \"#utility.yul\":26721:26724   */\n      0x80\n        /* \"#utility.yul\":26710:26719   */\n      dup4\n        /* \"#utility.yul\":26706:26725   */\n      add\n        /* \"#utility.yul\":26699:26748   */\n      mstore\n        /* \"#utility.yul\":26765:26841   */\n      tag_661\n        /* \"#utility.yul\":26836:26840   */\n      dup2\n        /* \"#utility.yul\":26827:26833   */\n      dup5\n        /* \"#utility.yul\":26765:26841   */\n      tag_386\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":26757:26841   */\n      swap1\n      pop\n        /* \"#utility.yul\":25795:26848   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cd5fc6662917bd6cbf3a4aa67a5a72f1c2bb62328e81e139f7eb3be2f1bec3ae64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_699": {
									"entryPoint": null,
									"id": 699,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_216": {
									"entryPoint": 195,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_237": {
									"entryPoint": 490,
									"id": 237,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_379": {
									"entryPoint": 231,
									"id": 379,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_2065": {
									"entryPoint": 483,
									"id": 2065,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setURI_1312": {
									"entryPoint": 87,
									"id": 1312,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getRoleAdmin_251": {
									"entryPoint": 166,
									"id": 251,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_270": {
									"entryPoint": 108,
									"id": 270,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_203": {
									"entryPoint": 582,
									"id": 203,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 1598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 1615,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 1589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 879,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1030,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6134:14",
										"nodeType": "YulBlock",
										"src": "0:6134:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:14",
													"nodeType": "YulBlock",
													"src": "66:40:14",
													"statements": [
														{
															"nativeSrc": "77:22:14",
															"nodeType": "YulAssignment",
															"src": "77:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:14"
																},
																"nativeSrc": "87:12:14",
																"nodeType": "YulFunctionCall",
																"src": "87:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:14",
														"nodeType": "YulTypedName",
														"src": "49:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:14",
														"nodeType": "YulTypedName",
														"src": "59:6:14",
														"type": ""
													}
												],
												"src": "7:99:14"
											},
											{
												"body": {
													"nativeSrc": "140:152:14",
													"nodeType": "YulBlock",
													"src": "140:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:14",
																		"nodeType": "YulLiteral",
																		"src": "157:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:14",
																		"nodeType": "YulLiteral",
																		"src": "160:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:14"
																},
																"nativeSrc": "150:88:14",
																"nodeType": "YulFunctionCall",
																"src": "150:88:14"
															},
															"nativeSrc": "150:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:14",
																		"nodeType": "YulLiteral",
																		"src": "254:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:14",
																		"nodeType": "YulLiteral",
																		"src": "257:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:14"
																},
																"nativeSrc": "247:15:14",
																"nodeType": "YulFunctionCall",
																"src": "247:15:14"
															},
															"nativeSrc": "247:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:14",
																		"nodeType": "YulLiteral",
																		"src": "278:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:14",
																		"nodeType": "YulLiteral",
																		"src": "281:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:14"
																},
																"nativeSrc": "271:15:14",
																"nodeType": "YulFunctionCall",
																"src": "271:15:14"
															},
															"nativeSrc": "271:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:14"
											},
											{
												"body": {
													"nativeSrc": "326:152:14",
													"nodeType": "YulBlock",
													"src": "326:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:14",
																		"nodeType": "YulLiteral",
																		"src": "343:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:14",
																		"nodeType": "YulLiteral",
																		"src": "346:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:14"
																},
																"nativeSrc": "336:88:14",
																"nodeType": "YulFunctionCall",
																"src": "336:88:14"
															},
															"nativeSrc": "336:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:14",
																		"nodeType": "YulLiteral",
																		"src": "440:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:14",
																		"nodeType": "YulLiteral",
																		"src": "443:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:14"
																},
																"nativeSrc": "433:15:14",
																"nodeType": "YulFunctionCall",
																"src": "433:15:14"
															},
															"nativeSrc": "433:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:14",
																		"nodeType": "YulLiteral",
																		"src": "464:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:14",
																		"nodeType": "YulLiteral",
																		"src": "467:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:14"
																},
																"nativeSrc": "457:15:14",
																"nodeType": "YulFunctionCall",
																"src": "457:15:14"
															},
															"nativeSrc": "457:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:14"
											},
											{
												"body": {
													"nativeSrc": "535:269:14",
													"nodeType": "YulBlock",
													"src": "535:269:14",
													"statements": [
														{
															"nativeSrc": "545:22:14",
															"nodeType": "YulAssignment",
															"src": "545:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:14",
																		"nodeType": "YulLiteral",
																		"src": "565:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:14"
																},
																"nativeSrc": "555:12:14",
																"nodeType": "YulFunctionCall",
																"src": "555:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:14"
																}
															]
														},
														{
															"nativeSrc": "576:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:14",
																		"nodeType": "YulLiteral",
																		"src": "612:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:14"
																},
																"nativeSrc": "602:12:14",
																"nodeType": "YulFunctionCall",
																"src": "602:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:14",
																	"nodeType": "YulTypedName",
																	"src": "580:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:14",
																"nodeType": "YulBlock",
																"src": "653:51:14",
																"statements": [
																	{
																		"nativeSrc": "667:27:14",
																		"nodeType": "YulAssignment",
																		"src": "667:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:14",
																					"nodeType": "YulLiteral",
																					"src": "689:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:14"
																			},
																			"nativeSrc": "677:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:14"
																},
																"nativeSrc": "626:26:14",
																"nodeType": "YulFunctionCall",
																"src": "626:26:14"
															},
															"nativeSrc": "623:81:14",
															"nodeType": "YulIf",
															"src": "623:81:14"
														},
														{
															"body": {
																"nativeSrc": "756:42:14",
																"nodeType": "YulBlock",
																"src": "756:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:14"
																			},
																			"nativeSrc": "770:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:14"
																		},
																		"nativeSrc": "770:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:14",
																				"nodeType": "YulLiteral",
																				"src": "751:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:14"
																		},
																		"nativeSrc": "740:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:14"
																},
																"nativeSrc": "717:38:14",
																"nodeType": "YulFunctionCall",
																"src": "717:38:14"
															},
															"nativeSrc": "714:84:14",
															"nodeType": "YulIf",
															"src": "714:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:14",
														"nodeType": "YulTypedName",
														"src": "519:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:14",
														"nodeType": "YulTypedName",
														"src": "528:6:14",
														"type": ""
													}
												],
												"src": "484:320:14"
											},
											{
												"body": {
													"nativeSrc": "864:87:14",
													"nodeType": "YulBlock",
													"src": "864:87:14",
													"statements": [
														{
															"nativeSrc": "874:11:14",
															"nodeType": "YulAssignment",
															"src": "874:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:14",
																"nodeType": "YulIdentifier",
																"src": "882:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:14",
																		"nodeType": "YulLiteral",
																		"src": "902:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:14"
																},
																"nativeSrc": "895:14:14",
																"nodeType": "YulFunctionCall",
																"src": "895:14:14"
															},
															"nativeSrc": "895:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:14"
														},
														{
															"nativeSrc": "918:26:14",
															"nodeType": "YulAssignment",
															"src": "918:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:14",
																		"nodeType": "YulLiteral",
																		"src": "936:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:14",
																		"nodeType": "YulLiteral",
																		"src": "939:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:14"
																},
																"nativeSrc": "926:18:14",
																"nodeType": "YulFunctionCall",
																"src": "926:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:14",
														"nodeType": "YulTypedName",
														"src": "851:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:14",
														"nodeType": "YulTypedName",
														"src": "859:4:14",
														"type": ""
													}
												],
												"src": "810:141:14"
											},
											{
												"body": {
													"nativeSrc": "1001:49:14",
													"nodeType": "YulBlock",
													"src": "1001:49:14",
													"statements": [
														{
															"nativeSrc": "1011:33:14",
															"nodeType": "YulAssignment",
															"src": "1011:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:14"
																		},
																		"nativeSrc": "1025:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:14"
																},
																"nativeSrc": "1021:23:14",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:14",
														"nodeType": "YulTypedName",
														"src": "984:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:14",
														"nodeType": "YulTypedName",
														"src": "994:6:14",
														"type": ""
													}
												],
												"src": "957:93:14"
											},
											{
												"body": {
													"nativeSrc": "1109:54:14",
													"nodeType": "YulBlock",
													"src": "1109:54:14",
													"statements": [
														{
															"nativeSrc": "1119:37:14",
															"nodeType": "YulAssignment",
															"src": "1119:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:14"
																},
																"nativeSrc": "1140:16:14",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:14",
														"nodeType": "YulTypedName",
														"src": "1084:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:14",
														"nodeType": "YulTypedName",
														"src": "1090:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:14",
														"nodeType": "YulTypedName",
														"src": "1100:8:14",
														"type": ""
													}
												],
												"src": "1056:107:14"
											},
											{
												"body": {
													"nativeSrc": "1245:317:14",
													"nodeType": "YulBlock",
													"src": "1245:317:14",
													"statements": [
														{
															"nativeSrc": "1255:35:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:14"
																},
																"nativeSrc": "1272:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:14",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:14",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:14"
																},
																"nativeSrc": "1311:97:14",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:14",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:14",
															"nodeType": "YulAssignment",
															"src": "1417:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:14"
																},
																"nativeSrc": "1429:39:14",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:14"
																}
															]
														},
														{
															"nativeSrc": "1477:30:14",
															"nodeType": "YulAssignment",
															"src": "1477:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:14"
																		},
																		"nativeSrc": "1497:9:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:14"
																},
																"nativeSrc": "1486:21:14",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:14"
																}
															]
														},
														{
															"nativeSrc": "1516:40:14",
															"nodeType": "YulAssignment",
															"src": "1516:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:14"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:14"
																		},
																		"nativeSrc": "1536:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:14"
																},
																"nativeSrc": "1526:30:14",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:14",
														"nodeType": "YulTypedName",
														"src": "1206:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:14",
														"nodeType": "YulTypedName",
														"src": "1213:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:14",
														"nodeType": "YulTypedName",
														"src": "1225:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:14",
														"nodeType": "YulTypedName",
														"src": "1238:6:14",
														"type": ""
													}
												],
												"src": "1169:393:14"
											},
											{
												"body": {
													"nativeSrc": "1613:32:14",
													"nodeType": "YulBlock",
													"src": "1613:32:14",
													"statements": [
														{
															"nativeSrc": "1623:16:14",
															"nodeType": "YulAssignment",
															"src": "1623:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:14",
																"nodeType": "YulIdentifier",
																"src": "1634:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:14",
														"nodeType": "YulTypedName",
														"src": "1595:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:14",
														"nodeType": "YulTypedName",
														"src": "1605:7:14",
														"type": ""
													}
												],
												"src": "1568:77:14"
											},
											{
												"body": {
													"nativeSrc": "1683:28:14",
													"nodeType": "YulBlock",
													"src": "1683:28:14",
													"statements": [
														{
															"nativeSrc": "1693:12:14",
															"nodeType": "YulAssignment",
															"src": "1693:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:14",
																"nodeType": "YulIdentifier",
																"src": "1700:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:14",
														"nodeType": "YulTypedName",
														"src": "1669:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:14",
														"nodeType": "YulTypedName",
														"src": "1679:3:14",
														"type": ""
													}
												],
												"src": "1651:60:14"
											},
											{
												"body": {
													"nativeSrc": "1777:82:14",
													"nodeType": "YulBlock",
													"src": "1777:82:14",
													"statements": [
														{
															"nativeSrc": "1787:66:14",
															"nodeType": "YulAssignment",
															"src": "1787:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:14"
																				},
																				"nativeSrc": "1827:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:14"
																		},
																		"nativeSrc": "1818:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:14"
																},
																"nativeSrc": "1800:53:14",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:14",
														"nodeType": "YulTypedName",
														"src": "1757:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:14",
														"nodeType": "YulTypedName",
														"src": "1767:9:14",
														"type": ""
													}
												],
												"src": "1717:142:14"
											},
											{
												"body": {
													"nativeSrc": "1912:28:14",
													"nodeType": "YulBlock",
													"src": "1912:28:14",
													"statements": [
														{
															"nativeSrc": "1922:12:14",
															"nodeType": "YulAssignment",
															"src": "1922:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:14",
																"nodeType": "YulIdentifier",
																"src": "1929:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:14",
														"nodeType": "YulTypedName",
														"src": "1898:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:14",
														"nodeType": "YulTypedName",
														"src": "1908:3:14",
														"type": ""
													}
												],
												"src": "1865:75:14"
											},
											{
												"body": {
													"nativeSrc": "2022:193:14",
													"nodeType": "YulBlock",
													"src": "2022:193:14",
													"statements": [
														{
															"nativeSrc": "2032:63:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:14"
																},
																"nativeSrc": "2056:39:14",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:14",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:14"
																				},
																				"nativeSrc": "2145:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:14",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:14",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:14"
																				},
																				"nativeSrc": "2166:41:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:14",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:14"
																		},
																		"nativeSrc": "2117:91:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:14"
																},
																"nativeSrc": "2104:105:14",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:14"
															},
															"nativeSrc": "2104:105:14",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:14",
														"nodeType": "YulTypedName",
														"src": "1999:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:14",
														"nodeType": "YulTypedName",
														"src": "2005:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:14",
														"nodeType": "YulTypedName",
														"src": "2013:7:14",
														"type": ""
													}
												],
												"src": "1946:269:14"
											},
											{
												"body": {
													"nativeSrc": "2270:24:14",
													"nodeType": "YulBlock",
													"src": "2270:24:14",
													"statements": [
														{
															"nativeSrc": "2280:8:14",
															"nodeType": "YulAssignment",
															"src": "2280:8:14",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:14",
																"nodeType": "YulLiteral",
																"src": "2287:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:14",
														"nodeType": "YulTypedName",
														"src": "2266:3:14",
														"type": ""
													}
												],
												"src": "2221:73:14"
											},
											{
												"body": {
													"nativeSrc": "2353:136:14",
													"nodeType": "YulBlock",
													"src": "2353:136:14",
													"statements": [
														{
															"nativeSrc": "2363:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:14"
																},
																"nativeSrc": "2377:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:14",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:14"
																},
																"nativeSrc": "2418:65:14",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:14"
															},
															"nativeSrc": "2418:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:14",
														"nodeType": "YulTypedName",
														"src": "2339:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:14",
														"nodeType": "YulTypedName",
														"src": "2345:6:14",
														"type": ""
													}
												],
												"src": "2300:189:14"
											},
											{
												"body": {
													"nativeSrc": "2545:136:14",
													"nodeType": "YulBlock",
													"src": "2545:136:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:14",
																"nodeType": "YulBlock",
																"src": "2612:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:14",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:14"
																			},
																			"nativeSrc": "2626:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:14"
																		},
																		"nativeSrc": "2626:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:14"
																},
																"nativeSrc": "2562:14:14",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:14"
															},
															"nativeSrc": "2555:120:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:14",
																"nodeType": "YulBlock",
																"src": "2577:26:14",
																"statements": [
																	{
																		"nativeSrc": "2579:22:14",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:14"
																			},
																			"nativeSrc": "2588:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:14",
																"nodeType": "YulBlock",
																"src": "2559:2:14",
																"statements": []
															},
															"src": "2555:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:14",
														"nodeType": "YulTypedName",
														"src": "2533:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:14",
														"nodeType": "YulTypedName",
														"src": "2540:3:14",
														"type": ""
													}
												],
												"src": "2495:186:14"
											},
											{
												"body": {
													"nativeSrc": "2766:464:14",
													"nodeType": "YulBlock",
													"src": "2766:464:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:14",
																"nodeType": "YulBlock",
																"src": "2792:431:14",
																"statements": [
																	{
																		"nativeSrc": "2806:54:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:14",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:14"
																			},
																			"nativeSrc": "2822:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:14",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:14",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:14"
																					},
																					"nativeSrc": "2906:29:14",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:14"
																			},
																			"nativeSrc": "2892:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:14",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:14",
																			"nodeType": "YulBlock",
																			"src": "3093:27:14",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:14",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:14",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:14",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:14"
																			},
																			"nativeSrc": "3074:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:14"
																		},
																		"nativeSrc": "3071:49:14",
																		"nodeType": "YulIf",
																		"src": "3071:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:14",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:14",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:14"
																							},
																							"nativeSrc": "3189:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:14"
																					},
																					"nativeSrc": "3175:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:14",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:14"
																			},
																			"nativeSrc": "3133:80:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:14"
																		},
																		"nativeSrc": "3133:80:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:14"
																},
																"nativeSrc": "2780:11:14",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:14"
															},
															"nativeSrc": "2777:446:14",
															"nodeType": "YulIf",
															"src": "2777:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:14",
														"nodeType": "YulTypedName",
														"src": "2742:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:14",
														"nodeType": "YulTypedName",
														"src": "2749:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:14",
														"nodeType": "YulTypedName",
														"src": "2754:10:14",
														"type": ""
													}
												],
												"src": "2687:543:14"
											},
											{
												"body": {
													"nativeSrc": "3299:54:14",
													"nodeType": "YulBlock",
													"src": "3299:54:14",
													"statements": [
														{
															"nativeSrc": "3309:37:14",
															"nodeType": "YulAssignment",
															"src": "3309:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:14"
																},
																"nativeSrc": "3330:16:14",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:14",
														"nodeType": "YulTypedName",
														"src": "3274:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:14",
														"nodeType": "YulTypedName",
														"src": "3280:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:14",
														"nodeType": "YulTypedName",
														"src": "3290:8:14",
														"type": ""
													}
												],
												"src": "3236:117:14"
											},
											{
												"body": {
													"nativeSrc": "3410:118:14",
													"nodeType": "YulBlock",
													"src": "3410:118:14",
													"statements": [
														{
															"nativeSrc": "3420:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:14",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:14"
																				},
																				"nativeSrc": "3465:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:14",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:14"
																				},
																				"nativeSrc": "3480:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:14"
																		},
																		"nativeSrc": "3436:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:14"
																},
																"nativeSrc": "3432:56:14",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:14",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:14",
															"nodeType": "YulAssignment",
															"src": "3497:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:14"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:14"
																},
																"nativeSrc": "3507:15:14",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:14",
														"nodeType": "YulTypedName",
														"src": "3387:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:14",
														"nodeType": "YulTypedName",
														"src": "3393:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:14",
														"nodeType": "YulTypedName",
														"src": "3403:6:14",
														"type": ""
													}
												],
												"src": "3359:169:14"
											},
											{
												"body": {
													"nativeSrc": "3614:214:14",
													"nodeType": "YulBlock",
													"src": "3614:214:14",
													"statements": [
														{
															"nativeSrc": "3747:37:14",
															"nodeType": "YulAssignment",
															"src": "3747:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:14"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:14"
																},
																"nativeSrc": "3755:29:14",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:14"
																}
															]
														},
														{
															"nativeSrc": "3793:29:14",
															"nodeType": "YulAssignment",
															"src": "3793:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:14"
																		},
																		"nativeSrc": "3810:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:14"
																},
																"nativeSrc": "3801:21:14",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:14",
														"nodeType": "YulTypedName",
														"src": "3595:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:14",
														"nodeType": "YulTypedName",
														"src": "3601:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:14",
														"nodeType": "YulTypedName",
														"src": "3609:4:14",
														"type": ""
													}
												],
												"src": "3533:295:14"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:14",
													"nodeType": "YulBlock",
													"src": "3925:1303:14",
													"statements": [
														{
															"nativeSrc": "3936:51:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:14"
																},
																"nativeSrc": "3950:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:14",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:14",
																"nodeType": "YulBlock",
																"src": "4072:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:14"
																			},
																			"nativeSrc": "4074:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:14"
																		},
																		"nativeSrc": "4074:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:14",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:14"
																},
																"nativeSrc": "4041:30:14",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:14"
															},
															"nativeSrc": "4038:56:14",
															"nodeType": "YulIf",
															"src": "4038:56:14"
														},
														{
															"nativeSrc": "4104:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:14"
																		},
																		"nativeSrc": "4144:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:14"
																},
																"nativeSrc": "4118:38:14",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:14",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:14",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:14"
																},
																"nativeSrc": "4203:67:14",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:14"
															},
															"nativeSrc": "4203:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:14"
														},
														{
															"nativeSrc": "4280:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:14",
																"nodeType": "YulLiteral",
																"src": "4297:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:14",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:14",
															"nodeType": "YulAssignment",
															"src": "4308:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:14",
																"nodeType": "YulLiteral",
																"src": "4321:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:14",
																		"nodeType": "YulBlock",
																		"src": "4372:611:14",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:14",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:14"
																							},
																							"nativeSrc": "4413:9:14",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:14"
																					},
																					"nativeSrc": "4401:22:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:14",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:14",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:14"
																					},
																					"nativeSrc": "4451:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:14",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:14",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:14",
																					"nodeType": "YulBlock",
																					"src": "4569:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:14"
																												},
																												"nativeSrc": "4608:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:14"
																										},
																										"nativeSrc": "4602:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:14"
																								},
																								"nativeSrc": "4587:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:14"
																							},
																							"nativeSrc": "4587:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:14"
																						},
																						{
																							"nativeSrc": "4646:24:14",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:14",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:14"
																								},
																								"nativeSrc": "4656:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:14",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:14",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:14"
																								},
																								"nativeSrc": "4700:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:14"
																					},
																					"nativeSrc": "4532:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:14"
																				},
																				"nativeSrc": "4524:208:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:14",
																					"nodeType": "YulBlock",
																					"src": "4547:21:14",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:14",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:14",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:14"
																								},
																								"nativeSrc": "4554:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:14",
																					"nodeType": "YulBlock",
																					"src": "4528:3:14",
																					"statements": []
																				},
																				"src": "4524:208:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:14",
																					"nodeType": "YulBlock",
																					"src": "4768:156:14",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:14"
																										},
																										"nativeSrc": "4809:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:14"
																								},
																								"nativeSrc": "4803:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:14",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:14"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:14",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:14"
																												},
																												"nativeSrc": "4891:17:14",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:14",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:14"
																										},
																										"nativeSrc": "4861:48:14",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:14"
																								},
																								"nativeSrc": "4846:64:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:14"
																							},
																							"nativeSrc": "4846:64:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:14"
																					},
																					"nativeSrc": "4748:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:14"
																				},
																				"nativeSrc": "4745:179:14",
																				"nodeType": "YulIf",
																				"src": "4745:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:14",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:14"
																									},
																									"nativeSrc": "4954:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:14",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:14"
																							},
																							"nativeSrc": "4950:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:14"
																					},
																					"nativeSrc": "4937:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:14"
																				},
																				"nativeSrc": "4937:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:14"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:14",
																	"nodeType": "YulCase",
																	"src": "4365:618:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:14",
																		"nodeType": "YulBlock",
																		"src": "5000:222:14",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:14",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:14",
																					"nodeType": "YulBlock",
																					"src": "5051:67:14",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:14",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:14"
																										},
																										"nativeSrc": "5084:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:14"
																								},
																								"nativeSrc": "5078:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:14"
																				},
																				"nativeSrc": "5041:77:14",
																				"nodeType": "YulIf",
																				"src": "5041:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:14"
																							},
																							"nativeSrc": "5144:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:14"
																					},
																					"nativeSrc": "5131:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:14"
																				},
																				"nativeSrc": "5131:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:14"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:14",
																	"nodeType": "YulCase",
																	"src": "4992:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:14"
																},
																"nativeSrc": "4342:14:14",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:14"
															},
															"nativeSrc": "4335:887:14",
															"nodeType": "YulSwitch",
															"src": "4335:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:14",
														"nodeType": "YulTypedName",
														"src": "3914:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:14",
														"nodeType": "YulTypedName",
														"src": "3920:3:14",
														"type": ""
													}
												],
												"src": "3833:1395:14"
											},
											{
												"body": {
													"nativeSrc": "5279:81:14",
													"nodeType": "YulBlock",
													"src": "5279:81:14",
													"statements": [
														{
															"nativeSrc": "5289:65:14",
															"nodeType": "YulAssignment",
															"src": "5289:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:14",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:14"
																},
																"nativeSrc": "5300:54:14",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:14",
														"nodeType": "YulTypedName",
														"src": "5261:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:14",
														"nodeType": "YulTypedName",
														"src": "5271:7:14",
														"type": ""
													}
												],
												"src": "5234:126:14"
											},
											{
												"body": {
													"nativeSrc": "5411:51:14",
													"nodeType": "YulBlock",
													"src": "5411:51:14",
													"statements": [
														{
															"nativeSrc": "5421:35:14",
															"nodeType": "YulAssignment",
															"src": "5421:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:14"
																},
																"nativeSrc": "5432:24:14",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:14",
														"nodeType": "YulTypedName",
														"src": "5393:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:14",
														"nodeType": "YulTypedName",
														"src": "5403:7:14",
														"type": ""
													}
												],
												"src": "5366:96:14"
											},
											{
												"body": {
													"nativeSrc": "5533:53:14",
													"nodeType": "YulBlock",
													"src": "5533:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:14"
																		},
																		"nativeSrc": "5555:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:14"
																},
																"nativeSrc": "5543:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:14"
															},
															"nativeSrc": "5543:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:14",
														"nodeType": "YulTypedName",
														"src": "5521:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:14",
														"nodeType": "YulTypedName",
														"src": "5528:3:14",
														"type": ""
													}
												],
												"src": "5468:118:14"
											},
											{
												"body": {
													"nativeSrc": "5637:32:14",
													"nodeType": "YulBlock",
													"src": "5637:32:14",
													"statements": [
														{
															"nativeSrc": "5647:16:14",
															"nodeType": "YulAssignment",
															"src": "5647:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "5658:5:14",
																"nodeType": "YulIdentifier",
																"src": "5658:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5647:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "5647:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5592:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5619:5:14",
														"nodeType": "YulTypedName",
														"src": "5619:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5629:7:14",
														"nodeType": "YulTypedName",
														"src": "5629:7:14",
														"type": ""
													}
												],
												"src": "5592:77:14"
											},
											{
												"body": {
													"nativeSrc": "5740:53:14",
													"nodeType": "YulBlock",
													"src": "5740:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5757:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5757:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5780:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5780:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5762:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "5762:17:14"
																		},
																		"nativeSrc": "5762:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5762:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5750:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5750:6:14"
																},
																"nativeSrc": "5750:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5750:37:14"
															},
															"nativeSrc": "5750:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "5750:37:14"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5675:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5728:5:14",
														"nodeType": "YulTypedName",
														"src": "5728:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5735:3:14",
														"nodeType": "YulTypedName",
														"src": "5735:3:14",
														"type": ""
													}
												],
												"src": "5675:118:14"
											},
											{
												"body": {
													"nativeSrc": "5925:206:14",
													"nodeType": "YulBlock",
													"src": "5925:206:14",
													"statements": [
														{
															"nativeSrc": "5935:26:14",
															"nodeType": "YulAssignment",
															"src": "5935:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5947:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5947:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5958:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5958:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5943:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5943:3:14"
																},
																"nativeSrc": "5943:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5943:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5935:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5935:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6015:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6015:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6028:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6028:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6039:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6039:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6024:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6024:3:14"
																		},
																		"nativeSrc": "6024:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6024:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5971:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "5971:43:14"
																},
																"nativeSrc": "5971:71:14",
																"nodeType": "YulFunctionCall",
																"src": "5971:71:14"
															},
															"nativeSrc": "5971:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "5971:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6096:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6096:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6109:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6109:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6120:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6120:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6105:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6105:3:14"
																		},
																		"nativeSrc": "6105:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6105:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6052:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "6052:43:14"
																},
																"nativeSrc": "6052:72:14",
																"nodeType": "YulFunctionCall",
																"src": "6052:72:14"
															},
															"nativeSrc": "6052:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "6052:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "5799:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5889:9:14",
														"nodeType": "YulTypedName",
														"src": "5889:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5901:6:14",
														"nodeType": "YulTypedName",
														"src": "5901:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5909:6:14",
														"nodeType": "YulTypedName",
														"src": "5909:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5920:4:14",
														"nodeType": "YulTypedName",
														"src": "5920:4:14",
														"type": ""
													}
												],
												"src": "5799:332:14"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405180606001604052806025815260200162002f1a602591396200003c816200005760201b60201c565b50620000515f801b336200006c60201b60201c565b6200067a565b80600290816200006891906200050e565b5050565b6200007d82620000a660201b60201c565b6200008e81620000c360201b60201c565b620000a08383620000e760201b60201c565b50505050565b5f60035f8381526020019081526020015f20600101549050919050565b620000e481620000d8620001e360201b60201c565b620001ea60201b60201c565b50565b5f620000fa83836200024660201b60201c565b620001d957600160035f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555062000175620001e360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050620001dd565b5f90505b92915050565b5f33905090565b620001fc82826200024660201b60201c565b620002425780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401620002399291906200064f565b60405180910390fd5b5050565b5f60035f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200032657607f821691505b6020821081036200033c576200033b620002e1565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000363565b620003ac868362000363565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620003f6620003f0620003ea84620003c4565b620003cd565b620003c4565b9050919050565b5f819050919050565b6200041183620003d6565b620004296200042082620003fd565b8484546200036f565b825550505050565b5f90565b6200043f62000431565b6200044c81848462000406565b505050565b5b818110156200047357620004675f8262000435565b60018101905062000452565b5050565b601f821115620004c2576200048c8162000342565b620004978462000354565b81016020851015620004a7578190505b620004bf620004b68562000354565b83018262000451565b50505b505050565b5f82821c905092915050565b5f620004e45f1984600802620004c7565b1980831691505092915050565b5f620004fe8383620004d3565b9150826002028217905092915050565b6200051982620002aa565b67ffffffffffffffff811115620005355762000534620002b4565b5b6200054182546200030e565b6200054e82828562000477565b5f60209050601f83116001811462000584575f84156200056f578287015190505b6200057b8582620004f1565b865550620005ea565b601f198416620005948662000342565b5f5b82811015620005bd5784890151825560018201915060208501945060208101905062000596565b86831015620005dd5784890151620005d9601f891682620004d3565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200061d82620005f2565b9050919050565b6200062f8162000611565b82525050565b5f819050919050565b620006498162000635565b82525050565b5f604082019050620006645f83018562000624565b6200067360208301846200063e565b9392505050565b61289280620006885f395ff3fe608060405234801561000f575f80fd5b5060043610610113575f3560e01c806386e5c15a116100a0578063ae169a501161006f578063ae169a50146102ff578063d547741f1461031b578063e985e9c514610337578063f242432a14610367578063f7be43fb1461038357610113565b806386e5c15a1461027757806391d1485414610295578063a217fddf146102c5578063a22cb465146102e357610113565b80632eb2c2d6116100e75780632eb2c2d6146101d75780632f2ff15d146101f357806336568abe1461020f5780633ff3226d1461022b5780634e1273f41461024757610113565b8062fdd58e1461011757806301ffc9a7146101475780630e89341c14610177578063248a9ca3146101a7575b5f80fd5b610131600480360381019061012c9190611b8b565b6103a1565b60405161013e9190611bd8565b60405180910390f35b610161600480360381019061015c9190611c46565b6103f6565b60405161016e9190611c8b565b60405180910390f35b610191600480360381019061018c9190611ca4565b610417565b60405161019e9190611d59565b60405180910390f35b6101c160048036038101906101bc9190611dac565b6104a9565b6040516101ce9190611de6565b60405180910390f35b6101f160048036038101906101ec9190611fef565b6104c6565b005b61020d600480360381019061020891906120ba565b61056d565b005b610229600480360381019061022491906120ba565b61058f565b005b61024560048036038101906102409190611b8b565b61060a565b005b610261600480360381019061025c91906121b8565b610691565b60405161026e91906122e5565b60405180910390f35b61027f610798565b60405161028c9190611de6565b60405180910390f35b6102af60048036038101906102aa91906120ba565b6107bc565b6040516102bc9190611c8b565b60405180910390f35b6102cd610820565b6040516102da9190611de6565b60405180910390f35b6102fd60048036038101906102f8919061232f565b610826565b005b61031960048036038101906103149190611ca4565b61083c565b005b610335600480360381019061033091906120ba565b6108db565b005b610351600480360381019061034c919061236d565b6108fd565b60405161035e9190611c8b565b60405180910390f35b610381600480360381019061037c91906123ab565b61098b565b005b61038b610a32565b6040516103989190611de6565b60405180910390f35b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f61040082610a56565b80610410575061040f82610b37565b5b9050919050565b6060600280546104269061246b565b80601f01602080910402602001604051908101604052809291908181526020018280546104529061246b565b801561049d5780601f106104745761010080835404028352916020019161049d565b820191905f5260205f20905b81548152906001019060200180831161048057829003601f168201915b50505050509050919050565b5f60035f8381526020019081526020015f20600101549050919050565b5f6104cf610bb0565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610514575061051286826108fd565b155b156105585780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161054f9291906124aa565b60405180910390fd5b6105658686868686610bb7565b505050505050565b610576826104a9565b61057f81610cab565b6105898383610cbf565b50505050565b610597610bb0565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105fb576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106058282610da9565b505050565b6106347fd16e204b8a42a15ab0ea6bb8ec1ecdfbe69f38074fc865323af19efe7d9573d9336107bc565b610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066a9061251b565b60405180910390fd5b61068d825f8360405180602001604052805f815250610e93565b5050565b606081518351146106dd57815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016106d4929190612539565b60405180910390fd5b5f835167ffffffffffffffff8111156106f9576106f8611e03565b5b6040519080825280602002602001820160405280156107275781602001602082028036833780820191505090505b5090505f5b845181101561078d5761076361074b8287610f2890919063ffffffff16565b61075e8387610f3b90919063ffffffff16565b6103a1565b82828151811061077657610775612560565b5b60200260200101818152505080600101905061072c565b508091505092915050565b7fd16e204b8a42a15ab0ea6bb8ec1ecdfbe69f38074fc865323af19efe7d9573d981565b5f60035f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b610838610831610bb0565b8383610f4e565b5050565b6108667f36a5c4aaacb6b388bbd448bf11096b7dafc5652bcc9046084fd0e95b1fb0b2cc336107bc565b6108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c906125d7565b60405180910390fd5b5f6108af826110b7565b90506108bc335f836110c1565b6108d73383600160405180602001604052805f815250610e93565b5050565b6108e4826104a9565b6108ed81610cab565b6108f78383610da9565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f610994610bb0565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156109d957506109d786826108fd565b155b15610a1d5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610a149291906124aa565b60405180910390fd5b610a2a8686868686611163565b505050505050565b7f36a5c4aaacb6b388bbd448bf11096b7dafc5652bcc9046084fd0e95b1fb0b2cc81565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610b2057507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610b305750610b2f82611269565b5b9050919050565b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610ba95750610ba882610a56565b5b9050919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c27575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610c1e91906125f5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610c97575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610c8e91906125f5565b60405180910390fd5b610ca485858585856112d2565b5050505050565b610cbc81610cb7610bb0565b61137e565b50565b5f610cca83836107bc565b610d9f57600160035f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610d3c610bb0565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610da3565b5f90505b92915050565b5f610db483836107bc565b15610e89575f60035f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610e26610bb0565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610e8d565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f03575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610efa91906125f5565b60405180910390fd5b5f80610f0f85856113cf565b91509150610f205f878484876112d2565b505050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fbe575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610fb591906125f5565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110aa9190611c8b565b60405180910390a3505050565b5f600a9050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611131575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161112891906125f5565b60405180910390fd5b5f8061113d84846113cf565b9150915061115c855f848460405180602001604052805f8152506112d2565b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111d3575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111ca91906125f5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611243575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161123a91906125f5565b60405180910390fd5b5f8061124f85856113cf565b9150915061126087878484876112d2565b50505050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6112de858585856113ff565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611377575f61131a610bb0565b90506001845103611366575f6113395f86610f3b90919063ffffffff16565b90505f61134f5f86610f3b90919063ffffffff16565b905061135f83898985858961178f565b5050611375565b61137481878787878761193e565b5b505b5050505050565b61138882826107bc565b6113cb5780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016113c292919061260e565b60405180910390fd5b5050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b805182511461144957815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401611440929190612539565b60405180910390fd5b5f611452610bb0565b90505f5b835181101561164e575f6114738286610f3b90919063ffffffff16565b90505f6114898386610f3b90919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146115ac575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561155857888183856040517f03dee4c500000000000000000000000000000000000000000000000000000000815260040161154f9493929190612635565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461164157805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461163991906126a5565b925050819055505b5050806001019050611456565b506001835103611709575f61166c5f85610f3b90919063ffffffff16565b90505f6116825f85610f3b90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516116fa929190612539565b60405180910390a45050611788565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161177f9291906126d8565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611936578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016117ef95949392919061275f565b6020604051808303815f875af192505050801561182a57506040513d601f19601f8201168201806040525081019061182791906127cb565b60015b6118ab573d805f8114611858576040519150601f19603f3d011682016040523d82523d5f602084013e61185d565b606091505b505f8151036118a357846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161189a91906125f5565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461193457846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161192b91906125f5565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611ae5578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161199e9594939291906127f6565b6020604051808303815f875af19250505080156119d957506040513d601f19601f820116820180604052508101906119d691906127cb565b60015b611a5a573d805f8114611a07576040519150601f19603f3d011682016040523d82523d5f602084013e611a0c565b606091505b505f815103611a5257846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611a4991906125f5565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611ae357846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611ada91906125f5565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611b2782611afe565b9050919050565b611b3781611b1d565b8114611b41575f80fd5b50565b5f81359050611b5281611b2e565b92915050565b5f819050919050565b611b6a81611b58565b8114611b74575f80fd5b50565b5f81359050611b8581611b61565b92915050565b5f8060408385031215611ba157611ba0611af6565b5b5f611bae85828601611b44565b9250506020611bbf85828601611b77565b9150509250929050565b611bd281611b58565b82525050565b5f602082019050611beb5f830184611bc9565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c2581611bf1565b8114611c2f575f80fd5b50565b5f81359050611c4081611c1c565b92915050565b5f60208284031215611c5b57611c5a611af6565b5b5f611c6884828501611c32565b91505092915050565b5f8115159050919050565b611c8581611c71565b82525050565b5f602082019050611c9e5f830184611c7c565b92915050565b5f60208284031215611cb957611cb8611af6565b5b5f611cc684828501611b77565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611d06578082015181840152602081019050611ceb565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611d2b82611ccf565b611d358185611cd9565b9350611d45818560208601611ce9565b611d4e81611d11565b840191505092915050565b5f6020820190508181035f830152611d718184611d21565b905092915050565b5f819050919050565b611d8b81611d79565b8114611d95575f80fd5b50565b5f81359050611da681611d82565b92915050565b5f60208284031215611dc157611dc0611af6565b5b5f611dce84828501611d98565b91505092915050565b611de081611d79565b82525050565b5f602082019050611df95f830184611dd7565b92915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611e3982611d11565b810181811067ffffffffffffffff82111715611e5857611e57611e03565b5b80604052505050565b5f611e6a611aed565b9050611e768282611e30565b919050565b5f67ffffffffffffffff821115611e9557611e94611e03565b5b602082029050602081019050919050565b5f80fd5b5f611ebc611eb784611e7b565b611e61565b90508083825260208201905060208402830185811115611edf57611ede611ea6565b5b835b81811015611f085780611ef48882611b77565b845260208401935050602081019050611ee1565b5050509392505050565b5f82601f830112611f2657611f25611dff565b5b8135611f36848260208601611eaa565b91505092915050565b5f80fd5b5f67ffffffffffffffff821115611f5d57611f5c611e03565b5b611f6682611d11565b9050602081019050919050565b828183375f83830152505050565b5f611f93611f8e84611f43565b611e61565b905082815260208101848484011115611faf57611fae611f3f565b5b611fba848285611f73565b509392505050565b5f82601f830112611fd657611fd5611dff565b5b8135611fe6848260208601611f81565b91505092915050565b5f805f805f60a0868803121561200857612007611af6565b5b5f61201588828901611b44565b955050602061202688828901611b44565b945050604086013567ffffffffffffffff81111561204757612046611afa565b5b61205388828901611f12565b935050606086013567ffffffffffffffff81111561207457612073611afa565b5b61208088828901611f12565b925050608086013567ffffffffffffffff8111156120a1576120a0611afa565b5b6120ad88828901611fc2565b9150509295509295909350565b5f80604083850312156120d0576120cf611af6565b5b5f6120dd85828601611d98565b92505060206120ee85828601611b44565b9150509250929050565b5f67ffffffffffffffff82111561211257612111611e03565b5b602082029050602081019050919050565b5f612135612130846120f8565b611e61565b9050808382526020820190506020840283018581111561215857612157611ea6565b5b835b81811015612181578061216d8882611b44565b84526020840193505060208101905061215a565b5050509392505050565b5f82601f83011261219f5761219e611dff565b5b81356121af848260208601612123565b91505092915050565b5f80604083850312156121ce576121cd611af6565b5b5f83013567ffffffffffffffff8111156121eb576121ea611afa565b5b6121f78582860161218b565b925050602083013567ffffffffffffffff81111561221857612217611afa565b5b61222485828601611f12565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61226081611b58565b82525050565b5f6122718383612257565b60208301905092915050565b5f602082019050919050565b5f6122938261222e565b61229d8185612238565b93506122a883612248565b805f5b838110156122d85781516122bf8882612266565b97506122ca8361227d565b9250506001810190506122ab565b5085935050505092915050565b5f6020820190508181035f8301526122fd8184612289565b905092915050565b61230e81611c71565b8114612318575f80fd5b50565b5f8135905061232981612305565b92915050565b5f806040838503121561234557612344611af6565b5b5f61235285828601611b44565b92505060206123638582860161231b565b9150509250929050565b5f806040838503121561238357612382611af6565b5b5f61239085828601611b44565b92505060206123a185828601611b44565b9150509250929050565b5f805f805f60a086880312156123c4576123c3611af6565b5b5f6123d188828901611b44565b95505060206123e288828901611b44565b94505060406123f388828901611b77565b935050606061240488828901611b77565b925050608086013567ffffffffffffffff81111561242557612424611afa565b5b61243188828901611fc2565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061248257607f821691505b6020821081036124955761249461243e565b5b50919050565b6124a481611b1d565b82525050565b5f6040820190506124bd5f83018561249b565b6124ca602083018461249b565b9392505050565b7f4f6e6c792074656163686572732063616e2061776172642063726564697473005f82015250565b5f612505601f83611cd9565b9150612510826124d1565b602082019050919050565b5f6020820190508181035f830152612532816124f9565b9050919050565b5f60408201905061254c5f830185611bc9565b6125596020830184611bc9565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4f6e6c792073747564656e74732063616e20636c61696d2072657761726473005f82015250565b5f6125c1601f83611cd9565b91506125cc8261258d565b602082019050919050565b5f6020820190508181035f8301526125ee816125b5565b9050919050565b5f6020820190506126085f83018461249b565b92915050565b5f6040820190506126215f83018561249b565b61262e6020830184611dd7565b9392505050565b5f6080820190506126485f83018761249b565b6126556020830186611bc9565b6126626040830185611bc9565b61266f6060830184611bc9565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6126af82611b58565b91506126ba83611b58565b92508282019050808211156126d2576126d1612678565b5b92915050565b5f6040820190508181035f8301526126f08185612289565b905081810360208301526127048184612289565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6127318261270d565b61273b8185612717565b935061274b818560208601611ce9565b61275481611d11565b840191505092915050565b5f60a0820190506127725f83018861249b565b61277f602083018761249b565b61278c6040830186611bc9565b6127996060830185611bc9565b81810360808301526127ab8184612727565b90509695505050505050565b5f815190506127c581611c1c565b92915050565b5f602082840312156127e0576127df611af6565b5b5f6127ed848285016127b7565b91505092915050565b5f60a0820190506128095f83018861249b565b612816602083018761249b565b81810360408301526128288186612289565b9050818103606083015261283c8185612289565b905081810360808301526128508184612727565b9050969550505050505056fea2646970667358221220cd5fc6662917bd6cbf3a4aa67a5a72f1c2bb62328e81e139f7eb3be2f1bec3ae64736f6c6343000816003368747470733a2f2f6d796170692e636f6d2f6170692f746f6b656e2f7b69647d2e6a736f6e",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2F1A PUSH1 0x25 SWAP2 CODECOPY PUSH3 0x3C DUP2 PUSH3 0x57 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x51 PUSH0 DUP1 SHL CALLER PUSH3 0x6C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x67A JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x68 SWAP2 SWAP1 PUSH3 0x50E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x7D DUP3 PUSH3 0xA6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x8E DUP2 PUSH3 0xC3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA0 DUP4 DUP4 PUSH3 0xE7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE4 DUP2 PUSH3 0xD8 PUSH3 0x1E3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1EA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH3 0xFA DUP4 DUP4 PUSH3 0x246 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1D9 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x175 PUSH3 0x1E3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x1DD JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x1FC DUP3 DUP3 PUSH3 0x246 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x242 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x239 SWAP3 SWAP2 SWAP1 PUSH3 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x326 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x33C JUMPI PUSH3 0x33B PUSH3 0x2E1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x3A0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x363 JUMP JUMPDEST PUSH3 0x3AC DUP7 DUP4 PUSH3 0x363 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x3F6 PUSH3 0x3F0 PUSH3 0x3EA DUP5 PUSH3 0x3C4 JUMP JUMPDEST PUSH3 0x3CD JUMP JUMPDEST PUSH3 0x3C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x411 DUP4 PUSH3 0x3D6 JUMP JUMPDEST PUSH3 0x429 PUSH3 0x420 DUP3 PUSH3 0x3FD JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x36F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x43F PUSH3 0x431 JUMP JUMPDEST PUSH3 0x44C DUP2 DUP5 DUP5 PUSH3 0x406 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x473 JUMPI PUSH3 0x467 PUSH0 DUP3 PUSH3 0x435 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x452 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4C2 JUMPI PUSH3 0x48C DUP2 PUSH3 0x342 JUMP JUMPDEST PUSH3 0x497 DUP5 PUSH3 0x354 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4A7 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x4BF PUSH3 0x4B6 DUP6 PUSH3 0x354 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x451 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4E4 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x4C7 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4FE DUP4 DUP4 PUSH3 0x4D3 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x519 DUP3 PUSH3 0x2AA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x535 JUMPI PUSH3 0x534 PUSH3 0x2B4 JUMP JUMPDEST JUMPDEST PUSH3 0x541 DUP3 SLOAD PUSH3 0x30E JUMP JUMPDEST PUSH3 0x54E DUP3 DUP3 DUP6 PUSH3 0x477 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x584 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x56F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x57B DUP6 DUP3 PUSH3 0x4F1 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5EA JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x594 DUP7 PUSH3 0x342 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5BD JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x596 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5DD JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5D9 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4D3 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x61D DUP3 PUSH3 0x5F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x62F DUP2 PUSH3 0x611 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x649 DUP2 PUSH3 0x635 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x664 PUSH0 DUP4 ADD DUP6 PUSH3 0x624 JUMP JUMPDEST PUSH3 0x673 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x63E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2892 DUP1 PUSH3 0x688 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x113 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86E5C15A GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xAE169A50 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xF7BE43FB EQ PUSH2 0x383 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x86E5C15A EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E3 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x3FF3226D EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x247 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1C46 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x1DE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1FEF JUMP JUMPDEST PUSH2 0x4C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH2 0x56D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x22E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1DE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1DE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x232F JUMP JUMPDEST PUSH2 0x826 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x335 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH2 0x8DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x236D JUMP JUMPDEST PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH2 0x98B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38B PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x1DE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x400 DUP3 PUSH2 0xA56 JUMP JUMPDEST DUP1 PUSH2 0x410 JUMPI POP PUSH2 0x40F DUP3 PUSH2 0xB37 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x426 SWAP1 PUSH2 0x246B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x452 SWAP1 PUSH2 0x246B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x474 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x480 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4CF PUSH2 0xBB0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x514 JUMPI POP PUSH2 0x512 DUP7 DUP3 PUSH2 0x8FD JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x558 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP3 SWAP2 SWAP1 PUSH2 0x24AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x565 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xBB7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x576 DUP3 PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x57F DUP2 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xCBF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x597 PUSH2 0xBB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x605 DUP3 DUP3 PUSH2 0xDA9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x634 PUSH32 0xD16E204B8A42A15AB0EA6BB8EC1ECDFBE69F38074FC865323AF19EFE7D9573D9 CALLER PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66A SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68D DUP3 PUSH0 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xE93 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x6DD JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D4 SWAP3 SWAP2 SWAP1 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6F9 JUMPI PUSH2 0x6F8 PUSH2 0x1E03 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x727 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x78D JUMPI PUSH2 0x763 PUSH2 0x74B DUP3 DUP8 PUSH2 0xF28 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x75E DUP4 DUP8 PUSH2 0xF3B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x776 JUMPI PUSH2 0x775 PUSH2 0x2560 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x72C JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xD16E204B8A42A15AB0EA6BB8EC1ECDFBE69F38074FC865323AF19EFE7D9573D9 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x838 PUSH2 0x831 PUSH2 0xBB0 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF4E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x866 PUSH32 0x36A5C4AAACB6B388BBD448BF11096B7DAFC5652BCC9046084FD0E95B1FB0B2CC CALLER PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x8A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89C SWAP1 PUSH2 0x25D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x8AF DUP3 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BC CALLER PUSH0 DUP4 PUSH2 0x10C1 JUMP JUMPDEST PUSH2 0x8D7 CALLER DUP4 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xE93 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8E4 DUP3 PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x8ED DUP2 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0x8F7 DUP4 DUP4 PUSH2 0xDA9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x994 PUSH2 0xBB0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x9D9 JUMPI POP PUSH2 0x9D7 DUP7 DUP3 PUSH2 0x8FD JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA1D JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA14 SWAP3 SWAP2 SWAP1 PUSH2 0x24AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA2A DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1163 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x36A5C4AAACB6B388BBD448BF11096B7DAFC5652BCC9046084FD0E95B1FB0B2CC DUP2 JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xB20 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xB30 JUMPI POP PUSH2 0xB2F DUP3 PUSH2 0x1269 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xBA9 JUMPI POP PUSH2 0xBA8 DUP3 PUSH2 0xA56 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC27 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1E SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC97 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8E SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA4 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x12D2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCBC DUP2 PUSH2 0xCB7 PUSH2 0xBB0 JUMP JUMPDEST PUSH2 0x137E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xCCA DUP4 DUP4 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0xD9F JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD3C PUSH2 0xBB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xDA3 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDB4 DUP4 DUP4 PUSH2 0x7BC JUMP JUMPDEST ISZERO PUSH2 0xE89 JUMPI PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE26 PUSH2 0xBB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xE8D JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF03 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFA SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xF0F DUP6 DUP6 PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xF20 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x12D2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFBE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB5 SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10AA SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1131 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1128 SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x113D DUP5 DUP5 PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x115C DUP6 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x12D2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11D3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CA SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1243 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123A SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x124F DUP6 DUP6 PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1260 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x12D2 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DE DUP6 DUP6 DUP6 DUP6 PUSH2 0x13FF JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1377 JUMPI PUSH0 PUSH2 0x131A PUSH2 0xBB0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x1366 JUMPI PUSH0 PUSH2 0x1339 PUSH0 DUP7 PUSH2 0xF3B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x134F PUSH0 DUP7 PUSH2 0xF3B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x135F DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x178F JUMP JUMPDEST POP POP PUSH2 0x1375 JUMP JUMPDEST PUSH2 0x1374 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x193E JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1388 DUP3 DUP3 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x13CB JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C2 SWAP3 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1449 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1440 SWAP3 SWAP2 SWAP1 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1452 PUSH2 0xBB0 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x164E JUMPI PUSH0 PUSH2 0x1473 DUP3 DUP7 PUSH2 0xF3B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1489 DUP4 DUP7 PUSH2 0xF3B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15AC JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1558 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1641 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1639 SWAP2 SWAP1 PUSH2 0x26A5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1456 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1709 JUMPI PUSH0 PUSH2 0x166C PUSH0 DUP6 PUSH2 0xF3B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1682 PUSH0 DUP6 PUSH2 0xF3B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x16FA SWAP3 SWAP2 SWAP1 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1788 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x177F SWAP3 SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1936 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17EF SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x275F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x182A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1827 SWAP2 SWAP1 PUSH2 0x27CB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x18AB JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1858 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x185D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x18A3 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x189A SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1934 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192B SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1AE5 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27F6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19D9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19D6 SWAP2 SWAP1 PUSH2 0x27CB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A5A JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1A07 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1A52 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A49 SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1AE3 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ADA SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B27 DUP3 PUSH2 0x1AFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B37 DUP2 PUSH2 0x1B1D JUMP JUMPDEST DUP2 EQ PUSH2 0x1B41 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B52 DUP2 PUSH2 0x1B2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B6A DUP2 PUSH2 0x1B58 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B74 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B85 DUP2 PUSH2 0x1B61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BA1 JUMPI PUSH2 0x1BA0 PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BAE DUP6 DUP3 DUP7 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BBF DUP6 DUP3 DUP7 ADD PUSH2 0x1B77 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD2 DUP2 PUSH2 0x1B58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BEB PUSH0 DUP4 ADD DUP5 PUSH2 0x1BC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C25 DUP2 PUSH2 0x1BF1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C2F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C40 DUP2 PUSH2 0x1C1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5B JUMPI PUSH2 0x1C5A PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C68 DUP5 DUP3 DUP6 ADD PUSH2 0x1C32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C85 DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C9E PUSH0 DUP4 ADD DUP5 PUSH2 0x1C7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB9 JUMPI PUSH2 0x1CB8 PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CC6 DUP5 DUP3 DUP6 ADD PUSH2 0x1B77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D06 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CEB JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D2B DUP3 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x1D35 DUP2 DUP6 PUSH2 0x1CD9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D45 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE9 JUMP JUMPDEST PUSH2 0x1D4E DUP2 PUSH2 0x1D11 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D71 DUP2 DUP5 PUSH2 0x1D21 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D8B DUP2 PUSH2 0x1D79 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D95 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DA6 DUP2 PUSH2 0x1D82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DC1 JUMPI PUSH2 0x1DC0 PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DCE DUP5 DUP3 DUP6 ADD PUSH2 0x1D98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DE0 DUP2 PUSH2 0x1D79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DF9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1E39 DUP3 PUSH2 0x1D11 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E58 JUMPI PUSH2 0x1E57 PUSH2 0x1E03 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6A PUSH2 0x1AED JUMP JUMPDEST SWAP1 POP PUSH2 0x1E76 DUP3 DUP3 PUSH2 0x1E30 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E95 JUMPI PUSH2 0x1E94 PUSH2 0x1E03 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1EBC PUSH2 0x1EB7 DUP5 PUSH2 0x1E7B JUMP JUMPDEST PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1EDF JUMPI PUSH2 0x1EDE PUSH2 0x1EA6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F08 JUMPI DUP1 PUSH2 0x1EF4 DUP9 DUP3 PUSH2 0x1B77 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EE1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F26 JUMPI PUSH2 0x1F25 PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F36 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F5D JUMPI PUSH2 0x1F5C PUSH2 0x1E03 JUMP JUMPDEST JUMPDEST PUSH2 0x1F66 DUP3 PUSH2 0x1D11 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F93 PUSH2 0x1F8E DUP5 PUSH2 0x1F43 JUMP JUMPDEST PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1FAF JUMPI PUSH2 0x1FAE PUSH2 0x1F3F JUMP JUMPDEST JUMPDEST PUSH2 0x1FBA DUP5 DUP3 DUP6 PUSH2 0x1F73 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FD6 JUMPI PUSH2 0x1FD5 PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1FE6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F81 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2008 JUMPI PUSH2 0x2007 PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2015 DUP9 DUP3 DUP10 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2026 DUP9 DUP3 DUP10 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2047 JUMPI PUSH2 0x2046 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH2 0x2053 DUP9 DUP3 DUP10 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2074 JUMPI PUSH2 0x2073 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH2 0x2080 DUP9 DUP3 DUP10 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A1 JUMPI PUSH2 0x20A0 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH2 0x20AD DUP9 DUP3 DUP10 ADD PUSH2 0x1FC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20D0 JUMPI PUSH2 0x20CF PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20DD DUP6 DUP3 DUP7 ADD PUSH2 0x1D98 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20EE DUP6 DUP3 DUP7 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2112 JUMPI PUSH2 0x2111 PUSH2 0x1E03 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2135 PUSH2 0x2130 DUP5 PUSH2 0x20F8 JUMP JUMPDEST PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2158 JUMPI PUSH2 0x2157 PUSH2 0x1EA6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2181 JUMPI DUP1 PUSH2 0x216D DUP9 DUP3 PUSH2 0x1B44 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x215A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x219F JUMPI PUSH2 0x219E PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21AF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2123 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21CE JUMPI PUSH2 0x21CD PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21EB JUMPI PUSH2 0x21EA PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH2 0x21F7 DUP6 DUP3 DUP7 ADD PUSH2 0x218B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2218 JUMPI PUSH2 0x2217 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH2 0x2224 DUP6 DUP3 DUP7 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2260 DUP2 PUSH2 0x1B58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2271 DUP4 DUP4 PUSH2 0x2257 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2293 DUP3 PUSH2 0x222E JUMP JUMPDEST PUSH2 0x229D DUP2 DUP6 PUSH2 0x2238 JUMP JUMPDEST SWAP4 POP PUSH2 0x22A8 DUP4 PUSH2 0x2248 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22D8 JUMPI DUP2 MLOAD PUSH2 0x22BF DUP9 DUP3 PUSH2 0x2266 JUMP JUMPDEST SWAP8 POP PUSH2 0x22CA DUP4 PUSH2 0x227D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x22AB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22FD DUP2 DUP5 PUSH2 0x2289 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x230E DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP2 EQ PUSH2 0x2318 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2329 DUP2 PUSH2 0x2305 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2345 JUMPI PUSH2 0x2344 PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2352 DUP6 DUP3 DUP7 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2363 DUP6 DUP3 DUP7 ADD PUSH2 0x231B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2383 JUMPI PUSH2 0x2382 PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2390 DUP6 DUP3 DUP7 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23A1 DUP6 DUP3 DUP7 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x23C4 JUMPI PUSH2 0x23C3 PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23D1 DUP9 DUP3 DUP10 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x23E2 DUP9 DUP3 DUP10 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x23F3 DUP9 DUP3 DUP10 ADD PUSH2 0x1B77 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2404 DUP9 DUP3 DUP10 ADD PUSH2 0x1B77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2425 JUMPI PUSH2 0x2424 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH2 0x2431 DUP9 DUP3 DUP10 ADD PUSH2 0x1FC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2482 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2495 JUMPI PUSH2 0x2494 PUSH2 0x243E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A4 DUP2 PUSH2 0x1B1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24BD PUSH0 DUP4 ADD DUP6 PUSH2 0x249B JUMP JUMPDEST PUSH2 0x24CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x249B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792074656163686572732063616E206177617264206372656469747300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2505 PUSH1 0x1F DUP4 PUSH2 0x1CD9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2510 DUP3 PUSH2 0x24D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2532 DUP2 PUSH2 0x24F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x254C PUSH0 DUP4 ADD DUP6 PUSH2 0x1BC9 JUMP JUMPDEST PUSH2 0x2559 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BC9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4F6E6C792073747564656E74732063616E20636C61696D207265776172647300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25C1 PUSH1 0x1F DUP4 PUSH2 0x1CD9 JUMP JUMPDEST SWAP2 POP PUSH2 0x25CC DUP3 PUSH2 0x258D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25EE DUP2 PUSH2 0x25B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2608 PUSH0 DUP4 ADD DUP5 PUSH2 0x249B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2621 PUSH0 DUP4 ADD DUP6 PUSH2 0x249B JUMP JUMPDEST PUSH2 0x262E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DD7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2648 PUSH0 DUP4 ADD DUP8 PUSH2 0x249B JUMP JUMPDEST PUSH2 0x2655 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1BC9 JUMP JUMPDEST PUSH2 0x2662 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1BC9 JUMP JUMPDEST PUSH2 0x266F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1BC9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26AF DUP3 PUSH2 0x1B58 JUMP JUMPDEST SWAP2 POP PUSH2 0x26BA DUP4 PUSH2 0x1B58 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26D2 JUMPI PUSH2 0x26D1 PUSH2 0x2678 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26F0 DUP2 DUP6 PUSH2 0x2289 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2704 DUP2 DUP5 PUSH2 0x2289 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2731 DUP3 PUSH2 0x270D JUMP JUMPDEST PUSH2 0x273B DUP2 DUP6 PUSH2 0x2717 JUMP JUMPDEST SWAP4 POP PUSH2 0x274B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE9 JUMP JUMPDEST PUSH2 0x2754 DUP2 PUSH2 0x1D11 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2772 PUSH0 DUP4 ADD DUP9 PUSH2 0x249B JUMP JUMPDEST PUSH2 0x277F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x249B JUMP JUMPDEST PUSH2 0x278C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1BC9 JUMP JUMPDEST PUSH2 0x2799 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1BC9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x27AB DUP2 DUP5 PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27C5 DUP2 PUSH2 0x1C1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27E0 JUMPI PUSH2 0x27DF PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27ED DUP5 DUP3 DUP6 ADD PUSH2 0x27B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2809 PUSH0 DUP4 ADD DUP9 PUSH2 0x249B JUMP JUMPDEST PUSH2 0x2816 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x249B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2828 DUP2 DUP7 PUSH2 0x2289 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x283C DUP2 DUP6 PUSH2 0x2289 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2850 DUP2 DUP5 PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD PUSH0 0xC6 PUSH7 0x2917BD6CBF3A4A 0xA6 PUSH27 0x5A72F1C2BB62328E81E139F7EB3BE2F1BEC3AE64736F6C63430008 AND STOP CALLER PUSH9 0x747470733A2F2F6D79 PUSH2 0x7069 0x2E PUSH4 0x6F6D2F61 PUSH17 0x692F746F6B656E2F7B69647D2E6A736F6E ",
							"sourceMap": "290:1706:0:-:0;;;532:156;;;;;;;;;;1251:62:4;;;;;;;;;;;;;;;;;1293:13;1301:4;1293:7;;;:13;;:::i;:::-;1251:62;606:41:0::1;2232:4:1;616:18:0::0;::::1;636:10;606:9;;;:41;;:::i;:::-;290:1706:::0;;10282:86:4;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;4226:136:1:-;4300:18;4313:4;4300:12;;;:18;;:::i;:::-;2464:16;2475:4;2464:10;;;:16;;:::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;;;:25;;:::i;:::-;;4226:136:::0;;;:::o;3810:120::-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;3199:103::-;3265:30;3276:4;3282:12;:10;;;:12;;:::i;:::-;3265:10;;;:30;;:::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;3432:197:1:-;3520:22;3528:4;3534:7;3520;;;:22;;:::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;7:99:14:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:77::-;5629:7;5658:5;5647:16;;5592:77;;;:::o;5675:118::-;5762:24;5780:5;5762:24;:::i;:::-;5757:3;5750:37;5675:118;;:::o;5799:332::-;5920:4;5958:2;5947:9;5943:18;5935:26;;5971:71;6039:1;6028:9;6024:17;6015:6;5971:71;:::i;:::-;6052:72;6120:2;6109:9;6105:18;6096:6;6052:72;:::i;:::-;5799:332;;;;;:::o;290:1706:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_152": {
									"entryPoint": 2080,
									"id": 152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@STUDENT_ROLE_17": {
									"entryPoint": 2610,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TEACHER_ROLE_12": {
									"entryPoint": 1944,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_asSingletonArrays_1688": {
									"entryPoint": 5071,
									"id": 1688,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_burn_1455": {
									"entryPoint": 4289,
									"id": 1455,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkRole_216": {
									"entryPoint": 3243,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_237": {
									"entryPoint": 4990,
									"id": 237,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1672": {
									"entryPoint": 6462,
									"id": 1672,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1602": {
									"entryPoint": 6031,
									"id": 1602,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_grantRole_379": {
									"entryPoint": 3263,
									"id": 379,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1364": {
									"entryPoint": 3731,
									"id": 1364,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_2065": {
									"entryPoint": 2992,
									"id": 2065,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_417": {
									"entryPoint": 3497,
									"id": 417,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_1301": {
									"entryPoint": 2999,
									"id": 1301,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_1246": {
									"entryPoint": 4451,
									"id": 1246,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1534": {
									"entryPoint": 3918,
									"id": 1534,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_1180": {
									"entryPoint": 4818,
									"id": 1180,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_1104": {
									"entryPoint": 5119,
									"id": 1104,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@awardCredits_54": {
									"entryPoint": 1546,
									"id": 54,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOfBatch_828": {
									"entryPoint": 1681,
									"id": 828,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_758": {
									"entryPoint": 929,
									"id": 758,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimReward_90": {
									"entryPoint": 2108,
									"id": 90,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getRewardCost_100": {
									"entryPoint": 4279,
									"id": 100,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_251": {
									"entryPoint": 1193,
									"id": 251,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_270": {
									"entryPoint": 1389,
									"id": 270,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_203": {
									"entryPoint": 1980,
									"id": 203,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_861": {
									"entryPoint": 2301,
									"id": 861,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_312": {
									"entryPoint": 1423,
									"id": 312,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_289": {
									"entryPoint": 2267,
									"id": 289,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_951": {
									"entryPoint": 1222,
									"id": 951,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_905": {
									"entryPoint": 2443,
									"id": 905,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_844": {
									"entryPoint": 2086,
									"id": 844,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_121": {
									"entryPoint": 1014,
									"id": 121,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_185": {
									"entryPoint": 2871,
									"id": 185,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2208": {
									"entryPoint": 4713,
									"id": 2208,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_730": {
									"entryPoint": 2646,
									"id": 730,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_2039": {
									"entryPoint": 3899,
									"id": 2039,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_2052": {
									"entryPoint": 3880,
									"id": 2052,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_741": {
									"entryPoint": 1047,
									"id": 741,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8483,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7850,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8065,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 7576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 8175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 9131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 7596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 8378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 8806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 7639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6122524deead21d84ed31b4a09db3da08247d33ad5b6d78a8635067b970e12b2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f3d6a9ef91016e663229cd6c6ce7239109406c063c093b722046089e796be61_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 8791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 9386,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10230,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10079,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 9742,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9781,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9944,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 7654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6122524deead21d84ed31b4a09db3da08247d33ad5b6d78a8635067b970e12b2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f3d6a9ef91016e663229cd6c6ce7239109406c063c093b722046089e796be61__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9529,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6893,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8051,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7401,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 9848,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9278,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7683,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7679,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6906,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6902,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_6122524deead21d84ed31b4a09db3da08247d33ad5b6d78a8635067b970e12b2": {
									"entryPoint": 9425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7f3d6a9ef91016e663229cd6c6ce7239109406c063c093b722046089e796be61": {
									"entryPoint": 9613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:26851:14",
										"nodeType": "YulBlock",
										"src": "0:26851:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "379:81:14",
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nativeSrc": "389:65:14",
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:14",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nativeSrc": "400:54:14",
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:14",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:14",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nativeSrc": "511:51:14",
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nativeSrc": "521:35:14",
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nativeSrc": "532:24:14",
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:14",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:14",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nativeSrc": "611:79:14",
													"nodeType": "YulBlock",
													"src": "611:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:14",
																"nodeType": "YulBlock",
																"src": "668:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:14",
																					"nodeType": "YulLiteral",
																					"src": "677:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:14",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:14"
																			},
																			"nativeSrc": "670:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:14"
																		},
																		"nativeSrc": "670:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:14"
																				},
																				"nativeSrc": "641:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:14"
																		},
																		"nativeSrc": "631:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:14"
																},
																"nativeSrc": "624:43:14",
																"nodeType": "YulFunctionCall",
																"src": "624:43:14"
															},
															"nativeSrc": "621:63:14",
															"nodeType": "YulIf",
															"src": "621:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:14",
														"nodeType": "YulTypedName",
														"src": "604:5:14",
														"type": ""
													}
												],
												"src": "568:122:14"
											},
											{
												"body": {
													"nativeSrc": "748:87:14",
													"nodeType": "YulBlock",
													"src": "748:87:14",
													"statements": [
														{
															"nativeSrc": "758:29:14",
															"nodeType": "YulAssignment",
															"src": "758:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:14"
																},
																"nativeSrc": "767:20:14",
																"nodeType": "YulFunctionCall",
																"src": "767:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:14"
																},
																"nativeSrc": "796:33:14",
																"nodeType": "YulFunctionCall",
																"src": "796:33:14"
															},
															"nativeSrc": "796:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:14",
														"nodeType": "YulTypedName",
														"src": "726:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:14",
														"nodeType": "YulTypedName",
														"src": "734:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:14",
														"nodeType": "YulTypedName",
														"src": "742:5:14",
														"type": ""
													}
												],
												"src": "696:139:14"
											},
											{
												"body": {
													"nativeSrc": "886:32:14",
													"nodeType": "YulBlock",
													"src": "886:32:14",
													"statements": [
														{
															"nativeSrc": "896:16:14",
															"nodeType": "YulAssignment",
															"src": "896:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:14",
																"nodeType": "YulIdentifier",
																"src": "907:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:14",
														"nodeType": "YulTypedName",
														"src": "868:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:14",
														"nodeType": "YulTypedName",
														"src": "878:7:14",
														"type": ""
													}
												],
												"src": "841:77:14"
											},
											{
												"body": {
													"nativeSrc": "967:79:14",
													"nodeType": "YulBlock",
													"src": "967:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:14",
																"nodeType": "YulBlock",
																"src": "1024:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:14"
																			},
																			"nativeSrc": "1026:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:14"
																		},
																		"nativeSrc": "1026:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:14"
																				},
																				"nativeSrc": "997:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:14"
																		},
																		"nativeSrc": "987:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:14"
																},
																"nativeSrc": "980:43:14",
																"nodeType": "YulFunctionCall",
																"src": "980:43:14"
															},
															"nativeSrc": "977:63:14",
															"nodeType": "YulIf",
															"src": "977:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:14",
														"nodeType": "YulTypedName",
														"src": "960:5:14",
														"type": ""
													}
												],
												"src": "924:122:14"
											},
											{
												"body": {
													"nativeSrc": "1104:87:14",
													"nodeType": "YulBlock",
													"src": "1104:87:14",
													"statements": [
														{
															"nativeSrc": "1114:29:14",
															"nodeType": "YulAssignment",
															"src": "1114:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:14"
																},
																"nativeSrc": "1123:20:14",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:14"
																},
																"nativeSrc": "1152:33:14",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:14"
															},
															"nativeSrc": "1152:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:14",
														"nodeType": "YulTypedName",
														"src": "1082:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:14",
														"nodeType": "YulTypedName",
														"src": "1090:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:14",
														"nodeType": "YulTypedName",
														"src": "1098:5:14",
														"type": ""
													}
												],
												"src": "1052:139:14"
											},
											{
												"body": {
													"nativeSrc": "1280:391:14",
													"nodeType": "YulBlock",
													"src": "1280:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:14",
																"nodeType": "YulBlock",
																"src": "1326:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:14"
																			},
																			"nativeSrc": "1328:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:14"
																		},
																		"nativeSrc": "1328:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:14"
																		},
																		"nativeSrc": "1297:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:14"
																},
																"nativeSrc": "1293:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:14"
															},
															"nativeSrc": "1290:119:14",
															"nodeType": "YulIf",
															"src": "1290:119:14"
														},
														{
															"nativeSrc": "1419:117:14",
															"nodeType": "YulBlock",
															"src": "1419:117:14",
															"statements": [
																{
																	"nativeSrc": "1434:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:14",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:14"
																				},
																				"nativeSrc": "1494:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:14"
																		},
																		"nativeSrc": "1473:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:14",
															"nodeType": "YulBlock",
															"src": "1546:118:14",
															"statements": [
																{
																	"nativeSrc": "1561:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:14",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:14"
																				},
																				"nativeSrc": "1622:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:14"
																		},
																		"nativeSrc": "1601:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:14",
														"nodeType": "YulTypedName",
														"src": "1242:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:14",
														"nodeType": "YulTypedName",
														"src": "1253:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:14",
														"nodeType": "YulTypedName",
														"src": "1265:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:14",
														"nodeType": "YulTypedName",
														"src": "1273:6:14",
														"type": ""
													}
												],
												"src": "1197:474:14"
											},
											{
												"body": {
													"nativeSrc": "1742:53:14",
													"nodeType": "YulBlock",
													"src": "1742:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1764:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:14"
																		},
																		"nativeSrc": "1764:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:14"
																},
																"nativeSrc": "1752:37:14",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:14"
															},
															"nativeSrc": "1752:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1677:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:14",
														"nodeType": "YulTypedName",
														"src": "1730:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:14",
														"nodeType": "YulTypedName",
														"src": "1737:3:14",
														"type": ""
													}
												],
												"src": "1677:118:14"
											},
											{
												"body": {
													"nativeSrc": "1899:124:14",
													"nodeType": "YulBlock",
													"src": "1899:124:14",
													"statements": [
														{
															"nativeSrc": "1909:26:14",
															"nodeType": "YulAssignment",
															"src": "1909:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1921:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1932:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1917:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:14"
																},
																"nativeSrc": "1917:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1917:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1909:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1989:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:14",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:14"
																		},
																		"nativeSrc": "1998:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1945:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:14"
																},
																"nativeSrc": "1945:71:14",
																"nodeType": "YulFunctionCall",
																"src": "1945:71:14"
															},
															"nativeSrc": "1945:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1801:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1871:9:14",
														"nodeType": "YulTypedName",
														"src": "1871:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1883:6:14",
														"nodeType": "YulTypedName",
														"src": "1883:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1894:4:14",
														"nodeType": "YulTypedName",
														"src": "1894:4:14",
														"type": ""
													}
												],
												"src": "1801:222:14"
											},
											{
												"body": {
													"nativeSrc": "2073:105:14",
													"nodeType": "YulBlock",
													"src": "2073:105:14",
													"statements": [
														{
															"nativeSrc": "2083:89:14",
															"nodeType": "YulAssignment",
															"src": "2083:89:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2098:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2105:66:14",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:14",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2094:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:14"
																},
																"nativeSrc": "2094:78:14",
																"nodeType": "YulFunctionCall",
																"src": "2094:78:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2083:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "2029:149:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2055:5:14",
														"nodeType": "YulTypedName",
														"src": "2055:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2065:7:14",
														"nodeType": "YulTypedName",
														"src": "2065:7:14",
														"type": ""
													}
												],
												"src": "2029:149:14"
											},
											{
												"body": {
													"nativeSrc": "2226:78:14",
													"nodeType": "YulBlock",
													"src": "2226:78:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2282:16:14",
																"nodeType": "YulBlock",
																"src": "2282:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2291:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2294:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2284:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:14"
																			},
																			"nativeSrc": "2284:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:14"
																		},
																		"nativeSrc": "2284:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2249:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2273:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "2256:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:14"
																				},
																				"nativeSrc": "2256:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2246:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:14"
																		},
																		"nativeSrc": "2246:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2239:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:14"
																},
																"nativeSrc": "2239:42:14",
																"nodeType": "YulFunctionCall",
																"src": "2239:42:14"
															},
															"nativeSrc": "2236:62:14",
															"nodeType": "YulIf",
															"src": "2236:62:14"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "2184:120:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2219:5:14",
														"nodeType": "YulTypedName",
														"src": "2219:5:14",
														"type": ""
													}
												],
												"src": "2184:120:14"
											},
											{
												"body": {
													"nativeSrc": "2361:86:14",
													"nodeType": "YulBlock",
													"src": "2361:86:14",
													"statements": [
														{
															"nativeSrc": "2371:29:14",
															"nodeType": "YulAssignment",
															"src": "2371:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2393:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2380:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:14"
																},
																"nativeSrc": "2380:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2380:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2371:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2435:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "2409:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:14"
																},
																"nativeSrc": "2409:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2409:32:14"
															},
															"nativeSrc": "2409:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "2310:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2339:6:14",
														"nodeType": "YulTypedName",
														"src": "2339:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:14",
														"nodeType": "YulTypedName",
														"src": "2347:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2355:5:14",
														"nodeType": "YulTypedName",
														"src": "2355:5:14",
														"type": ""
													}
												],
												"src": "2310:137:14"
											},
											{
												"body": {
													"nativeSrc": "2518:262:14",
													"nodeType": "YulBlock",
													"src": "2518:262:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2564:83:14",
																"nodeType": "YulBlock",
																"src": "2564:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2566:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:14"
																			},
																			"nativeSrc": "2566:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:14"
																		},
																		"nativeSrc": "2566:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2539:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2548:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2535:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:14"
																		},
																		"nativeSrc": "2535:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2560:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2531:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:14"
																},
																"nativeSrc": "2531:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2531:32:14"
															},
															"nativeSrc": "2528:119:14",
															"nodeType": "YulIf",
															"src": "2528:119:14"
														},
														{
															"nativeSrc": "2657:116:14",
															"nodeType": "YulBlock",
															"src": "2657:116:14",
															"statements": [
																{
																	"nativeSrc": "2672:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2686:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2676:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2701:62:14",
																	"nodeType": "YulAssignment",
																	"src": "2701:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2735:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2746:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2731:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:14"
																				},
																				"nativeSrc": "2731:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2755:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "2711:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:14"
																		},
																		"nativeSrc": "2711:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2701:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "2453:327:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2488:9:14",
														"nodeType": "YulTypedName",
														"src": "2488:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2499:7:14",
														"nodeType": "YulTypedName",
														"src": "2499:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2511:6:14",
														"nodeType": "YulTypedName",
														"src": "2511:6:14",
														"type": ""
													}
												],
												"src": "2453:327:14"
											},
											{
												"body": {
													"nativeSrc": "2828:48:14",
													"nodeType": "YulBlock",
													"src": "2828:48:14",
													"statements": [
														{
															"nativeSrc": "2838:32:14",
															"nodeType": "YulAssignment",
															"src": "2838:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2863:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2856:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:14"
																		},
																		"nativeSrc": "2856:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2849:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:14"
																},
																"nativeSrc": "2849:21:14",
																"nodeType": "YulFunctionCall",
																"src": "2849:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2838:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2786:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2810:5:14",
														"nodeType": "YulTypedName",
														"src": "2810:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2820:7:14",
														"nodeType": "YulTypedName",
														"src": "2820:7:14",
														"type": ""
													}
												],
												"src": "2786:90:14"
											},
											{
												"body": {
													"nativeSrc": "2941:50:14",
													"nodeType": "YulBlock",
													"src": "2941:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2958:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2978:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2963:14:14",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:14"
																		},
																		"nativeSrc": "2963:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2951:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:14"
																},
																"nativeSrc": "2951:34:14",
																"nodeType": "YulFunctionCall",
																"src": "2951:34:14"
															},
															"nativeSrc": "2951:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2882:109:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2929:5:14",
														"nodeType": "YulTypedName",
														"src": "2929:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2936:3:14",
														"nodeType": "YulTypedName",
														"src": "2936:3:14",
														"type": ""
													}
												],
												"src": "2882:109:14"
											},
											{
												"body": {
													"nativeSrc": "3089:118:14",
													"nodeType": "YulBlock",
													"src": "3089:118:14",
													"statements": [
														{
															"nativeSrc": "3099:26:14",
															"nodeType": "YulAssignment",
															"src": "3099:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3111:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3107:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:14"
																},
																"nativeSrc": "3107:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3107:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3099:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3173:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3186:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3197:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3182:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:14"
																		},
																		"nativeSrc": "3182:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3135:37:14",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:14"
																},
																"nativeSrc": "3135:65:14",
																"nodeType": "YulFunctionCall",
																"src": "3135:65:14"
															},
															"nativeSrc": "3135:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2997:210:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3061:9:14",
														"nodeType": "YulTypedName",
														"src": "3061:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3073:6:14",
														"nodeType": "YulTypedName",
														"src": "3073:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3084:4:14",
														"nodeType": "YulTypedName",
														"src": "3084:4:14",
														"type": ""
													}
												],
												"src": "2997:210:14"
											},
											{
												"body": {
													"nativeSrc": "3279:263:14",
													"nodeType": "YulBlock",
													"src": "3279:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3325:83:14",
																"nodeType": "YulBlock",
																"src": "3325:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3327:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:14"
																			},
																			"nativeSrc": "3327:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:14"
																		},
																		"nativeSrc": "3327:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3300:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3309:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3296:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:14"
																		},
																		"nativeSrc": "3296:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3292:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:14"
																},
																"nativeSrc": "3292:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3292:32:14"
															},
															"nativeSrc": "3289:119:14",
															"nodeType": "YulIf",
															"src": "3289:119:14"
														},
														{
															"nativeSrc": "3418:117:14",
															"nodeType": "YulBlock",
															"src": "3418:117:14",
															"statements": [
																{
																	"nativeSrc": "3433:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3447:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3437:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:14",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:14"
																				},
																				"nativeSrc": "3493:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3472:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:14"
																		},
																		"nativeSrc": "3472:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3462:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3213:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3249:9:14",
														"nodeType": "YulTypedName",
														"src": "3249:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3260:7:14",
														"nodeType": "YulTypedName",
														"src": "3260:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3272:6:14",
														"nodeType": "YulTypedName",
														"src": "3272:6:14",
														"type": ""
													}
												],
												"src": "3213:329:14"
											},
											{
												"body": {
													"nativeSrc": "3607:40:14",
													"nodeType": "YulBlock",
													"src": "3607:40:14",
													"statements": [
														{
															"nativeSrc": "3618:22:14",
															"nodeType": "YulAssignment",
															"src": "3618:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3634:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3628:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:14"
																},
																"nativeSrc": "3628:12:14",
																"nodeType": "YulFunctionCall",
																"src": "3628:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3618:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3548:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3590:5:14",
														"nodeType": "YulTypedName",
														"src": "3590:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3600:6:14",
														"nodeType": "YulTypedName",
														"src": "3600:6:14",
														"type": ""
													}
												],
												"src": "3548:99:14"
											},
											{
												"body": {
													"nativeSrc": "3749:73:14",
													"nodeType": "YulBlock",
													"src": "3749:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3766:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3771:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3771:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3759:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:14"
																},
																"nativeSrc": "3759:19:14",
																"nodeType": "YulFunctionCall",
																"src": "3759:19:14"
															},
															"nativeSrc": "3759:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "3759:19:14"
														},
														{
															"nativeSrc": "3787:29:14",
															"nodeType": "YulAssignment",
															"src": "3787:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3806:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3806:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3811:4:14",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3802:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:14"
																},
																"nativeSrc": "3802:14:14",
																"nodeType": "YulFunctionCall",
																"src": "3802:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3787:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "3787:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3653:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3721:3:14",
														"nodeType": "YulTypedName",
														"src": "3721:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3726:6:14",
														"nodeType": "YulTypedName",
														"src": "3726:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3737:11:14",
														"nodeType": "YulTypedName",
														"src": "3737:11:14",
														"type": ""
													}
												],
												"src": "3653:169:14"
											},
											{
												"body": {
													"nativeSrc": "3890:184:14",
													"nodeType": "YulBlock",
													"src": "3890:184:14",
													"statements": [
														{
															"nativeSrc": "3900:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3900:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "3909:1:14",
																"nodeType": "YulLiteral",
																"src": "3909:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3904:1:14",
																	"nodeType": "YulTypedName",
																	"src": "3904:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3969:63:14",
																"nodeType": "YulBlock",
																"src": "3969:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "3994:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "3994:3:14"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "3999:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "3999:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3990:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "3990:3:14"
																					},
																					"nativeSrc": "3990:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3990:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "4013:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "4013:3:14"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "4018:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "4018:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4009:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "4009:3:14"
																							},
																							"nativeSrc": "4009:11:14",
																							"nodeType": "YulFunctionCall",
																							"src": "4009:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4003:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4003:5:14"
																					},
																					"nativeSrc": "4003:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4003:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3983:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3983:6:14"
																			},
																			"nativeSrc": "3983:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3983:39:14"
																		},
																		"nativeSrc": "3983:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3983:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3930:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "3930:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3933:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3933:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3927:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3927:2:14"
																},
																"nativeSrc": "3927:13:14",
																"nodeType": "YulFunctionCall",
																"src": "3927:13:14"
															},
															"nativeSrc": "3919:113:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3941:19:14",
																"nodeType": "YulBlock",
																"src": "3941:19:14",
																"statements": [
																	{
																		"nativeSrc": "3943:15:14",
																		"nodeType": "YulAssignment",
																		"src": "3943:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3952:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "3952:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3955:2:14",
																					"nodeType": "YulLiteral",
																					"src": "3955:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3948:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "3948:3:14"
																			},
																			"nativeSrc": "3948:10:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3948:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3943:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "3943:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3923:3:14",
																"nodeType": "YulBlock",
																"src": "3923:3:14",
																"statements": []
															},
															"src": "3919:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4052:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "4052:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4057:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4057:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4048:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4048:3:14"
																		},
																		"nativeSrc": "4048:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4048:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4066:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4041:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4041:6:14"
																},
																"nativeSrc": "4041:27:14",
																"nodeType": "YulFunctionCall",
																"src": "4041:27:14"
															},
															"nativeSrc": "4041:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "4041:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3828:246:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3872:3:14",
														"nodeType": "YulTypedName",
														"src": "3872:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3877:3:14",
														"nodeType": "YulTypedName",
														"src": "3877:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3882:6:14",
														"nodeType": "YulTypedName",
														"src": "3882:6:14",
														"type": ""
													}
												],
												"src": "3828:246:14"
											},
											{
												"body": {
													"nativeSrc": "4128:54:14",
													"nodeType": "YulBlock",
													"src": "4128:54:14",
													"statements": [
														{
															"nativeSrc": "4138:38:14",
															"nodeType": "YulAssignment",
															"src": "4138:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4156:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4156:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4163:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4163:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4152:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4152:3:14"
																		},
																		"nativeSrc": "4152:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4152:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4172:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4172:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4168:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:14"
																		},
																		"nativeSrc": "4168:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4168:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4148:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4148:3:14"
																},
																"nativeSrc": "4148:28:14",
																"nodeType": "YulFunctionCall",
																"src": "4148:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4138:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4138:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "4080:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4111:5:14",
														"nodeType": "YulTypedName",
														"src": "4111:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4121:6:14",
														"nodeType": "YulTypedName",
														"src": "4121:6:14",
														"type": ""
													}
												],
												"src": "4080:102:14"
											},
											{
												"body": {
													"nativeSrc": "4280:285:14",
													"nodeType": "YulBlock",
													"src": "4280:285:14",
													"statements": [
														{
															"nativeSrc": "4290:53:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4290:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4337:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4337:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4304:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "4304:32:14"
																},
																"nativeSrc": "4304:39:14",
																"nodeType": "YulFunctionCall",
																"src": "4304:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4294:6:14",
																	"nodeType": "YulTypedName",
																	"src": "4294:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4352:78:14",
															"nodeType": "YulAssignment",
															"src": "4352:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4418:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4418:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4423:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4423:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4359:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "4359:58:14"
																},
																"nativeSrc": "4359:71:14",
																"nodeType": "YulFunctionCall",
																"src": "4359:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4352:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4352:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4478:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4478:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4485:4:14",
																				"nodeType": "YulLiteral",
																				"src": "4485:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4474:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4474:3:14"
																		},
																		"nativeSrc": "4474:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4474:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4492:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4492:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4497:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4497:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4439:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "4439:34:14"
																},
																"nativeSrc": "4439:65:14",
																"nodeType": "YulFunctionCall",
																"src": "4439:65:14"
															},
															"nativeSrc": "4439:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "4439:65:14"
														},
														{
															"nativeSrc": "4513:46:14",
															"nodeType": "YulAssignment",
															"src": "4513:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4524:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4524:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4551:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4551:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4529:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "4529:21:14"
																		},
																		"nativeSrc": "4529:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4529:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4520:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4520:3:14"
																},
																"nativeSrc": "4520:39:14",
																"nodeType": "YulFunctionCall",
																"src": "4520:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4513:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4513:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4188:377:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4261:5:14",
														"nodeType": "YulTypedName",
														"src": "4261:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4268:3:14",
														"nodeType": "YulTypedName",
														"src": "4268:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4276:3:14",
														"nodeType": "YulTypedName",
														"src": "4276:3:14",
														"type": ""
													}
												],
												"src": "4188:377:14"
											},
											{
												"body": {
													"nativeSrc": "4689:195:14",
													"nodeType": "YulBlock",
													"src": "4689:195:14",
													"statements": [
														{
															"nativeSrc": "4699:26:14",
															"nodeType": "YulAssignment",
															"src": "4699:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4711:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4711:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4722:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4722:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4707:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:14"
																},
																"nativeSrc": "4707:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4707:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4699:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4699:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4746:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4746:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4757:1:14",
																				"nodeType": "YulLiteral",
																				"src": "4757:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4742:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4742:3:14"
																		},
																		"nativeSrc": "4742:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4742:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4765:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "4765:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4771:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4771:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4761:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:14"
																		},
																		"nativeSrc": "4761:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4761:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4735:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4735:6:14"
																},
																"nativeSrc": "4735:47:14",
																"nodeType": "YulFunctionCall",
																"src": "4735:47:14"
															},
															"nativeSrc": "4735:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "4735:47:14"
														},
														{
															"nativeSrc": "4791:86:14",
															"nodeType": "YulAssignment",
															"src": "4791:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4863:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4863:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4872:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4872:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4799:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "4799:63:14"
																},
																"nativeSrc": "4799:78:14",
																"nodeType": "YulFunctionCall",
																"src": "4799:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4791:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4791:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4571:313:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4661:9:14",
														"nodeType": "YulTypedName",
														"src": "4661:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4673:6:14",
														"nodeType": "YulTypedName",
														"src": "4673:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4684:4:14",
														"nodeType": "YulTypedName",
														"src": "4684:4:14",
														"type": ""
													}
												],
												"src": "4571:313:14"
											},
											{
												"body": {
													"nativeSrc": "4935:32:14",
													"nodeType": "YulBlock",
													"src": "4935:32:14",
													"statements": [
														{
															"nativeSrc": "4945:16:14",
															"nodeType": "YulAssignment",
															"src": "4945:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "4956:5:14",
																"nodeType": "YulIdentifier",
																"src": "4956:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4945:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "4945:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "4890:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4917:5:14",
														"nodeType": "YulTypedName",
														"src": "4917:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4927:7:14",
														"nodeType": "YulTypedName",
														"src": "4927:7:14",
														"type": ""
													}
												],
												"src": "4890:77:14"
											},
											{
												"body": {
													"nativeSrc": "5016:79:14",
													"nodeType": "YulBlock",
													"src": "5016:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5073:16:14",
																"nodeType": "YulBlock",
																"src": "5073:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5082:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5082:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5085:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5085:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5075:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5075:6:14"
																			},
																			"nativeSrc": "5075:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5075:12:14"
																		},
																		"nativeSrc": "5075:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5075:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5039:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5039:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5064:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5064:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5046:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "5046:17:14"
																				},
																				"nativeSrc": "5046:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5046:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5036:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "5036:2:14"
																		},
																		"nativeSrc": "5036:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5036:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5029:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5029:6:14"
																},
																"nativeSrc": "5029:43:14",
																"nodeType": "YulFunctionCall",
																"src": "5029:43:14"
															},
															"nativeSrc": "5026:63:14",
															"nodeType": "YulIf",
															"src": "5026:63:14"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "4973:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5009:5:14",
														"nodeType": "YulTypedName",
														"src": "5009:5:14",
														"type": ""
													}
												],
												"src": "4973:122:14"
											},
											{
												"body": {
													"nativeSrc": "5153:87:14",
													"nodeType": "YulBlock",
													"src": "5153:87:14",
													"statements": [
														{
															"nativeSrc": "5163:29:14",
															"nodeType": "YulAssignment",
															"src": "5163:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5185:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5185:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5172:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "5172:12:14"
																},
																"nativeSrc": "5172:20:14",
																"nodeType": "YulFunctionCall",
																"src": "5172:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5163:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5163:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5228:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5228:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5201:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "5201:26:14"
																},
																"nativeSrc": "5201:33:14",
																"nodeType": "YulFunctionCall",
																"src": "5201:33:14"
															},
															"nativeSrc": "5201:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "5201:33:14"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5101:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5131:6:14",
														"nodeType": "YulTypedName",
														"src": "5131:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5139:3:14",
														"nodeType": "YulTypedName",
														"src": "5139:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5147:5:14",
														"nodeType": "YulTypedName",
														"src": "5147:5:14",
														"type": ""
													}
												],
												"src": "5101:139:14"
											},
											{
												"body": {
													"nativeSrc": "5312:263:14",
													"nodeType": "YulBlock",
													"src": "5312:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5358:83:14",
																"nodeType": "YulBlock",
																"src": "5358:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5360:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "5360:77:14"
																			},
																			"nativeSrc": "5360:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5360:79:14"
																		},
																		"nativeSrc": "5360:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5360:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5333:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5333:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5342:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5342:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5329:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:14"
																		},
																		"nativeSrc": "5329:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5329:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5354:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5354:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5325:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5325:3:14"
																},
																"nativeSrc": "5325:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5325:32:14"
															},
															"nativeSrc": "5322:119:14",
															"nodeType": "YulIf",
															"src": "5322:119:14"
														},
														{
															"nativeSrc": "5451:117:14",
															"nodeType": "YulBlock",
															"src": "5451:117:14",
															"statements": [
																{
																	"nativeSrc": "5466:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5466:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5480:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5480:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5470:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5470:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5495:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5495:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5530:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5530:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5541:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5541:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5526:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5526:3:14"
																				},
																				"nativeSrc": "5526:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5526:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5550:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5550:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5505:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5505:20:14"
																		},
																		"nativeSrc": "5505:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5505:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5495:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5495:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5246:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5282:9:14",
														"nodeType": "YulTypedName",
														"src": "5282:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5293:7:14",
														"nodeType": "YulTypedName",
														"src": "5293:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5305:6:14",
														"nodeType": "YulTypedName",
														"src": "5305:6:14",
														"type": ""
													}
												],
												"src": "5246:329:14"
											},
											{
												"body": {
													"nativeSrc": "5646:53:14",
													"nodeType": "YulBlock",
													"src": "5646:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5663:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5663:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5686:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5686:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5668:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "5668:17:14"
																		},
																		"nativeSrc": "5668:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5668:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5656:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5656:6:14"
																},
																"nativeSrc": "5656:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5656:37:14"
															},
															"nativeSrc": "5656:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "5656:37:14"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5581:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5634:5:14",
														"nodeType": "YulTypedName",
														"src": "5634:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5641:3:14",
														"nodeType": "YulTypedName",
														"src": "5641:3:14",
														"type": ""
													}
												],
												"src": "5581:118:14"
											},
											{
												"body": {
													"nativeSrc": "5803:124:14",
													"nodeType": "YulBlock",
													"src": "5803:124:14",
													"statements": [
														{
															"nativeSrc": "5813:26:14",
															"nodeType": "YulAssignment",
															"src": "5813:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5825:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5825:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5836:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5836:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5821:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5821:3:14"
																},
																"nativeSrc": "5821:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5821:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5813:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5813:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5893:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5893:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5906:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5906:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5917:1:14",
																				"nodeType": "YulLiteral",
																				"src": "5917:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5902:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5902:3:14"
																		},
																		"nativeSrc": "5902:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5902:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "5849:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "5849:43:14"
																},
																"nativeSrc": "5849:71:14",
																"nodeType": "YulFunctionCall",
																"src": "5849:71:14"
															},
															"nativeSrc": "5849:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "5849:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5705:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5775:9:14",
														"nodeType": "YulTypedName",
														"src": "5775:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5787:6:14",
														"nodeType": "YulTypedName",
														"src": "5787:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5798:4:14",
														"nodeType": "YulTypedName",
														"src": "5798:4:14",
														"type": ""
													}
												],
												"src": "5705:222:14"
											},
											{
												"body": {
													"nativeSrc": "6022:28:14",
													"nodeType": "YulBlock",
													"src": "6022:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6039:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6039:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6042:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6042:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6032:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6032:6:14"
																},
																"nativeSrc": "6032:12:14",
																"nodeType": "YulFunctionCall",
																"src": "6032:12:14"
															},
															"nativeSrc": "6032:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "6032:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5933:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "5933:117:14"
											},
											{
												"body": {
													"nativeSrc": "6084:152:14",
													"nodeType": "YulBlock",
													"src": "6084:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6101:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6104:77:14",
																		"nodeType": "YulLiteral",
																		"src": "6104:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6094:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6094:6:14"
																},
																"nativeSrc": "6094:88:14",
																"nodeType": "YulFunctionCall",
																"src": "6094:88:14"
															},
															"nativeSrc": "6094:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "6094:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6198:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6198:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6201:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6201:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6191:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6191:6:14"
																},
																"nativeSrc": "6191:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6191:15:14"
															},
															"nativeSrc": "6191:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "6191:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6222:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6222:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6225:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6225:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6215:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6215:6:14"
																},
																"nativeSrc": "6215:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6215:15:14"
															},
															"nativeSrc": "6215:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "6215:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6056:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "6056:180:14"
											},
											{
												"body": {
													"nativeSrc": "6285:238:14",
													"nodeType": "YulBlock",
													"src": "6285:238:14",
													"statements": [
														{
															"nativeSrc": "6295:58:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6295:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6317:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6317:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6347:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "6347:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6325:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "6325:21:14"
																		},
																		"nativeSrc": "6325:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6313:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6313:3:14"
																},
																"nativeSrc": "6313:40:14",
																"nodeType": "YulFunctionCall",
																"src": "6313:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6299:10:14",
																	"nodeType": "YulTypedName",
																	"src": "6299:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6464:22:14",
																"nodeType": "YulBlock",
																"src": "6464:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6466:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "6466:16:14"
																			},
																			"nativeSrc": "6466:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6466:18:14"
																		},
																		"nativeSrc": "6466:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6466:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6407:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "6407:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6419:18:14",
																				"nodeType": "YulLiteral",
																				"src": "6419:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6404:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "6404:2:14"
																		},
																		"nativeSrc": "6404:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6404:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6443:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "6443:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6455:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6455:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6440:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "6440:2:14"
																		},
																		"nativeSrc": "6440:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6440:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6401:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6401:2:14"
																},
																"nativeSrc": "6401:62:14",
																"nodeType": "YulFunctionCall",
																"src": "6401:62:14"
															},
															"nativeSrc": "6398:88:14",
															"nodeType": "YulIf",
															"src": "6398:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6502:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6502:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6506:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "6506:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6495:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:14"
																},
																"nativeSrc": "6495:22:14",
																"nodeType": "YulFunctionCall",
																"src": "6495:22:14"
															},
															"nativeSrc": "6495:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "6495:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "6242:281:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6271:6:14",
														"nodeType": "YulTypedName",
														"src": "6271:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "6279:4:14",
														"nodeType": "YulTypedName",
														"src": "6279:4:14",
														"type": ""
													}
												],
												"src": "6242:281:14"
											},
											{
												"body": {
													"nativeSrc": "6570:88:14",
													"nodeType": "YulBlock",
													"src": "6570:88:14",
													"statements": [
														{
															"nativeSrc": "6580:30:14",
															"nodeType": "YulAssignment",
															"src": "6580:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6590:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "6590:18:14"
																},
																"nativeSrc": "6590:20:14",
																"nodeType": "YulFunctionCall",
																"src": "6590:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6580:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6580:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6639:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6639:6:14"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6647:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6647:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6619:19:14",
																	"nodeType": "YulIdentifier",
																	"src": "6619:19:14"
																},
																"nativeSrc": "6619:33:14",
																"nodeType": "YulFunctionCall",
																"src": "6619:33:14"
															},
															"nativeSrc": "6619:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "6619:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6529:129:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6554:4:14",
														"nodeType": "YulTypedName",
														"src": "6554:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6563:6:14",
														"nodeType": "YulTypedName",
														"src": "6563:6:14",
														"type": ""
													}
												],
												"src": "6529:129:14"
											},
											{
												"body": {
													"nativeSrc": "6746:229:14",
													"nodeType": "YulBlock",
													"src": "6746:229:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6851:22:14",
																"nodeType": "YulBlock",
																"src": "6851:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6853:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "6853:16:14"
																			},
																			"nativeSrc": "6853:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6853:18:14"
																		},
																		"nativeSrc": "6853:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6853:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6823:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6823:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6831:18:14",
																		"nodeType": "YulLiteral",
																		"src": "6831:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6820:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6820:2:14"
																},
																"nativeSrc": "6820:30:14",
																"nodeType": "YulFunctionCall",
																"src": "6820:30:14"
															},
															"nativeSrc": "6817:56:14",
															"nodeType": "YulIf",
															"src": "6817:56:14"
														},
														{
															"nativeSrc": "6883:25:14",
															"nodeType": "YulAssignment",
															"src": "6883:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6895:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6895:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6903:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6903:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6891:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6891:3:14"
																},
																"nativeSrc": "6891:17:14",
																"nodeType": "YulFunctionCall",
																"src": "6891:17:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6883:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6883:4:14"
																}
															]
														},
														{
															"nativeSrc": "6945:23:14",
															"nodeType": "YulAssignment",
															"src": "6945:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6957:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6957:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6963:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6963:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6953:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6953:3:14"
																},
																"nativeSrc": "6953:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6953:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6945:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6945:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6664:311:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6730:6:14",
														"nodeType": "YulTypedName",
														"src": "6730:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6741:4:14",
														"nodeType": "YulTypedName",
														"src": "6741:4:14",
														"type": ""
													}
												],
												"src": "6664:311:14"
											},
											{
												"body": {
													"nativeSrc": "7070:28:14",
													"nodeType": "YulBlock",
													"src": "7070:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7087:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7087:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7090:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7090:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7080:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7080:6:14"
																},
																"nativeSrc": "7080:12:14",
																"nodeType": "YulFunctionCall",
																"src": "7080:12:14"
															},
															"nativeSrc": "7080:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "7080:12:14"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "6981:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "6981:117:14"
											},
											{
												"body": {
													"nativeSrc": "7223:608:14",
													"nodeType": "YulBlock",
													"src": "7223:608:14",
													"statements": [
														{
															"nativeSrc": "7233:90:14",
															"nodeType": "YulAssignment",
															"src": "7233:90:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7315:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7315:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "7258:56:14",
																			"nodeType": "YulIdentifier",
																			"src": "7258:56:14"
																		},
																		"nativeSrc": "7258:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7258:64:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7242:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "7242:15:14"
																},
																"nativeSrc": "7242:81:14",
																"nodeType": "YulFunctionCall",
																"src": "7242:81:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7233:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7233:5:14"
																}
															]
														},
														{
															"nativeSrc": "7332:16:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7332:16:14",
															"value": {
																"name": "array",
																"nativeSrc": "7343:5:14",
																"nodeType": "YulIdentifier",
																"src": "7343:5:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7336:3:14",
																	"nodeType": "YulTypedName",
																	"src": "7336:3:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7365:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7365:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7372:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7372:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7358:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7358:6:14"
																},
																"nativeSrc": "7358:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7358:21:14"
															},
															"nativeSrc": "7358:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "7358:21:14"
														},
														{
															"nativeSrc": "7388:23:14",
															"nodeType": "YulAssignment",
															"src": "7388:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7399:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7399:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7406:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7406:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7395:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7395:3:14"
																},
																"nativeSrc": "7395:16:14",
																"nodeType": "YulFunctionCall",
																"src": "7395:16:14"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "7388:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7388:3:14"
																}
															]
														},
														{
															"nativeSrc": "7421:44:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7421:44:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7439:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7439:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7451:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7451:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7459:4:14",
																				"nodeType": "YulLiteral",
																				"src": "7459:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7447:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7447:3:14"
																		},
																		"nativeSrc": "7447:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7447:17:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7435:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7435:3:14"
																},
																"nativeSrc": "7435:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7435:30:14"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "7425:6:14",
																	"nodeType": "YulTypedName",
																	"src": "7425:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7493:103:14",
																"nodeType": "YulBlock",
																"src": "7493:103:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "7507:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7507:77:14"
																			},
																			"nativeSrc": "7507:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7507:79:14"
																		},
																		"nativeSrc": "7507:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7507:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7480:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7480:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7488:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7488:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7477:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7477:2:14"
																},
																"nativeSrc": "7477:15:14",
																"nodeType": "YulFunctionCall",
																"src": "7477:15:14"
															},
															"nativeSrc": "7474:122:14",
															"nodeType": "YulIf",
															"src": "7474:122:14"
														},
														{
															"body": {
																"nativeSrc": "7681:144:14",
																"nodeType": "YulBlock",
																"src": "7681:144:14",
																"statements": [
																	{
																		"nativeSrc": "7696:21:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7696:21:14",
																		"value": {
																			"name": "src",
																			"nativeSrc": "7714:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7714:3:14"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "7700:10:14",
																				"nodeType": "YulTypedName",
																				"src": "7700:10:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7738:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7738:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "7764:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "7764:10:14"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "7776:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "7776:3:14"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "7743:20:14",
																						"nodeType": "YulIdentifier",
																						"src": "7743:20:14"
																					},
																					"nativeSrc": "7743:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "7743:37:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7731:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7731:6:14"
																			},
																			"nativeSrc": "7731:50:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7731:50:14"
																		},
																		"nativeSrc": "7731:50:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7731:50:14"
																	},
																	{
																		"nativeSrc": "7794:21:14",
																		"nodeType": "YulAssignment",
																		"src": "7794:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7805:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7805:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7810:4:14",
																					"nodeType": "YulLiteral",
																					"src": "7810:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7801:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7801:3:14"
																			},
																			"nativeSrc": "7801:14:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7801:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "7794:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7794:3:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7634:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7634:3:14"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7639:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7639:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7631:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7631:2:14"
																},
																"nativeSrc": "7631:15:14",
																"nodeType": "YulFunctionCall",
																"src": "7631:15:14"
															},
															"nativeSrc": "7605:220:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7647:25:14",
																"nodeType": "YulBlock",
																"src": "7647:25:14",
																"statements": [
																	{
																		"nativeSrc": "7649:21:14",
																		"nodeType": "YulAssignment",
																		"src": "7649:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "7660:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7660:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7665:4:14",
																					"nodeType": "YulLiteral",
																					"src": "7665:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7656:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7656:3:14"
																			},
																			"nativeSrc": "7656:14:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7656:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "7649:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7649:3:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7609:21:14",
																"nodeType": "YulBlock",
																"src": "7609:21:14",
																"statements": [
																	{
																		"nativeSrc": "7611:17:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7611:17:14",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "7622:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "7622:6:14"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "7615:3:14",
																				"nodeType": "YulTypedName",
																				"src": "7615:3:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7605:220:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7121:710:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7193:6:14",
														"nodeType": "YulTypedName",
														"src": "7193:6:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7201:6:14",
														"nodeType": "YulTypedName",
														"src": "7201:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7209:3:14",
														"nodeType": "YulTypedName",
														"src": "7209:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7217:5:14",
														"nodeType": "YulTypedName",
														"src": "7217:5:14",
														"type": ""
													}
												],
												"src": "7121:710:14"
											},
											{
												"body": {
													"nativeSrc": "7931:293:14",
													"nodeType": "YulBlock",
													"src": "7931:293:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7980:83:14",
																"nodeType": "YulBlock",
																"src": "7980:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7982:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7982:77:14"
																			},
																			"nativeSrc": "7982:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7982:79:14"
																		},
																		"nativeSrc": "7982:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7982:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7959:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7959:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7967:4:14",
																						"nodeType": "YulLiteral",
																						"src": "7967:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7955:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7955:3:14"
																				},
																				"nativeSrc": "7955:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7955:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7974:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7974:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7951:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:14"
																		},
																		"nativeSrc": "7951:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7944:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7944:6:14"
																},
																"nativeSrc": "7944:35:14",
																"nodeType": "YulFunctionCall",
																"src": "7944:35:14"
															},
															"nativeSrc": "7941:122:14",
															"nodeType": "YulIf",
															"src": "7941:122:14"
														},
														{
															"nativeSrc": "8072:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8072:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8099:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8099:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8086:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "8086:12:14"
																},
																"nativeSrc": "8086:20:14",
																"nodeType": "YulFunctionCall",
																"src": "8086:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8076:6:14",
																	"nodeType": "YulTypedName",
																	"src": "8076:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8115:103:14",
															"nodeType": "YulAssignment",
															"src": "8115:103:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8191:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8191:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8199:4:14",
																				"nodeType": "YulLiteral",
																				"src": "8199:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8187:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8187:3:14"
																		},
																		"nativeSrc": "8187:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8187:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8206:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8206:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8214:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8214:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "8124:62:14",
																	"nodeType": "YulIdentifier",
																	"src": "8124:62:14"
																},
																"nativeSrc": "8124:94:14",
																"nodeType": "YulFunctionCall",
																"src": "8124:94:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8115:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "8115:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7854:370:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7909:6:14",
														"nodeType": "YulTypedName",
														"src": "7909:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7917:3:14",
														"nodeType": "YulTypedName",
														"src": "7917:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7925:5:14",
														"nodeType": "YulTypedName",
														"src": "7925:5:14",
														"type": ""
													}
												],
												"src": "7854:370:14"
											},
											{
												"body": {
													"nativeSrc": "8319:28:14",
													"nodeType": "YulBlock",
													"src": "8319:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8336:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8336:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8339:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8339:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8329:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8329:6:14"
																},
																"nativeSrc": "8329:12:14",
																"nodeType": "YulFunctionCall",
																"src": "8329:12:14"
															},
															"nativeSrc": "8329:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "8329:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "8230:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "8230:117:14"
											},
											{
												"body": {
													"nativeSrc": "8419:241:14",
													"nodeType": "YulBlock",
													"src": "8419:241:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8524:22:14",
																"nodeType": "YulBlock",
																"src": "8524:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8526:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "8526:16:14"
																			},
																			"nativeSrc": "8526:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8526:18:14"
																		},
																		"nativeSrc": "8526:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8526:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8496:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8496:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8504:18:14",
																		"nodeType": "YulLiteral",
																		"src": "8504:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8493:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8493:2:14"
																},
																"nativeSrc": "8493:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8493:30:14"
															},
															"nativeSrc": "8490:56:14",
															"nodeType": "YulIf",
															"src": "8490:56:14"
														},
														{
															"nativeSrc": "8556:37:14",
															"nodeType": "YulAssignment",
															"src": "8556:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8586:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8586:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8564:21:14",
																	"nodeType": "YulIdentifier",
																	"src": "8564:21:14"
																},
																"nativeSrc": "8564:29:14",
																"nodeType": "YulFunctionCall",
																"src": "8564:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8556:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8556:4:14"
																}
															]
														},
														{
															"nativeSrc": "8630:23:14",
															"nodeType": "YulAssignment",
															"src": "8630:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8642:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8642:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8648:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8648:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8638:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8638:3:14"
																},
																"nativeSrc": "8638:15:14",
																"nodeType": "YulFunctionCall",
																"src": "8638:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8630:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8630:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "8353:307:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8403:6:14",
														"nodeType": "YulTypedName",
														"src": "8403:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8414:4:14",
														"nodeType": "YulTypedName",
														"src": "8414:4:14",
														"type": ""
													}
												],
												"src": "8353:307:14"
											},
											{
												"body": {
													"nativeSrc": "8730:82:14",
													"nodeType": "YulBlock",
													"src": "8730:82:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8753:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8753:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8758:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8758:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8763:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8763:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8740:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "8740:12:14"
																},
																"nativeSrc": "8740:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8740:30:14"
															},
															"nativeSrc": "8740:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "8740:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8790:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "8790:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8795:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8795:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8786:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8786:3:14"
																		},
																		"nativeSrc": "8786:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8786:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8804:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8804:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8779:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8779:6:14"
																},
																"nativeSrc": "8779:27:14",
																"nodeType": "YulFunctionCall",
																"src": "8779:27:14"
															},
															"nativeSrc": "8779:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "8779:27:14"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8666:146:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8712:3:14",
														"nodeType": "YulTypedName",
														"src": "8712:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8717:3:14",
														"nodeType": "YulTypedName",
														"src": "8717:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8722:6:14",
														"nodeType": "YulTypedName",
														"src": "8722:6:14",
														"type": ""
													}
												],
												"src": "8666:146:14"
											},
											{
												"body": {
													"nativeSrc": "8901:340:14",
													"nodeType": "YulBlock",
													"src": "8901:340:14",
													"statements": [
														{
															"nativeSrc": "8911:74:14",
															"nodeType": "YulAssignment",
															"src": "8911:74:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8977:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8977:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8936:40:14",
																			"nodeType": "YulIdentifier",
																			"src": "8936:40:14"
																		},
																		"nativeSrc": "8936:48:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8936:48:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8920:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "8920:15:14"
																},
																"nativeSrc": "8920:65:14",
																"nodeType": "YulFunctionCall",
																"src": "8920:65:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8911:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "8911:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9001:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9001:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9008:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9008:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8994:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8994:6:14"
																},
																"nativeSrc": "8994:21:14",
																"nodeType": "YulFunctionCall",
																"src": "8994:21:14"
															},
															"nativeSrc": "8994:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "8994:21:14"
														},
														{
															"nativeSrc": "9024:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9024:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9039:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9039:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9046:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9046:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9035:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9035:3:14"
																},
																"nativeSrc": "9035:16:14",
																"nodeType": "YulFunctionCall",
																"src": "9035:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9028:3:14",
																	"nodeType": "YulTypedName",
																	"src": "9028:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9089:83:14",
																"nodeType": "YulBlock",
																"src": "9089:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9091:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9091:77:14"
																			},
																			"nativeSrc": "9091:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9091:79:14"
																		},
																		"nativeSrc": "9091:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9091:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9070:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "9070:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9075:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9075:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9066:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9066:3:14"
																		},
																		"nativeSrc": "9066:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9066:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9084:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9084:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9063:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "9063:2:14"
																},
																"nativeSrc": "9063:25:14",
																"nodeType": "YulFunctionCall",
																"src": "9063:25:14"
															},
															"nativeSrc": "9060:112:14",
															"nodeType": "YulIf",
															"src": "9060:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9218:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9218:3:14"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9223:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9223:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9228:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9228:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9181:36:14",
																	"nodeType": "YulIdentifier",
																	"src": "9181:36:14"
																},
																"nativeSrc": "9181:54:14",
																"nodeType": "YulFunctionCall",
																"src": "9181:54:14"
															},
															"nativeSrc": "9181:54:14",
															"nodeType": "YulExpressionStatement",
															"src": "9181:54:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8818:423:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8874:3:14",
														"nodeType": "YulTypedName",
														"src": "8874:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8879:6:14",
														"nodeType": "YulTypedName",
														"src": "8879:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8887:3:14",
														"nodeType": "YulTypedName",
														"src": "8887:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8895:5:14",
														"nodeType": "YulTypedName",
														"src": "8895:5:14",
														"type": ""
													}
												],
												"src": "8818:423:14"
											},
											{
												"body": {
													"nativeSrc": "9321:277:14",
													"nodeType": "YulBlock",
													"src": "9321:277:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9370:83:14",
																"nodeType": "YulBlock",
																"src": "9370:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9372:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9372:77:14"
																			},
																			"nativeSrc": "9372:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9372:79:14"
																		},
																		"nativeSrc": "9372:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9372:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9349:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9349:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9357:4:14",
																						"nodeType": "YulLiteral",
																						"src": "9357:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9345:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9345:3:14"
																				},
																				"nativeSrc": "9345:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9345:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9364:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "9364:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9341:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9341:3:14"
																		},
																		"nativeSrc": "9341:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9341:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9334:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9334:6:14"
																},
																"nativeSrc": "9334:35:14",
																"nodeType": "YulFunctionCall",
																"src": "9334:35:14"
															},
															"nativeSrc": "9331:122:14",
															"nodeType": "YulIf",
															"src": "9331:122:14"
														},
														{
															"nativeSrc": "9462:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9462:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9489:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9489:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9476:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "9476:12:14"
																},
																"nativeSrc": "9476:20:14",
																"nodeType": "YulFunctionCall",
																"src": "9476:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9466:6:14",
																	"nodeType": "YulTypedName",
																	"src": "9466:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9505:87:14",
															"nodeType": "YulAssignment",
															"src": "9505:87:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9565:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9565:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9573:4:14",
																				"nodeType": "YulLiteral",
																				"src": "9573:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9561:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9561:3:14"
																		},
																		"nativeSrc": "9561:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9561:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9580:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9580:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9588:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9588:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "9514:46:14",
																	"nodeType": "YulIdentifier",
																	"src": "9514:46:14"
																},
																"nativeSrc": "9514:78:14",
																"nodeType": "YulFunctionCall",
																"src": "9514:78:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9505:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9505:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "9260:338:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9299:6:14",
														"nodeType": "YulTypedName",
														"src": "9299:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9307:3:14",
														"nodeType": "YulTypedName",
														"src": "9307:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9315:5:14",
														"nodeType": "YulTypedName",
														"src": "9315:5:14",
														"type": ""
													}
												],
												"src": "9260:338:14"
											},
											{
												"body": {
													"nativeSrc": "9797:1316:14",
													"nodeType": "YulBlock",
													"src": "9797:1316:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9844:83:14",
																"nodeType": "YulBlock",
																"src": "9844:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9846:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9846:77:14"
																			},
																			"nativeSrc": "9846:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9846:79:14"
																		},
																		"nativeSrc": "9846:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9846:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9818:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9818:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9827:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9827:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9814:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9814:3:14"
																		},
																		"nativeSrc": "9814:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9814:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:3:14",
																		"nodeType": "YulLiteral",
																		"src": "9839:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9810:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9810:3:14"
																},
																"nativeSrc": "9810:33:14",
																"nodeType": "YulFunctionCall",
																"src": "9810:33:14"
															},
															"nativeSrc": "9807:120:14",
															"nodeType": "YulIf",
															"src": "9807:120:14"
														},
														{
															"nativeSrc": "9937:117:14",
															"nodeType": "YulBlock",
															"src": "9937:117:14",
															"statements": [
																{
																	"nativeSrc": "9952:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9952:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9966:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9966:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9956:6:14",
																			"nodeType": "YulTypedName",
																			"src": "9956:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9981:63:14",
																	"nodeType": "YulAssignment",
																	"src": "9981:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10016:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10016:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10027:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10027:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10012:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10012:3:14"
																				},
																				"nativeSrc": "10012:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10012:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10036:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10036:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9991:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "9991:20:14"
																		},
																		"nativeSrc": "9991:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9991:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9981:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9981:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10064:118:14",
															"nodeType": "YulBlock",
															"src": "10064:118:14",
															"statements": [
																{
																	"nativeSrc": "10079:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10079:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10093:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10093:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10083:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10083:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10109:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10109:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10144:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10144:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10155:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10155:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10140:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10140:3:14"
																				},
																				"nativeSrc": "10140:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10140:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10164:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10164:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10119:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10119:20:14"
																		},
																		"nativeSrc": "10119:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10119:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10109:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10109:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10192:303:14",
															"nodeType": "YulBlock",
															"src": "10192:303:14",
															"statements": [
																{
																	"nativeSrc": "10207:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10207:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10238:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10238:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10249:2:14",
																						"nodeType": "YulLiteral",
																						"src": "10249:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10234:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10234:3:14"
																				},
																				"nativeSrc": "10234:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10234:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10221:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "10221:12:14"
																		},
																		"nativeSrc": "10221:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10221:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10211:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10211:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10300:83:14",
																		"nodeType": "YulBlock",
																		"src": "10300:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10302:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "10302:77:14"
																					},
																					"nativeSrc": "10302:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "10302:79:14"
																				},
																				"nativeSrc": "10302:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "10302:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10272:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10272:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10280:18:14",
																				"nodeType": "YulLiteral",
																				"src": "10280:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10269:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "10269:2:14"
																		},
																		"nativeSrc": "10269:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10269:30:14"
																	},
																	"nativeSrc": "10266:117:14",
																	"nodeType": "YulIf",
																	"src": "10266:117:14"
																},
																{
																	"nativeSrc": "10397:88:14",
																	"nodeType": "YulAssignment",
																	"src": "10397:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10457:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10457:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10468:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10468:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10453:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10453:3:14"
																				},
																				"nativeSrc": "10453:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10453:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10477:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10477:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "10407:45:14",
																			"nodeType": "YulIdentifier",
																			"src": "10407:45:14"
																		},
																		"nativeSrc": "10407:78:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10407:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10397:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10397:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10505:303:14",
															"nodeType": "YulBlock",
															"src": "10505:303:14",
															"statements": [
																{
																	"nativeSrc": "10520:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10520:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10551:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10551:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10562:2:14",
																						"nodeType": "YulLiteral",
																						"src": "10562:2:14",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10547:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10547:3:14"
																				},
																				"nativeSrc": "10547:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10547:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10534:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "10534:12:14"
																		},
																		"nativeSrc": "10534:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10534:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10524:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10524:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10613:83:14",
																		"nodeType": "YulBlock",
																		"src": "10613:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10615:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "10615:77:14"
																					},
																					"nativeSrc": "10615:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "10615:79:14"
																				},
																				"nativeSrc": "10615:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "10615:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10585:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10585:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10593:18:14",
																				"nodeType": "YulLiteral",
																				"src": "10593:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10582:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "10582:2:14"
																		},
																		"nativeSrc": "10582:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10582:30:14"
																	},
																	"nativeSrc": "10579:117:14",
																	"nodeType": "YulIf",
																	"src": "10579:117:14"
																},
																{
																	"nativeSrc": "10710:88:14",
																	"nodeType": "YulAssignment",
																	"src": "10710:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10770:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10770:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10781:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10781:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10766:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10766:3:14"
																				},
																				"nativeSrc": "10766:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10766:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10790:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10790:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "10720:45:14",
																			"nodeType": "YulIdentifier",
																			"src": "10720:45:14"
																		},
																		"nativeSrc": "10720:78:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10720:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10710:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10710:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10818:288:14",
															"nodeType": "YulBlock",
															"src": "10818:288:14",
															"statements": [
																{
																	"nativeSrc": "10833:47:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10833:47:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10864:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10864:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10875:3:14",
																						"nodeType": "YulLiteral",
																						"src": "10875:3:14",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10860:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10860:3:14"
																				},
																				"nativeSrc": "10860:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10860:19:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10847:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "10847:12:14"
																		},
																		"nativeSrc": "10847:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10847:33:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10837:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10837:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10927:83:14",
																		"nodeType": "YulBlock",
																		"src": "10927:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10929:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "10929:77:14"
																					},
																					"nativeSrc": "10929:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "10929:79:14"
																				},
																				"nativeSrc": "10929:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "10929:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10899:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10899:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10907:18:14",
																				"nodeType": "YulLiteral",
																				"src": "10907:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10896:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "10896:2:14"
																		},
																		"nativeSrc": "10896:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10896:30:14"
																	},
																	"nativeSrc": "10893:117:14",
																	"nodeType": "YulIf",
																	"src": "10893:117:14"
																},
																{
																	"nativeSrc": "11024:72:14",
																	"nodeType": "YulAssignment",
																	"src": "11024:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11068:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11068:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11079:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11079:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11064:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11064:3:14"
																				},
																				"nativeSrc": "11064:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11064:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11088:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11088:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11034:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "11034:29:14"
																		},
																		"nativeSrc": "11034:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11034:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "11024:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11024:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "9604:1509:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9735:9:14",
														"nodeType": "YulTypedName",
														"src": "9735:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9746:7:14",
														"nodeType": "YulTypedName",
														"src": "9746:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9758:6:14",
														"nodeType": "YulTypedName",
														"src": "9758:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9766:6:14",
														"nodeType": "YulTypedName",
														"src": "9766:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9774:6:14",
														"nodeType": "YulTypedName",
														"src": "9774:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9782:6:14",
														"nodeType": "YulTypedName",
														"src": "9782:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9790:6:14",
														"nodeType": "YulTypedName",
														"src": "9790:6:14",
														"type": ""
													}
												],
												"src": "9604:1509:14"
											},
											{
												"body": {
													"nativeSrc": "11202:391:14",
													"nodeType": "YulBlock",
													"src": "11202:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "11248:83:14",
																"nodeType": "YulBlock",
																"src": "11248:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11250:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "11250:77:14"
																			},
																			"nativeSrc": "11250:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11250:79:14"
																		},
																		"nativeSrc": "11250:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11250:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11223:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11223:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11232:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11232:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11219:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11219:3:14"
																		},
																		"nativeSrc": "11219:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11219:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11244:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11244:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11215:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11215:3:14"
																},
																"nativeSrc": "11215:32:14",
																"nodeType": "YulFunctionCall",
																"src": "11215:32:14"
															},
															"nativeSrc": "11212:119:14",
															"nodeType": "YulIf",
															"src": "11212:119:14"
														},
														{
															"nativeSrc": "11341:117:14",
															"nodeType": "YulBlock",
															"src": "11341:117:14",
															"statements": [
																{
																	"nativeSrc": "11356:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11356:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11370:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11370:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11360:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11360:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11385:63:14",
																	"nodeType": "YulAssignment",
																	"src": "11385:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11420:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11420:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11431:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11431:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11416:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11416:3:14"
																				},
																				"nativeSrc": "11416:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11416:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11440:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11440:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "11395:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "11395:20:14"
																		},
																		"nativeSrc": "11395:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11395:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11385:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11385:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11468:118:14",
															"nodeType": "YulBlock",
															"src": "11468:118:14",
															"statements": [
																{
																	"nativeSrc": "11483:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11483:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11497:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11497:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11487:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11487:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11513:63:14",
																	"nodeType": "YulAssignment",
																	"src": "11513:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11548:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11548:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11559:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11559:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11544:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11544:3:14"
																				},
																				"nativeSrc": "11544:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11544:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11568:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11568:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11523:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "11523:20:14"
																		},
																		"nativeSrc": "11523:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11523:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11513:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11513:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "11119:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11164:9:14",
														"nodeType": "YulTypedName",
														"src": "11164:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11175:7:14",
														"nodeType": "YulTypedName",
														"src": "11175:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11187:6:14",
														"nodeType": "YulTypedName",
														"src": "11187:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11195:6:14",
														"nodeType": "YulTypedName",
														"src": "11195:6:14",
														"type": ""
													}
												],
												"src": "11119:474:14"
											},
											{
												"body": {
													"nativeSrc": "11681:229:14",
													"nodeType": "YulBlock",
													"src": "11681:229:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "11786:22:14",
																"nodeType": "YulBlock",
																"src": "11786:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "11788:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "11788:16:14"
																			},
																			"nativeSrc": "11788:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11788:18:14"
																		},
																		"nativeSrc": "11788:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11788:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11758:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11758:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11766:18:14",
																		"nodeType": "YulLiteral",
																		"src": "11766:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11755:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "11755:2:14"
																},
																"nativeSrc": "11755:30:14",
																"nodeType": "YulFunctionCall",
																"src": "11755:30:14"
															},
															"nativeSrc": "11752:56:14",
															"nodeType": "YulIf",
															"src": "11752:56:14"
														},
														{
															"nativeSrc": "11818:25:14",
															"nodeType": "YulAssignment",
															"src": "11818:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11830:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11830:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11838:4:14",
																		"nodeType": "YulLiteral",
																		"src": "11838:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11826:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11826:3:14"
																},
																"nativeSrc": "11826:17:14",
																"nodeType": "YulFunctionCall",
																"src": "11826:17:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11818:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11818:4:14"
																}
															]
														},
														{
															"nativeSrc": "11880:23:14",
															"nodeType": "YulAssignment",
															"src": "11880:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "11892:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "11892:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11898:4:14",
																		"nodeType": "YulLiteral",
																		"src": "11898:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11888:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11888:3:14"
																},
																"nativeSrc": "11888:15:14",
																"nodeType": "YulFunctionCall",
																"src": "11888:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11880:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11880:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "11599:311:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "11665:6:14",
														"nodeType": "YulTypedName",
														"src": "11665:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "11676:4:14",
														"nodeType": "YulTypedName",
														"src": "11676:4:14",
														"type": ""
													}
												],
												"src": "11599:311:14"
											},
											{
												"body": {
													"nativeSrc": "12035:608:14",
													"nodeType": "YulBlock",
													"src": "12035:608:14",
													"statements": [
														{
															"nativeSrc": "12045:90:14",
															"nodeType": "YulAssignment",
															"src": "12045:90:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12127:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12127:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "12070:56:14",
																			"nodeType": "YulIdentifier",
																			"src": "12070:56:14"
																		},
																		"nativeSrc": "12070:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12070:64:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "12054:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "12054:15:14"
																},
																"nativeSrc": "12054:81:14",
																"nodeType": "YulFunctionCall",
																"src": "12054:81:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12045:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "12045:5:14"
																}
															]
														},
														{
															"nativeSrc": "12144:16:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12144:16:14",
															"value": {
																"name": "array",
																"nativeSrc": "12155:5:14",
																"nodeType": "YulIdentifier",
																"src": "12155:5:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "12148:3:14",
																	"nodeType": "YulTypedName",
																	"src": "12148:3:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12177:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "12177:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12184:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12184:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12170:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12170:6:14"
																},
																"nativeSrc": "12170:21:14",
																"nodeType": "YulFunctionCall",
																"src": "12170:21:14"
															},
															"nativeSrc": "12170:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "12170:21:14"
														},
														{
															"nativeSrc": "12200:23:14",
															"nodeType": "YulAssignment",
															"src": "12200:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12211:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "12211:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12218:4:14",
																		"nodeType": "YulLiteral",
																		"src": "12218:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12207:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12207:3:14"
																},
																"nativeSrc": "12207:16:14",
																"nodeType": "YulFunctionCall",
																"src": "12207:16:14"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "12200:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12200:3:14"
																}
															]
														},
														{
															"nativeSrc": "12233:44:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12233:44:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12251:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12251:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12263:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12263:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12271:4:14",
																				"nodeType": "YulLiteral",
																				"src": "12271:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "12259:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12259:3:14"
																		},
																		"nativeSrc": "12259:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12259:17:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12247:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12247:3:14"
																},
																"nativeSrc": "12247:30:14",
																"nodeType": "YulFunctionCall",
																"src": "12247:30:14"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "12237:6:14",
																	"nodeType": "YulTypedName",
																	"src": "12237:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12305:103:14",
																"nodeType": "YulBlock",
																"src": "12305:103:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "12319:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "12319:77:14"
																			},
																			"nativeSrc": "12319:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12319:79:14"
																		},
																		"nativeSrc": "12319:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12319:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "12292:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12292:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12300:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12300:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12289:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12289:2:14"
																},
																"nativeSrc": "12289:15:14",
																"nodeType": "YulFunctionCall",
																"src": "12289:15:14"
															},
															"nativeSrc": "12286:122:14",
															"nodeType": "YulIf",
															"src": "12286:122:14"
														},
														{
															"body": {
																"nativeSrc": "12493:144:14",
																"nodeType": "YulBlock",
																"src": "12493:144:14",
																"statements": [
																	{
																		"nativeSrc": "12508:21:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12508:21:14",
																		"value": {
																			"name": "src",
																			"nativeSrc": "12526:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12526:3:14"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "12512:10:14",
																				"nodeType": "YulTypedName",
																				"src": "12512:10:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "12550:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12550:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "12576:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "12576:10:14"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "12588:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "12588:3:14"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "12555:20:14",
																						"nodeType": "YulIdentifier",
																						"src": "12555:20:14"
																					},
																					"nativeSrc": "12555:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "12555:37:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12543:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12543:6:14"
																			},
																			"nativeSrc": "12543:50:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12543:50:14"
																		},
																		"nativeSrc": "12543:50:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12543:50:14"
																	},
																	{
																		"nativeSrc": "12606:21:14",
																		"nodeType": "YulAssignment",
																		"src": "12606:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "12617:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12617:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12622:4:14",
																					"nodeType": "YulLiteral",
																					"src": "12622:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12613:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12613:3:14"
																			},
																			"nativeSrc": "12613:14:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12613:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "12606:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12606:3:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12446:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12446:3:14"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "12451:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12451:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12443:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12443:2:14"
																},
																"nativeSrc": "12443:15:14",
																"nodeType": "YulFunctionCall",
																"src": "12443:15:14"
															},
															"nativeSrc": "12417:220:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12459:25:14",
																"nodeType": "YulBlock",
																"src": "12459:25:14",
																"statements": [
																	{
																		"nativeSrc": "12461:21:14",
																		"nodeType": "YulAssignment",
																		"src": "12461:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "12472:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12472:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12477:4:14",
																					"nodeType": "YulLiteral",
																					"src": "12477:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12468:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12468:3:14"
																			},
																			"nativeSrc": "12468:14:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12468:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "12461:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12461:3:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12421:21:14",
																"nodeType": "YulBlock",
																"src": "12421:21:14",
																"statements": [
																	{
																		"nativeSrc": "12423:17:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12423:17:14",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "12434:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "12434:6:14"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "12427:3:14",
																				"nodeType": "YulTypedName",
																				"src": "12427:3:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "12417:220:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "11933:710:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12005:6:14",
														"nodeType": "YulTypedName",
														"src": "12005:6:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12013:6:14",
														"nodeType": "YulTypedName",
														"src": "12013:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12021:3:14",
														"nodeType": "YulTypedName",
														"src": "12021:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12029:5:14",
														"nodeType": "YulTypedName",
														"src": "12029:5:14",
														"type": ""
													}
												],
												"src": "11933:710:14"
											},
											{
												"body": {
													"nativeSrc": "12743:293:14",
													"nodeType": "YulBlock",
													"src": "12743:293:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "12792:83:14",
																"nodeType": "YulBlock",
																"src": "12792:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "12794:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "12794:77:14"
																			},
																			"nativeSrc": "12794:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12794:79:14"
																		},
																		"nativeSrc": "12794:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12794:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "12771:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12771:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12779:4:14",
																						"nodeType": "YulLiteral",
																						"src": "12779:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12767:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12767:3:14"
																				},
																				"nativeSrc": "12767:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12767:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "12786:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12786:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12763:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12763:3:14"
																		},
																		"nativeSrc": "12763:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12763:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12756:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12756:6:14"
																},
																"nativeSrc": "12756:35:14",
																"nodeType": "YulFunctionCall",
																"src": "12756:35:14"
															},
															"nativeSrc": "12753:122:14",
															"nodeType": "YulIf",
															"src": "12753:122:14"
														},
														{
															"nativeSrc": "12884:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12884:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12911:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12911:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12898:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "12898:12:14"
																},
																"nativeSrc": "12898:20:14",
																"nodeType": "YulFunctionCall",
																"src": "12898:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12888:6:14",
																	"nodeType": "YulTypedName",
																	"src": "12888:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12927:103:14",
															"nodeType": "YulAssignment",
															"src": "12927:103:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13003:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13003:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13011:4:14",
																				"nodeType": "YulLiteral",
																				"src": "13011:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12999:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12999:3:14"
																		},
																		"nativeSrc": "12999:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12999:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13018:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13018:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "13026:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13026:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "12936:62:14",
																	"nodeType": "YulIdentifier",
																	"src": "12936:62:14"
																},
																"nativeSrc": "12936:94:14",
																"nodeType": "YulFunctionCall",
																"src": "12936:94:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12927:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "12927:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "12666:370:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12721:6:14",
														"nodeType": "YulTypedName",
														"src": "12721:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12729:3:14",
														"nodeType": "YulTypedName",
														"src": "12729:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12737:5:14",
														"nodeType": "YulTypedName",
														"src": "12737:5:14",
														"type": ""
													}
												],
												"src": "12666:370:14"
											},
											{
												"body": {
													"nativeSrc": "13175:761:14",
													"nodeType": "YulBlock",
													"src": "13175:761:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "13221:83:14",
																"nodeType": "YulBlock",
																"src": "13221:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13223:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "13223:77:14"
																			},
																			"nativeSrc": "13223:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "13223:79:14"
																		},
																		"nativeSrc": "13223:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "13223:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13196:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "13196:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13205:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13205:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13192:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13192:3:14"
																		},
																		"nativeSrc": "13192:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13192:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13217:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13217:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13188:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13188:3:14"
																},
																"nativeSrc": "13188:32:14",
																"nodeType": "YulFunctionCall",
																"src": "13188:32:14"
															},
															"nativeSrc": "13185:119:14",
															"nodeType": "YulIf",
															"src": "13185:119:14"
														},
														{
															"nativeSrc": "13314:302:14",
															"nodeType": "YulBlock",
															"src": "13314:302:14",
															"statements": [
																{
																	"nativeSrc": "13329:45:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13329:45:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13360:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13360:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13371:1:14",
																						"nodeType": "YulLiteral",
																						"src": "13371:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13356:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13356:3:14"
																				},
																				"nativeSrc": "13356:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13356:17:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13343:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "13343:12:14"
																		},
																		"nativeSrc": "13343:31:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13343:31:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13333:6:14",
																			"nodeType": "YulTypedName",
																			"src": "13333:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13421:83:14",
																		"nodeType": "YulBlock",
																		"src": "13421:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13423:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "13423:77:14"
																					},
																					"nativeSrc": "13423:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13423:79:14"
																				},
																				"nativeSrc": "13423:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "13423:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13393:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13393:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13401:18:14",
																				"nodeType": "YulLiteral",
																				"src": "13401:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13390:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "13390:2:14"
																		},
																		"nativeSrc": "13390:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13390:30:14"
																	},
																	"nativeSrc": "13387:117:14",
																	"nodeType": "YulIf",
																	"src": "13387:117:14"
																},
																{
																	"nativeSrc": "13518:88:14",
																	"nodeType": "YulAssignment",
																	"src": "13518:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13578:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13578:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13589:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13589:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13574:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13574:3:14"
																				},
																				"nativeSrc": "13574:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13574:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13598:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "13598:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "13528:45:14",
																			"nodeType": "YulIdentifier",
																			"src": "13528:45:14"
																		},
																		"nativeSrc": "13528:78:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13528:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13518:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13518:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13626:303:14",
															"nodeType": "YulBlock",
															"src": "13626:303:14",
															"statements": [
																{
																	"nativeSrc": "13641:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13641:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13672:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13672:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13683:2:14",
																						"nodeType": "YulLiteral",
																						"src": "13683:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13668:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13668:3:14"
																				},
																				"nativeSrc": "13668:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13668:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13655:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "13655:12:14"
																		},
																		"nativeSrc": "13655:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13655:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13645:6:14",
																			"nodeType": "YulTypedName",
																			"src": "13645:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13734:83:14",
																		"nodeType": "YulBlock",
																		"src": "13734:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13736:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "13736:77:14"
																					},
																					"nativeSrc": "13736:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13736:79:14"
																				},
																				"nativeSrc": "13736:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "13736:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13706:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13706:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13714:18:14",
																				"nodeType": "YulLiteral",
																				"src": "13714:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13703:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "13703:2:14"
																		},
																		"nativeSrc": "13703:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13703:30:14"
																	},
																	"nativeSrc": "13700:117:14",
																	"nodeType": "YulIf",
																	"src": "13700:117:14"
																},
																{
																	"nativeSrc": "13831:88:14",
																	"nodeType": "YulAssignment",
																	"src": "13831:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13891:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13891:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13902:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13902:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13887:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13887:3:14"
																				},
																				"nativeSrc": "13887:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13887:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13911:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "13911:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "13841:45:14",
																			"nodeType": "YulIdentifier",
																			"src": "13841:45:14"
																		},
																		"nativeSrc": "13841:78:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13841:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13831:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13831:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "13042:894:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13137:9:14",
														"nodeType": "YulTypedName",
														"src": "13137:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13148:7:14",
														"nodeType": "YulTypedName",
														"src": "13148:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13160:6:14",
														"nodeType": "YulTypedName",
														"src": "13160:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13168:6:14",
														"nodeType": "YulTypedName",
														"src": "13168:6:14",
														"type": ""
													}
												],
												"src": "13042:894:14"
											},
											{
												"body": {
													"nativeSrc": "14016:40:14",
													"nodeType": "YulBlock",
													"src": "14016:40:14",
													"statements": [
														{
															"nativeSrc": "14027:22:14",
															"nodeType": "YulAssignment",
															"src": "14027:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14043:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "14043:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14037:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "14037:5:14"
																},
																"nativeSrc": "14037:12:14",
																"nodeType": "YulFunctionCall",
																"src": "14037:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14027:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14027:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "13942:114:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13999:5:14",
														"nodeType": "YulTypedName",
														"src": "13999:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14009:6:14",
														"nodeType": "YulTypedName",
														"src": "14009:6:14",
														"type": ""
													}
												],
												"src": "13942:114:14"
											},
											{
												"body": {
													"nativeSrc": "14173:73:14",
													"nodeType": "YulBlock",
													"src": "14173:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14190:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14190:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14195:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14195:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14183:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14183:6:14"
																},
																"nativeSrc": "14183:19:14",
																"nodeType": "YulFunctionCall",
																"src": "14183:19:14"
															},
															"nativeSrc": "14183:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "14183:19:14"
														},
														{
															"nativeSrc": "14211:29:14",
															"nodeType": "YulAssignment",
															"src": "14211:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14230:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14230:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14235:4:14",
																		"nodeType": "YulLiteral",
																		"src": "14235:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14226:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14226:3:14"
																},
																"nativeSrc": "14226:14:14",
																"nodeType": "YulFunctionCall",
																"src": "14226:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14211:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "14211:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "14062:184:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14145:3:14",
														"nodeType": "YulTypedName",
														"src": "14145:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14150:6:14",
														"nodeType": "YulTypedName",
														"src": "14150:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14161:11:14",
														"nodeType": "YulTypedName",
														"src": "14161:11:14",
														"type": ""
													}
												],
												"src": "14062:184:14"
											},
											{
												"body": {
													"nativeSrc": "14324:60:14",
													"nodeType": "YulBlock",
													"src": "14324:60:14",
													"statements": [
														{
															"nativeSrc": "14334:11:14",
															"nodeType": "YulAssignment",
															"src": "14334:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "14342:3:14",
																"nodeType": "YulIdentifier",
																"src": "14342:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14334:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14334:4:14"
																}
															]
														},
														{
															"nativeSrc": "14355:22:14",
															"nodeType": "YulAssignment",
															"src": "14355:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "14367:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14367:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14372:4:14",
																		"nodeType": "YulLiteral",
																		"src": "14372:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14363:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14363:3:14"
																},
																"nativeSrc": "14363:14:14",
																"nodeType": "YulFunctionCall",
																"src": "14363:14:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14355:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14355:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "14252:132:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14311:3:14",
														"nodeType": "YulTypedName",
														"src": "14311:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "14319:4:14",
														"nodeType": "YulTypedName",
														"src": "14319:4:14",
														"type": ""
													}
												],
												"src": "14252:132:14"
											},
											{
												"body": {
													"nativeSrc": "14445:53:14",
													"nodeType": "YulBlock",
													"src": "14445:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14462:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14462:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14485:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "14485:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "14467:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "14467:17:14"
																		},
																		"nativeSrc": "14467:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14467:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14455:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14455:6:14"
																},
																"nativeSrc": "14455:37:14",
																"nodeType": "YulFunctionCall",
																"src": "14455:37:14"
															},
															"nativeSrc": "14455:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "14455:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "14390:108:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14433:5:14",
														"nodeType": "YulTypedName",
														"src": "14433:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14440:3:14",
														"nodeType": "YulTypedName",
														"src": "14440:3:14",
														"type": ""
													}
												],
												"src": "14390:108:14"
											},
											{
												"body": {
													"nativeSrc": "14584:99:14",
													"nodeType": "YulBlock",
													"src": "14584:99:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14628:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14628:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14636:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14636:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "14594:33:14",
																	"nodeType": "YulIdentifier",
																	"src": "14594:33:14"
																},
																"nativeSrc": "14594:46:14",
																"nodeType": "YulFunctionCall",
																"src": "14594:46:14"
															},
															"nativeSrc": "14594:46:14",
															"nodeType": "YulExpressionStatement",
															"src": "14594:46:14"
														},
														{
															"nativeSrc": "14649:28:14",
															"nodeType": "YulAssignment",
															"src": "14649:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14667:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14667:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14672:4:14",
																		"nodeType": "YulLiteral",
																		"src": "14672:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14663:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14663:3:14"
																},
																"nativeSrc": "14663:14:14",
																"nodeType": "YulFunctionCall",
																"src": "14663:14:14"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "14649:10:14",
																	"nodeType": "YulIdentifier",
																	"src": "14649:10:14"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "14504:179:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "14557:6:14",
														"nodeType": "YulTypedName",
														"src": "14557:6:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14565:3:14",
														"nodeType": "YulTypedName",
														"src": "14565:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "14573:10:14",
														"nodeType": "YulTypedName",
														"src": "14573:10:14",
														"type": ""
													}
												],
												"src": "14504:179:14"
											},
											{
												"body": {
													"nativeSrc": "14764:38:14",
													"nodeType": "YulBlock",
													"src": "14764:38:14",
													"statements": [
														{
															"nativeSrc": "14774:22:14",
															"nodeType": "YulAssignment",
															"src": "14774:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "14786:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14786:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14791:4:14",
																		"nodeType": "YulLiteral",
																		"src": "14791:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14782:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14782:3:14"
																},
																"nativeSrc": "14782:14:14",
																"nodeType": "YulFunctionCall",
																"src": "14782:14:14"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "14774:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14774:4:14"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "14689:113:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14751:3:14",
														"nodeType": "YulTypedName",
														"src": "14751:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "14759:4:14",
														"nodeType": "YulTypedName",
														"src": "14759:4:14",
														"type": ""
													}
												],
												"src": "14689:113:14"
											},
											{
												"body": {
													"nativeSrc": "14962:608:14",
													"nodeType": "YulBlock",
													"src": "14962:608:14",
													"statements": [
														{
															"nativeSrc": "14972:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "14972:68:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15034:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "15034:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "14986:47:14",
																	"nodeType": "YulIdentifier",
																	"src": "14986:47:14"
																},
																"nativeSrc": "14986:54:14",
																"nodeType": "YulFunctionCall",
																"src": "14986:54:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14976:6:14",
																	"nodeType": "YulTypedName",
																	"src": "14976:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15049:93:14",
															"nodeType": "YulAssignment",
															"src": "15049:93:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15130:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15130:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15135:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "15135:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "15056:73:14",
																	"nodeType": "YulIdentifier",
																	"src": "15056:73:14"
																},
																"nativeSrc": "15056:86:14",
																"nodeType": "YulFunctionCall",
																"src": "15056:86:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15049:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15049:3:14"
																}
															]
														},
														{
															"nativeSrc": "15151:71:14",
															"nodeType": "YulVariableDeclaration",
															"src": "15151:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15216:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "15216:5:14"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "15166:49:14",
																	"nodeType": "YulIdentifier",
																	"src": "15166:49:14"
																},
																"nativeSrc": "15166:56:14",
																"nodeType": "YulFunctionCall",
																"src": "15166:56:14"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "15155:7:14",
																	"nodeType": "YulTypedName",
																	"src": "15155:7:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15231:21:14",
															"nodeType": "YulVariableDeclaration",
															"src": "15231:21:14",
															"value": {
																"name": "baseRef",
																"nativeSrc": "15245:7:14",
																"nodeType": "YulIdentifier",
																"src": "15245:7:14"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "15235:6:14",
																	"nodeType": "YulTypedName",
																	"src": "15235:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15321:224:14",
																"nodeType": "YulBlock",
																"src": "15321:224:14",
																"statements": [
																	{
																		"nativeSrc": "15335:34:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15335:34:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "15362:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "15362:6:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "15356:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "15356:5:14"
																			},
																			"nativeSrc": "15356:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15356:13:14"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "15339:13:14",
																				"nodeType": "YulTypedName",
																				"src": "15339:13:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15382:70:14",
																		"nodeType": "YulAssignment",
																		"src": "15382:70:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "15433:13:14",
																					"nodeType": "YulIdentifier",
																					"src": "15433:13:14"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "15448:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15448:3:14"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "15389:43:14",
																				"nodeType": "YulIdentifier",
																				"src": "15389:43:14"
																			},
																			"nativeSrc": "15389:63:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15389:63:14"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "15382:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "15382:3:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "15465:70:14",
																		"nodeType": "YulAssignment",
																		"src": "15465:70:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "15528:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "15528:6:14"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "15475:52:14",
																				"nodeType": "YulIdentifier",
																				"src": "15475:52:14"
																			},
																			"nativeSrc": "15475:60:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15475:60:14"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "15465:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "15465:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "15283:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15283:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15286:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "15286:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "15280:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "15280:2:14"
																},
																"nativeSrc": "15280:13:14",
																"nodeType": "YulFunctionCall",
																"src": "15280:13:14"
															},
															"nativeSrc": "15261:284:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "15294:18:14",
																"nodeType": "YulBlock",
																"src": "15294:18:14",
																"statements": [
																	{
																		"nativeSrc": "15296:14:14",
																		"nodeType": "YulAssignment",
																		"src": "15296:14:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "15305:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "15305:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15308:1:14",
																					"nodeType": "YulLiteral",
																					"src": "15308:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15301:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "15301:3:14"
																			},
																			"nativeSrc": "15301:9:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15301:9:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "15296:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "15296:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "15265:14:14",
																"nodeType": "YulBlock",
																"src": "15265:14:14",
																"statements": [
																	{
																		"nativeSrc": "15267:10:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15267:10:14",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "15276:1:14",
																			"nodeType": "YulLiteral",
																			"src": "15276:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "15271:1:14",
																				"nodeType": "YulTypedName",
																				"src": "15271:1:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "15261:284:14"
														},
														{
															"nativeSrc": "15554:10:14",
															"nodeType": "YulAssignment",
															"src": "15554:10:14",
															"value": {
																"name": "pos",
																"nativeSrc": "15561:3:14",
																"nodeType": "YulIdentifier",
																"src": "15561:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15554:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15554:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "14838:732:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14941:5:14",
														"nodeType": "YulTypedName",
														"src": "14941:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14948:3:14",
														"nodeType": "YulTypedName",
														"src": "14948:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14957:3:14",
														"nodeType": "YulTypedName",
														"src": "14957:3:14",
														"type": ""
													}
												],
												"src": "14838:732:14"
											},
											{
												"body": {
													"nativeSrc": "15724:225:14",
													"nodeType": "YulBlock",
													"src": "15724:225:14",
													"statements": [
														{
															"nativeSrc": "15734:26:14",
															"nodeType": "YulAssignment",
															"src": "15734:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15746:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15746:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15757:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15757:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15742:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15742:3:14"
																},
																"nativeSrc": "15742:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15742:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15734:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15734:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15781:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15781:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15792:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15792:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15777:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15777:3:14"
																		},
																		"nativeSrc": "15777:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15777:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15800:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "15800:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15806:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15806:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15796:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15796:3:14"
																		},
																		"nativeSrc": "15796:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15796:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15770:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15770:6:14"
																},
																"nativeSrc": "15770:47:14",
																"nodeType": "YulFunctionCall",
																"src": "15770:47:14"
															},
															"nativeSrc": "15770:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "15770:47:14"
														},
														{
															"nativeSrc": "15826:116:14",
															"nodeType": "YulAssignment",
															"src": "15826:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15928:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "15928:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "15937:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "15937:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "15834:93:14",
																	"nodeType": "YulIdentifier",
																	"src": "15834:93:14"
																},
																"nativeSrc": "15834:108:14",
																"nodeType": "YulFunctionCall",
																"src": "15834:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15826:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15826:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "15576:373:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15696:9:14",
														"nodeType": "YulTypedName",
														"src": "15696:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15708:6:14",
														"nodeType": "YulTypedName",
														"src": "15708:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15719:4:14",
														"nodeType": "YulTypedName",
														"src": "15719:4:14",
														"type": ""
													}
												],
												"src": "15576:373:14"
											},
											{
												"body": {
													"nativeSrc": "15995:76:14",
													"nodeType": "YulBlock",
													"src": "15995:76:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "16049:16:14",
																"nodeType": "YulBlock",
																"src": "16049:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16058:1:14",
																					"nodeType": "YulLiteral",
																					"src": "16058:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16061:1:14",
																					"nodeType": "YulLiteral",
																					"src": "16061:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16051:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "16051:6:14"
																			},
																			"nativeSrc": "16051:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16051:12:14"
																		},
																		"nativeSrc": "16051:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "16051:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16018:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "16018:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16040:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "16040:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "16025:14:14",
																					"nodeType": "YulIdentifier",
																					"src": "16025:14:14"
																				},
																				"nativeSrc": "16025:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "16025:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "16015:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "16015:2:14"
																		},
																		"nativeSrc": "16015:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16015:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16008:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16008:6:14"
																},
																"nativeSrc": "16008:40:14",
																"nodeType": "YulFunctionCall",
																"src": "16008:40:14"
															},
															"nativeSrc": "16005:60:14",
															"nodeType": "YulIf",
															"src": "16005:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "15955:116:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15988:5:14",
														"nodeType": "YulTypedName",
														"src": "15988:5:14",
														"type": ""
													}
												],
												"src": "15955:116:14"
											},
											{
												"body": {
													"nativeSrc": "16126:84:14",
													"nodeType": "YulBlock",
													"src": "16126:84:14",
													"statements": [
														{
															"nativeSrc": "16136:29:14",
															"nodeType": "YulAssignment",
															"src": "16136:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16158:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16158:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "16145:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "16145:12:14"
																},
																"nativeSrc": "16145:20:14",
																"nodeType": "YulFunctionCall",
																"src": "16145:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16136:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "16136:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16198:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "16198:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "16174:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "16174:23:14"
																},
																"nativeSrc": "16174:30:14",
																"nodeType": "YulFunctionCall",
																"src": "16174:30:14"
															},
															"nativeSrc": "16174:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "16174:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "16077:133:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16104:6:14",
														"nodeType": "YulTypedName",
														"src": "16104:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16112:3:14",
														"nodeType": "YulTypedName",
														"src": "16112:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16120:5:14",
														"nodeType": "YulTypedName",
														"src": "16120:5:14",
														"type": ""
													}
												],
												"src": "16077:133:14"
											},
											{
												"body": {
													"nativeSrc": "16296:388:14",
													"nodeType": "YulBlock",
													"src": "16296:388:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "16342:83:14",
																"nodeType": "YulBlock",
																"src": "16342:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16344:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "16344:77:14"
																			},
																			"nativeSrc": "16344:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16344:79:14"
																		},
																		"nativeSrc": "16344:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "16344:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16317:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "16317:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16326:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16326:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16313:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16313:3:14"
																		},
																		"nativeSrc": "16313:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16313:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16338:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16338:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16309:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16309:3:14"
																},
																"nativeSrc": "16309:32:14",
																"nodeType": "YulFunctionCall",
																"src": "16309:32:14"
															},
															"nativeSrc": "16306:119:14",
															"nodeType": "YulIf",
															"src": "16306:119:14"
														},
														{
															"nativeSrc": "16435:117:14",
															"nodeType": "YulBlock",
															"src": "16435:117:14",
															"statements": [
																{
																	"nativeSrc": "16450:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16450:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16464:1:14",
																		"nodeType": "YulLiteral",
																		"src": "16464:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16454:6:14",
																			"nodeType": "YulTypedName",
																			"src": "16454:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16479:63:14",
																	"nodeType": "YulAssignment",
																	"src": "16479:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16514:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "16514:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16525:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "16525:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16510:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "16510:3:14"
																				},
																				"nativeSrc": "16510:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "16510:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16534:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "16534:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16489:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "16489:20:14"
																		},
																		"nativeSrc": "16489:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16489:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16479:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "16479:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16562:115:14",
															"nodeType": "YulBlock",
															"src": "16562:115:14",
															"statements": [
																{
																	"nativeSrc": "16577:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16577:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16591:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16591:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16581:6:14",
																			"nodeType": "YulTypedName",
																			"src": "16581:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16607:60:14",
																	"nodeType": "YulAssignment",
																	"src": "16607:60:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16639:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "16639:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16650:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "16650:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16635:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "16635:3:14"
																				},
																				"nativeSrc": "16635:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "16635:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16659:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "16659:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "16617:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "16617:17:14"
																		},
																		"nativeSrc": "16617:50:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16617:50:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16607:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "16607:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "16216:468:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16258:9:14",
														"nodeType": "YulTypedName",
														"src": "16258:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16269:7:14",
														"nodeType": "YulTypedName",
														"src": "16269:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16281:6:14",
														"nodeType": "YulTypedName",
														"src": "16281:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16289:6:14",
														"nodeType": "YulTypedName",
														"src": "16289:6:14",
														"type": ""
													}
												],
												"src": "16216:468:14"
											},
											{
												"body": {
													"nativeSrc": "16773:391:14",
													"nodeType": "YulBlock",
													"src": "16773:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "16819:83:14",
																"nodeType": "YulBlock",
																"src": "16819:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16821:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "16821:77:14"
																			},
																			"nativeSrc": "16821:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16821:79:14"
																		},
																		"nativeSrc": "16821:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "16821:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16794:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "16794:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16803:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16803:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16790:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16790:3:14"
																		},
																		"nativeSrc": "16790:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16790:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16815:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16815:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16786:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16786:3:14"
																},
																"nativeSrc": "16786:32:14",
																"nodeType": "YulFunctionCall",
																"src": "16786:32:14"
															},
															"nativeSrc": "16783:119:14",
															"nodeType": "YulIf",
															"src": "16783:119:14"
														},
														{
															"nativeSrc": "16912:117:14",
															"nodeType": "YulBlock",
															"src": "16912:117:14",
															"statements": [
																{
																	"nativeSrc": "16927:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16927:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16941:1:14",
																		"nodeType": "YulLiteral",
																		"src": "16941:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16931:6:14",
																			"nodeType": "YulTypedName",
																			"src": "16931:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16956:63:14",
																	"nodeType": "YulAssignment",
																	"src": "16956:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16991:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "16991:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17002:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "17002:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16987:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "16987:3:14"
																				},
																				"nativeSrc": "16987:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "16987:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17011:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "17011:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16966:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "16966:20:14"
																		},
																		"nativeSrc": "16966:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16966:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16956:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "16956:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17039:118:14",
															"nodeType": "YulBlock",
															"src": "17039:118:14",
															"statements": [
																{
																	"nativeSrc": "17054:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17054:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17068:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17068:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17058:6:14",
																			"nodeType": "YulTypedName",
																			"src": "17058:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17084:63:14",
																	"nodeType": "YulAssignment",
																	"src": "17084:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17119:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "17119:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17130:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "17130:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17115:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "17115:3:14"
																				},
																				"nativeSrc": "17115:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "17115:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17139:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "17139:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17094:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "17094:20:14"
																		},
																		"nativeSrc": "17094:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17094:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17084:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "17084:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "16690:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16735:9:14",
														"nodeType": "YulTypedName",
														"src": "16735:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16746:7:14",
														"nodeType": "YulTypedName",
														"src": "16746:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16758:6:14",
														"nodeType": "YulTypedName",
														"src": "16758:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16766:6:14",
														"nodeType": "YulTypedName",
														"src": "16766:6:14",
														"type": ""
													}
												],
												"src": "16690:474:14"
											},
											{
												"body": {
													"nativeSrc": "17313:946:14",
													"nodeType": "YulBlock",
													"src": "17313:946:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "17360:83:14",
																"nodeType": "YulBlock",
																"src": "17360:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17362:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "17362:77:14"
																			},
																			"nativeSrc": "17362:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "17362:79:14"
																		},
																		"nativeSrc": "17362:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "17362:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17334:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "17334:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17343:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17343:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17330:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17330:3:14"
																		},
																		"nativeSrc": "17330:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17330:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17355:3:14",
																		"nodeType": "YulLiteral",
																		"src": "17355:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17326:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17326:3:14"
																},
																"nativeSrc": "17326:33:14",
																"nodeType": "YulFunctionCall",
																"src": "17326:33:14"
															},
															"nativeSrc": "17323:120:14",
															"nodeType": "YulIf",
															"src": "17323:120:14"
														},
														{
															"nativeSrc": "17453:117:14",
															"nodeType": "YulBlock",
															"src": "17453:117:14",
															"statements": [
																{
																	"nativeSrc": "17468:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17468:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17482:1:14",
																		"nodeType": "YulLiteral",
																		"src": "17482:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17472:6:14",
																			"nodeType": "YulTypedName",
																			"src": "17472:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17497:63:14",
																	"nodeType": "YulAssignment",
																	"src": "17497:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17532:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "17532:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17543:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "17543:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17528:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "17528:3:14"
																				},
																				"nativeSrc": "17528:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "17528:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17552:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "17552:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17507:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "17507:20:14"
																		},
																		"nativeSrc": "17507:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17507:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17497:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "17497:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17580:118:14",
															"nodeType": "YulBlock",
															"src": "17580:118:14",
															"statements": [
																{
																	"nativeSrc": "17595:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17595:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17609:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17609:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17599:6:14",
																			"nodeType": "YulTypedName",
																			"src": "17599:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17625:63:14",
																	"nodeType": "YulAssignment",
																	"src": "17625:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17660:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "17660:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17671:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "17671:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17656:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "17656:3:14"
																				},
																				"nativeSrc": "17656:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "17656:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17680:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "17680:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17635:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "17635:20:14"
																		},
																		"nativeSrc": "17635:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17635:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17625:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "17625:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17708:118:14",
															"nodeType": "YulBlock",
															"src": "17708:118:14",
															"statements": [
																{
																	"nativeSrc": "17723:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17723:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17737:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17737:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17727:6:14",
																			"nodeType": "YulTypedName",
																			"src": "17727:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17753:63:14",
																	"nodeType": "YulAssignment",
																	"src": "17753:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17788:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "17788:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17799:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "17799:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17784:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "17784:3:14"
																				},
																				"nativeSrc": "17784:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "17784:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17808:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "17808:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "17763:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "17763:20:14"
																		},
																		"nativeSrc": "17763:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17763:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "17753:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "17753:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17836:118:14",
															"nodeType": "YulBlock",
															"src": "17836:118:14",
															"statements": [
																{
																	"nativeSrc": "17851:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17851:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17865:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17865:2:14",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17855:6:14",
																			"nodeType": "YulTypedName",
																			"src": "17855:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17881:63:14",
																	"nodeType": "YulAssignment",
																	"src": "17881:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17916:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "17916:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17927:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "17927:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17912:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "17912:3:14"
																				},
																				"nativeSrc": "17912:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "17912:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17936:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "17936:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "17891:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "17891:20:14"
																		},
																		"nativeSrc": "17891:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17891:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "17881:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "17881:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17964:288:14",
															"nodeType": "YulBlock",
															"src": "17964:288:14",
															"statements": [
																{
																	"nativeSrc": "17979:47:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17979:47:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18010:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "18010:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18021:3:14",
																						"nodeType": "YulLiteral",
																						"src": "18021:3:14",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18006:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "18006:3:14"
																				},
																				"nativeSrc": "18006:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "18006:19:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "17993:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "17993:12:14"
																		},
																		"nativeSrc": "17993:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17993:33:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17983:6:14",
																			"nodeType": "YulTypedName",
																			"src": "17983:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "18073:83:14",
																		"nodeType": "YulBlock",
																		"src": "18073:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "18075:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "18075:77:14"
																					},
																					"nativeSrc": "18075:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "18075:79:14"
																				},
																				"nativeSrc": "18075:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "18075:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "18045:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "18045:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18053:18:14",
																				"nodeType": "YulLiteral",
																				"src": "18053:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "18042:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "18042:2:14"
																		},
																		"nativeSrc": "18042:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18042:30:14"
																	},
																	"nativeSrc": "18039:117:14",
																	"nodeType": "YulIf",
																	"src": "18039:117:14"
																},
																{
																	"nativeSrc": "18170:72:14",
																	"nodeType": "YulAssignment",
																	"src": "18170:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18214:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "18214:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18225:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "18225:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18210:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "18210:3:14"
																				},
																				"nativeSrc": "18210:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "18210:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18234:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "18234:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "18180:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "18180:29:14"
																		},
																		"nativeSrc": "18180:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18180:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "18170:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "18170:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "17170:1089:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17251:9:14",
														"nodeType": "YulTypedName",
														"src": "17251:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17262:7:14",
														"nodeType": "YulTypedName",
														"src": "17262:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17274:6:14",
														"nodeType": "YulTypedName",
														"src": "17274:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17282:6:14",
														"nodeType": "YulTypedName",
														"src": "17282:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17290:6:14",
														"nodeType": "YulTypedName",
														"src": "17290:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17298:6:14",
														"nodeType": "YulTypedName",
														"src": "17298:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "17306:6:14",
														"nodeType": "YulTypedName",
														"src": "17306:6:14",
														"type": ""
													}
												],
												"src": "17170:1089:14"
											},
											{
												"body": {
													"nativeSrc": "18293:152:14",
													"nodeType": "YulBlock",
													"src": "18293:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18310:1:14",
																		"nodeType": "YulLiteral",
																		"src": "18310:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18313:77:14",
																		"nodeType": "YulLiteral",
																		"src": "18313:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18303:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18303:6:14"
																},
																"nativeSrc": "18303:88:14",
																"nodeType": "YulFunctionCall",
																"src": "18303:88:14"
															},
															"nativeSrc": "18303:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "18303:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18407:1:14",
																		"nodeType": "YulLiteral",
																		"src": "18407:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18410:4:14",
																		"nodeType": "YulLiteral",
																		"src": "18410:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18400:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18400:6:14"
																},
																"nativeSrc": "18400:15:14",
																"nodeType": "YulFunctionCall",
																"src": "18400:15:14"
															},
															"nativeSrc": "18400:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "18400:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18431:1:14",
																		"nodeType": "YulLiteral",
																		"src": "18431:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18434:4:14",
																		"nodeType": "YulLiteral",
																		"src": "18434:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18424:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18424:6:14"
																},
																"nativeSrc": "18424:15:14",
																"nodeType": "YulFunctionCall",
																"src": "18424:15:14"
															},
															"nativeSrc": "18424:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "18424:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "18265:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "18265:180:14"
											},
											{
												"body": {
													"nativeSrc": "18502:269:14",
													"nodeType": "YulBlock",
													"src": "18502:269:14",
													"statements": [
														{
															"nativeSrc": "18512:22:14",
															"nodeType": "YulAssignment",
															"src": "18512:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18526:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18526:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18532:1:14",
																		"nodeType": "YulLiteral",
																		"src": "18532:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18522:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18522:3:14"
																},
																"nativeSrc": "18522:12:14",
																"nodeType": "YulFunctionCall",
																"src": "18522:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18512:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18512:6:14"
																}
															]
														},
														{
															"nativeSrc": "18543:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "18543:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18573:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18573:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18579:1:14",
																		"nodeType": "YulLiteral",
																		"src": "18579:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18569:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18569:3:14"
																},
																"nativeSrc": "18569:12:14",
																"nodeType": "YulFunctionCall",
																"src": "18569:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "18547:18:14",
																	"nodeType": "YulTypedName",
																	"src": "18547:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18620:51:14",
																"nodeType": "YulBlock",
																"src": "18620:51:14",
																"statements": [
																	{
																		"nativeSrc": "18634:27:14",
																		"nodeType": "YulAssignment",
																		"src": "18634:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "18648:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "18648:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18656:4:14",
																					"nodeType": "YulLiteral",
																					"src": "18656:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "18644:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "18644:3:14"
																			},
																			"nativeSrc": "18644:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "18644:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "18634:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "18634:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "18600:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "18600:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18593:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18593:6:14"
																},
																"nativeSrc": "18593:26:14",
																"nodeType": "YulFunctionCall",
																"src": "18593:26:14"
															},
															"nativeSrc": "18590:81:14",
															"nodeType": "YulIf",
															"src": "18590:81:14"
														},
														{
															"body": {
																"nativeSrc": "18723:42:14",
																"nodeType": "YulBlock",
																"src": "18723:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "18737:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "18737:16:14"
																			},
																			"nativeSrc": "18737:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "18737:18:14"
																		},
																		"nativeSrc": "18737:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "18737:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "18687:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "18687:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "18710:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "18710:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18718:2:14",
																				"nodeType": "YulLiteral",
																				"src": "18718:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "18707:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "18707:2:14"
																		},
																		"nativeSrc": "18707:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18707:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "18684:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "18684:2:14"
																},
																"nativeSrc": "18684:38:14",
																"nodeType": "YulFunctionCall",
																"src": "18684:38:14"
															},
															"nativeSrc": "18681:84:14",
															"nodeType": "YulIf",
															"src": "18681:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "18451:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18486:4:14",
														"nodeType": "YulTypedName",
														"src": "18486:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18495:6:14",
														"nodeType": "YulTypedName",
														"src": "18495:6:14",
														"type": ""
													}
												],
												"src": "18451:320:14"
											},
											{
												"body": {
													"nativeSrc": "18842:53:14",
													"nodeType": "YulBlock",
													"src": "18842:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18859:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18859:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18882:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "18882:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "18864:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "18864:17:14"
																		},
																		"nativeSrc": "18864:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18864:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18852:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18852:6:14"
																},
																"nativeSrc": "18852:37:14",
																"nodeType": "YulFunctionCall",
																"src": "18852:37:14"
															},
															"nativeSrc": "18852:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "18852:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "18777:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18830:5:14",
														"nodeType": "YulTypedName",
														"src": "18830:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18837:3:14",
														"nodeType": "YulTypedName",
														"src": "18837:3:14",
														"type": ""
													}
												],
												"src": "18777:118:14"
											},
											{
												"body": {
													"nativeSrc": "19027:206:14",
													"nodeType": "YulBlock",
													"src": "19027:206:14",
													"statements": [
														{
															"nativeSrc": "19037:26:14",
															"nodeType": "YulAssignment",
															"src": "19037:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19049:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19049:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19060:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19060:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19045:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19045:3:14"
																},
																"nativeSrc": "19045:18:14",
																"nodeType": "YulFunctionCall",
																"src": "19045:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19037:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19037:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19117:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19117:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19130:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19130:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19141:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19141:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19126:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19126:3:14"
																		},
																		"nativeSrc": "19126:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19126:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19073:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "19073:43:14"
																},
																"nativeSrc": "19073:71:14",
																"nodeType": "YulFunctionCall",
																"src": "19073:71:14"
															},
															"nativeSrc": "19073:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "19073:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19198:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19198:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19211:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19211:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19222:2:14",
																				"nodeType": "YulLiteral",
																				"src": "19222:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19207:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19207:3:14"
																		},
																		"nativeSrc": "19207:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19207:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19154:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "19154:43:14"
																},
																"nativeSrc": "19154:72:14",
																"nodeType": "YulFunctionCall",
																"src": "19154:72:14"
															},
															"nativeSrc": "19154:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "19154:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "18901:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18991:9:14",
														"nodeType": "YulTypedName",
														"src": "18991:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19003:6:14",
														"nodeType": "YulTypedName",
														"src": "19003:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19011:6:14",
														"nodeType": "YulTypedName",
														"src": "19011:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19022:4:14",
														"nodeType": "YulTypedName",
														"src": "19022:4:14",
														"type": ""
													}
												],
												"src": "18901:332:14"
											},
											{
												"body": {
													"nativeSrc": "19345:75:14",
													"nodeType": "YulBlock",
													"src": "19345:75:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19367:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "19367:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19375:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19375:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19363:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19363:3:14"
																		},
																		"nativeSrc": "19363:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19363:14:14"
																	},
																	{
																		"hexValue": "4f6e6c792074656163686572732063616e2061776172642063726564697473",
																		"kind": "string",
																		"nativeSrc": "19379:33:14",
																		"nodeType": "YulLiteral",
																		"src": "19379:33:14",
																		"type": "",
																		"value": "Only teachers can award credits"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19356:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19356:6:14"
																},
																"nativeSrc": "19356:57:14",
																"nodeType": "YulFunctionCall",
																"src": "19356:57:14"
															},
															"nativeSrc": "19356:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "19356:57:14"
														}
													]
												},
												"name": "store_literal_in_memory_6122524deead21d84ed31b4a09db3da08247d33ad5b6d78a8635067b970e12b2",
												"nativeSrc": "19239:181:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19337:6:14",
														"nodeType": "YulTypedName",
														"src": "19337:6:14",
														"type": ""
													}
												],
												"src": "19239:181:14"
											},
											{
												"body": {
													"nativeSrc": "19572:220:14",
													"nodeType": "YulBlock",
													"src": "19572:220:14",
													"statements": [
														{
															"nativeSrc": "19582:74:14",
															"nodeType": "YulAssignment",
															"src": "19582:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19648:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19648:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19653:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19653:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19589:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "19589:58:14"
																},
																"nativeSrc": "19589:67:14",
																"nodeType": "YulFunctionCall",
																"src": "19589:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19582:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19582:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19754:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19754:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6122524deead21d84ed31b4a09db3da08247d33ad5b6d78a8635067b970e12b2",
																	"nativeSrc": "19665:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "19665:88:14"
																},
																"nativeSrc": "19665:93:14",
																"nodeType": "YulFunctionCall",
																"src": "19665:93:14"
															},
															"nativeSrc": "19665:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "19665:93:14"
														},
														{
															"nativeSrc": "19767:19:14",
															"nodeType": "YulAssignment",
															"src": "19767:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19778:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19778:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19783:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19783:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19774:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19774:3:14"
																},
																"nativeSrc": "19774:12:14",
																"nodeType": "YulFunctionCall",
																"src": "19774:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19767:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19767:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6122524deead21d84ed31b4a09db3da08247d33ad5b6d78a8635067b970e12b2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19426:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19560:3:14",
														"nodeType": "YulTypedName",
														"src": "19560:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19568:3:14",
														"nodeType": "YulTypedName",
														"src": "19568:3:14",
														"type": ""
													}
												],
												"src": "19426:366:14"
											},
											{
												"body": {
													"nativeSrc": "19969:248:14",
													"nodeType": "YulBlock",
													"src": "19969:248:14",
													"statements": [
														{
															"nativeSrc": "19979:26:14",
															"nodeType": "YulAssignment",
															"src": "19979:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19991:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19991:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20002:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20002:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19987:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19987:3:14"
																},
																"nativeSrc": "19987:18:14",
																"nodeType": "YulFunctionCall",
																"src": "19987:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19979:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19979:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20026:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20026:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20037:1:14",
																				"nodeType": "YulLiteral",
																				"src": "20037:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20022:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20022:3:14"
																		},
																		"nativeSrc": "20022:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20022:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20045:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "20045:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20051:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20051:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20041:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20041:3:14"
																		},
																		"nativeSrc": "20041:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20041:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20015:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20015:6:14"
																},
																"nativeSrc": "20015:47:14",
																"nodeType": "YulFunctionCall",
																"src": "20015:47:14"
															},
															"nativeSrc": "20015:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "20015:47:14"
														},
														{
															"nativeSrc": "20071:139:14",
															"nodeType": "YulAssignment",
															"src": "20071:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20205:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "20205:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6122524deead21d84ed31b4a09db3da08247d33ad5b6d78a8635067b970e12b2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20079:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "20079:124:14"
																},
																"nativeSrc": "20079:131:14",
																"nodeType": "YulFunctionCall",
																"src": "20079:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20071:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20071:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6122524deead21d84ed31b4a09db3da08247d33ad5b6d78a8635067b970e12b2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19798:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19949:9:14",
														"nodeType": "YulTypedName",
														"src": "19949:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19964:4:14",
														"nodeType": "YulTypedName",
														"src": "19964:4:14",
														"type": ""
													}
												],
												"src": "19798:419:14"
											},
											{
												"body": {
													"nativeSrc": "20349:206:14",
													"nodeType": "YulBlock",
													"src": "20349:206:14",
													"statements": [
														{
															"nativeSrc": "20359:26:14",
															"nodeType": "YulAssignment",
															"src": "20359:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20371:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "20371:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20382:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20382:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20367:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20367:3:14"
																},
																"nativeSrc": "20367:18:14",
																"nodeType": "YulFunctionCall",
																"src": "20367:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20359:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20359:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20439:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "20439:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20452:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20452:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20463:1:14",
																				"nodeType": "YulLiteral",
																				"src": "20463:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20448:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20448:3:14"
																		},
																		"nativeSrc": "20448:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20448:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20395:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "20395:43:14"
																},
																"nativeSrc": "20395:71:14",
																"nodeType": "YulFunctionCall",
																"src": "20395:71:14"
															},
															"nativeSrc": "20395:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "20395:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20520:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "20520:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20533:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20533:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20544:2:14",
																				"nodeType": "YulLiteral",
																				"src": "20544:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20529:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20529:3:14"
																		},
																		"nativeSrc": "20529:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20529:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20476:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "20476:43:14"
																},
																"nativeSrc": "20476:72:14",
																"nodeType": "YulFunctionCall",
																"src": "20476:72:14"
															},
															"nativeSrc": "20476:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "20476:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20223:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20313:9:14",
														"nodeType": "YulTypedName",
														"src": "20313:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20325:6:14",
														"nodeType": "YulTypedName",
														"src": "20325:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20333:6:14",
														"nodeType": "YulTypedName",
														"src": "20333:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20344:4:14",
														"nodeType": "YulTypedName",
														"src": "20344:4:14",
														"type": ""
													}
												],
												"src": "20223:332:14"
											},
											{
												"body": {
													"nativeSrc": "20589:152:14",
													"nodeType": "YulBlock",
													"src": "20589:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20606:1:14",
																		"nodeType": "YulLiteral",
																		"src": "20606:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20609:77:14",
																		"nodeType": "YulLiteral",
																		"src": "20609:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20599:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20599:6:14"
																},
																"nativeSrc": "20599:88:14",
																"nodeType": "YulFunctionCall",
																"src": "20599:88:14"
															},
															"nativeSrc": "20599:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "20599:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20703:1:14",
																		"nodeType": "YulLiteral",
																		"src": "20703:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20706:4:14",
																		"nodeType": "YulLiteral",
																		"src": "20706:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20696:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20696:6:14"
																},
																"nativeSrc": "20696:15:14",
																"nodeType": "YulFunctionCall",
																"src": "20696:15:14"
															},
															"nativeSrc": "20696:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "20696:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20727:1:14",
																		"nodeType": "YulLiteral",
																		"src": "20727:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20730:4:14",
																		"nodeType": "YulLiteral",
																		"src": "20730:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20720:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20720:6:14"
																},
																"nativeSrc": "20720:15:14",
																"nodeType": "YulFunctionCall",
																"src": "20720:15:14"
															},
															"nativeSrc": "20720:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "20720:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "20561:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "20561:180:14"
											},
											{
												"body": {
													"nativeSrc": "20853:75:14",
													"nodeType": "YulBlock",
													"src": "20853:75:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20875:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "20875:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20883:1:14",
																				"nodeType": "YulLiteral",
																				"src": "20883:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20871:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20871:3:14"
																		},
																		"nativeSrc": "20871:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20871:14:14"
																	},
																	{
																		"hexValue": "4f6e6c792073747564656e74732063616e20636c61696d2072657761726473",
																		"kind": "string",
																		"nativeSrc": "20887:33:14",
																		"nodeType": "YulLiteral",
																		"src": "20887:33:14",
																		"type": "",
																		"value": "Only students can claim rewards"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20864:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20864:6:14"
																},
																"nativeSrc": "20864:57:14",
																"nodeType": "YulFunctionCall",
																"src": "20864:57:14"
															},
															"nativeSrc": "20864:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "20864:57:14"
														}
													]
												},
												"name": "store_literal_in_memory_7f3d6a9ef91016e663229cd6c6ce7239109406c063c093b722046089e796be61",
												"nativeSrc": "20747:181:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20845:6:14",
														"nodeType": "YulTypedName",
														"src": "20845:6:14",
														"type": ""
													}
												],
												"src": "20747:181:14"
											},
											{
												"body": {
													"nativeSrc": "21080:220:14",
													"nodeType": "YulBlock",
													"src": "21080:220:14",
													"statements": [
														{
															"nativeSrc": "21090:74:14",
															"nodeType": "YulAssignment",
															"src": "21090:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21156:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "21156:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21161:2:14",
																		"nodeType": "YulLiteral",
																		"src": "21161:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21097:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "21097:58:14"
																},
																"nativeSrc": "21097:67:14",
																"nodeType": "YulFunctionCall",
																"src": "21097:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21090:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21090:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21262:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "21262:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f3d6a9ef91016e663229cd6c6ce7239109406c063c093b722046089e796be61",
																	"nativeSrc": "21173:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "21173:88:14"
																},
																"nativeSrc": "21173:93:14",
																"nodeType": "YulFunctionCall",
																"src": "21173:93:14"
															},
															"nativeSrc": "21173:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "21173:93:14"
														},
														{
															"nativeSrc": "21275:19:14",
															"nodeType": "YulAssignment",
															"src": "21275:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21286:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "21286:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21291:2:14",
																		"nodeType": "YulLiteral",
																		"src": "21291:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21282:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21282:3:14"
																},
																"nativeSrc": "21282:12:14",
																"nodeType": "YulFunctionCall",
																"src": "21282:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21275:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21275:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f3d6a9ef91016e663229cd6c6ce7239109406c063c093b722046089e796be61_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20934:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21068:3:14",
														"nodeType": "YulTypedName",
														"src": "21068:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21076:3:14",
														"nodeType": "YulTypedName",
														"src": "21076:3:14",
														"type": ""
													}
												],
												"src": "20934:366:14"
											},
											{
												"body": {
													"nativeSrc": "21477:248:14",
													"nodeType": "YulBlock",
													"src": "21477:248:14",
													"statements": [
														{
															"nativeSrc": "21487:26:14",
															"nodeType": "YulAssignment",
															"src": "21487:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21499:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "21499:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21510:2:14",
																		"nodeType": "YulLiteral",
																		"src": "21510:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21495:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21495:3:14"
																},
																"nativeSrc": "21495:18:14",
																"nodeType": "YulFunctionCall",
																"src": "21495:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21487:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "21487:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21534:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "21534:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21545:1:14",
																				"nodeType": "YulLiteral",
																				"src": "21545:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21530:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "21530:3:14"
																		},
																		"nativeSrc": "21530:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21530:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21553:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "21553:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21559:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "21559:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21549:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "21549:3:14"
																		},
																		"nativeSrc": "21549:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21549:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21523:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21523:6:14"
																},
																"nativeSrc": "21523:47:14",
																"nodeType": "YulFunctionCall",
																"src": "21523:47:14"
															},
															"nativeSrc": "21523:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "21523:47:14"
														},
														{
															"nativeSrc": "21579:139:14",
															"nodeType": "YulAssignment",
															"src": "21579:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21713:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "21713:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f3d6a9ef91016e663229cd6c6ce7239109406c063c093b722046089e796be61_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21587:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "21587:124:14"
																},
																"nativeSrc": "21587:131:14",
																"nodeType": "YulFunctionCall",
																"src": "21587:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21579:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "21579:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f3d6a9ef91016e663229cd6c6ce7239109406c063c093b722046089e796be61__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21306:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21457:9:14",
														"nodeType": "YulTypedName",
														"src": "21457:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21472:4:14",
														"nodeType": "YulTypedName",
														"src": "21472:4:14",
														"type": ""
													}
												],
												"src": "21306:419:14"
											},
											{
												"body": {
													"nativeSrc": "21829:124:14",
													"nodeType": "YulBlock",
													"src": "21829:124:14",
													"statements": [
														{
															"nativeSrc": "21839:26:14",
															"nodeType": "YulAssignment",
															"src": "21839:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21851:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "21851:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21862:2:14",
																		"nodeType": "YulLiteral",
																		"src": "21862:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21847:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21847:3:14"
																},
																"nativeSrc": "21847:18:14",
																"nodeType": "YulFunctionCall",
																"src": "21847:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21839:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "21839:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21919:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "21919:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21932:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "21932:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21943:1:14",
																				"nodeType": "YulLiteral",
																				"src": "21943:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21928:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "21928:3:14"
																		},
																		"nativeSrc": "21928:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21928:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21875:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "21875:43:14"
																},
																"nativeSrc": "21875:71:14",
																"nodeType": "YulFunctionCall",
																"src": "21875:71:14"
															},
															"nativeSrc": "21875:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "21875:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "21731:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21801:9:14",
														"nodeType": "YulTypedName",
														"src": "21801:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21813:6:14",
														"nodeType": "YulTypedName",
														"src": "21813:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21824:4:14",
														"nodeType": "YulTypedName",
														"src": "21824:4:14",
														"type": ""
													}
												],
												"src": "21731:222:14"
											},
											{
												"body": {
													"nativeSrc": "22085:206:14",
													"nodeType": "YulBlock",
													"src": "22085:206:14",
													"statements": [
														{
															"nativeSrc": "22095:26:14",
															"nodeType": "YulAssignment",
															"src": "22095:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22107:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "22107:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22118:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22118:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22103:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22103:3:14"
																},
																"nativeSrc": "22103:18:14",
																"nodeType": "YulFunctionCall",
																"src": "22103:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22095:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "22095:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22175:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "22175:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22188:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22188:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22199:1:14",
																				"nodeType": "YulLiteral",
																				"src": "22199:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22184:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22184:3:14"
																		},
																		"nativeSrc": "22184:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22184:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22131:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "22131:43:14"
																},
																"nativeSrc": "22131:71:14",
																"nodeType": "YulFunctionCall",
																"src": "22131:71:14"
															},
															"nativeSrc": "22131:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "22131:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22256:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "22256:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22269:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22269:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22280:2:14",
																				"nodeType": "YulLiteral",
																				"src": "22280:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22265:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22265:3:14"
																		},
																		"nativeSrc": "22265:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22265:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "22212:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "22212:43:14"
																},
																"nativeSrc": "22212:72:14",
																"nodeType": "YulFunctionCall",
																"src": "22212:72:14"
															},
															"nativeSrc": "22212:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "22212:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "21959:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22049:9:14",
														"nodeType": "YulTypedName",
														"src": "22049:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22061:6:14",
														"nodeType": "YulTypedName",
														"src": "22061:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22069:6:14",
														"nodeType": "YulTypedName",
														"src": "22069:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22080:4:14",
														"nodeType": "YulTypedName",
														"src": "22080:4:14",
														"type": ""
													}
												],
												"src": "21959:332:14"
											},
											{
												"body": {
													"nativeSrc": "22479:371:14",
													"nodeType": "YulBlock",
													"src": "22479:371:14",
													"statements": [
														{
															"nativeSrc": "22489:27:14",
															"nodeType": "YulAssignment",
															"src": "22489:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22501:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "22501:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22512:3:14",
																		"nodeType": "YulLiteral",
																		"src": "22512:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22497:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22497:3:14"
																},
																"nativeSrc": "22497:19:14",
																"nodeType": "YulFunctionCall",
																"src": "22497:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22489:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "22489:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22570:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "22570:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22583:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22583:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22594:1:14",
																				"nodeType": "YulLiteral",
																				"src": "22594:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22579:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22579:3:14"
																		},
																		"nativeSrc": "22579:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22579:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22526:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "22526:43:14"
																},
																"nativeSrc": "22526:71:14",
																"nodeType": "YulFunctionCall",
																"src": "22526:71:14"
															},
															"nativeSrc": "22526:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "22526:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22651:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "22651:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22664:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22664:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22675:2:14",
																				"nodeType": "YulLiteral",
																				"src": "22675:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22660:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22660:3:14"
																		},
																		"nativeSrc": "22660:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22660:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22607:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "22607:43:14"
																},
																"nativeSrc": "22607:72:14",
																"nodeType": "YulFunctionCall",
																"src": "22607:72:14"
															},
															"nativeSrc": "22607:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "22607:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22733:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "22733:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22746:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22746:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22757:2:14",
																				"nodeType": "YulLiteral",
																				"src": "22757:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22742:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22742:3:14"
																		},
																		"nativeSrc": "22742:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22742:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22689:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "22689:43:14"
																},
																"nativeSrc": "22689:72:14",
																"nodeType": "YulFunctionCall",
																"src": "22689:72:14"
															},
															"nativeSrc": "22689:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "22689:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "22815:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "22815:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22828:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22828:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22839:2:14",
																				"nodeType": "YulLiteral",
																				"src": "22839:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22824:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22824:3:14"
																		},
																		"nativeSrc": "22824:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22824:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22771:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "22771:43:14"
																},
																"nativeSrc": "22771:72:14",
																"nodeType": "YulFunctionCall",
																"src": "22771:72:14"
															},
															"nativeSrc": "22771:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "22771:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "22297:553:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22427:9:14",
														"nodeType": "YulTypedName",
														"src": "22427:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "22439:6:14",
														"nodeType": "YulTypedName",
														"src": "22439:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22447:6:14",
														"nodeType": "YulTypedName",
														"src": "22447:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22455:6:14",
														"nodeType": "YulTypedName",
														"src": "22455:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22463:6:14",
														"nodeType": "YulTypedName",
														"src": "22463:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22474:4:14",
														"nodeType": "YulTypedName",
														"src": "22474:4:14",
														"type": ""
													}
												],
												"src": "22297:553:14"
											},
											{
												"body": {
													"nativeSrc": "22884:152:14",
													"nodeType": "YulBlock",
													"src": "22884:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22901:1:14",
																		"nodeType": "YulLiteral",
																		"src": "22901:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22904:77:14",
																		"nodeType": "YulLiteral",
																		"src": "22904:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22894:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "22894:6:14"
																},
																"nativeSrc": "22894:88:14",
																"nodeType": "YulFunctionCall",
																"src": "22894:88:14"
															},
															"nativeSrc": "22894:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "22894:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22998:1:14",
																		"nodeType": "YulLiteral",
																		"src": "22998:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23001:4:14",
																		"nodeType": "YulLiteral",
																		"src": "23001:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22991:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "22991:6:14"
																},
																"nativeSrc": "22991:15:14",
																"nodeType": "YulFunctionCall",
																"src": "22991:15:14"
															},
															"nativeSrc": "22991:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "22991:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23022:1:14",
																		"nodeType": "YulLiteral",
																		"src": "23022:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23025:4:14",
																		"nodeType": "YulLiteral",
																		"src": "23025:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "23015:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23015:6:14"
																},
																"nativeSrc": "23015:15:14",
																"nodeType": "YulFunctionCall",
																"src": "23015:15:14"
															},
															"nativeSrc": "23015:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "23015:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "22856:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "22856:180:14"
											},
											{
												"body": {
													"nativeSrc": "23086:147:14",
													"nodeType": "YulBlock",
													"src": "23086:147:14",
													"statements": [
														{
															"nativeSrc": "23096:25:14",
															"nodeType": "YulAssignment",
															"src": "23096:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23119:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "23119:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23101:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "23101:17:14"
																},
																"nativeSrc": "23101:20:14",
																"nodeType": "YulFunctionCall",
																"src": "23101:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "23096:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "23096:1:14"
																}
															]
														},
														{
															"nativeSrc": "23130:25:14",
															"nodeType": "YulAssignment",
															"src": "23130:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "23153:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "23153:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23135:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "23135:17:14"
																},
																"nativeSrc": "23135:20:14",
																"nodeType": "YulFunctionCall",
																"src": "23135:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "23130:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "23130:1:14"
																}
															]
														},
														{
															"nativeSrc": "23164:16:14",
															"nodeType": "YulAssignment",
															"src": "23164:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23175:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "23175:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "23178:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "23178:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23171:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23171:3:14"
																},
																"nativeSrc": "23171:9:14",
																"nodeType": "YulFunctionCall",
																"src": "23171:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "23164:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23164:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23204:22:14",
																"nodeType": "YulBlock",
																"src": "23204:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23206:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "23206:16:14"
																			},
																			"nativeSrc": "23206:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "23206:18:14"
																		},
																		"nativeSrc": "23206:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "23206:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23196:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "23196:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "23199:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23199:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23193:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "23193:2:14"
																},
																"nativeSrc": "23193:10:14",
																"nodeType": "YulFunctionCall",
																"src": "23193:10:14"
															},
															"nativeSrc": "23190:36:14",
															"nodeType": "YulIf",
															"src": "23190:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "23042:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "23073:1:14",
														"nodeType": "YulTypedName",
														"src": "23073:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "23076:1:14",
														"nodeType": "YulTypedName",
														"src": "23076:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "23082:3:14",
														"nodeType": "YulTypedName",
														"src": "23082:3:14",
														"type": ""
													}
												],
												"src": "23042:191:14"
											},
											{
												"body": {
													"nativeSrc": "23465:408:14",
													"nodeType": "YulBlock",
													"src": "23465:408:14",
													"statements": [
														{
															"nativeSrc": "23475:26:14",
															"nodeType": "YulAssignment",
															"src": "23475:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23487:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "23487:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23498:2:14",
																		"nodeType": "YulLiteral",
																		"src": "23498:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23483:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23483:3:14"
																},
																"nativeSrc": "23483:18:14",
																"nodeType": "YulFunctionCall",
																"src": "23483:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23475:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "23475:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23522:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23522:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23533:1:14",
																				"nodeType": "YulLiteral",
																				"src": "23533:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23518:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23518:3:14"
																		},
																		"nativeSrc": "23518:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23518:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23541:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "23541:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23547:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23547:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23537:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23537:3:14"
																		},
																		"nativeSrc": "23537:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23537:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23511:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23511:6:14"
																},
																"nativeSrc": "23511:47:14",
																"nodeType": "YulFunctionCall",
																"src": "23511:47:14"
															},
															"nativeSrc": "23511:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "23511:47:14"
														},
														{
															"nativeSrc": "23567:116:14",
															"nodeType": "YulAssignment",
															"src": "23567:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23669:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "23669:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "23678:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "23678:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "23575:93:14",
																	"nodeType": "YulIdentifier",
																	"src": "23575:93:14"
																},
																"nativeSrc": "23575:108:14",
																"nodeType": "YulFunctionCall",
																"src": "23575:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23567:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "23567:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23704:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23704:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23715:2:14",
																				"nodeType": "YulLiteral",
																				"src": "23715:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23700:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23700:3:14"
																		},
																		"nativeSrc": "23700:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23700:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23724:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "23724:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23730:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23730:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23720:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23720:3:14"
																		},
																		"nativeSrc": "23720:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23720:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23693:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23693:6:14"
																},
																"nativeSrc": "23693:48:14",
																"nodeType": "YulFunctionCall",
																"src": "23693:48:14"
															},
															"nativeSrc": "23693:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "23693:48:14"
														},
														{
															"nativeSrc": "23750:116:14",
															"nodeType": "YulAssignment",
															"src": "23750:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23852:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "23852:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "23861:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "23861:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "23758:93:14",
																	"nodeType": "YulIdentifier",
																	"src": "23758:93:14"
																},
																"nativeSrc": "23758:108:14",
																"nodeType": "YulFunctionCall",
																"src": "23758:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23750:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "23750:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "23239:634:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23429:9:14",
														"nodeType": "YulTypedName",
														"src": "23429:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23441:6:14",
														"nodeType": "YulTypedName",
														"src": "23441:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23449:6:14",
														"nodeType": "YulTypedName",
														"src": "23449:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23460:4:14",
														"nodeType": "YulTypedName",
														"src": "23460:4:14",
														"type": ""
													}
												],
												"src": "23239:634:14"
											},
											{
												"body": {
													"nativeSrc": "23937:40:14",
													"nodeType": "YulBlock",
													"src": "23937:40:14",
													"statements": [
														{
															"nativeSrc": "23948:22:14",
															"nodeType": "YulAssignment",
															"src": "23948:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23964:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "23964:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23958:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "23958:5:14"
																},
																"nativeSrc": "23958:12:14",
																"nodeType": "YulFunctionCall",
																"src": "23958:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "23948:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23948:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "23879:98:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23920:5:14",
														"nodeType": "YulTypedName",
														"src": "23920:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "23930:6:14",
														"nodeType": "YulTypedName",
														"src": "23930:6:14",
														"type": ""
													}
												],
												"src": "23879:98:14"
											},
											{
												"body": {
													"nativeSrc": "24078:73:14",
													"nodeType": "YulBlock",
													"src": "24078:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24095:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24095:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24100:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "24100:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24088:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24088:6:14"
																},
																"nativeSrc": "24088:19:14",
																"nodeType": "YulFunctionCall",
																"src": "24088:19:14"
															},
															"nativeSrc": "24088:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "24088:19:14"
														},
														{
															"nativeSrc": "24116:29:14",
															"nodeType": "YulAssignment",
															"src": "24116:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24135:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24135:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24140:4:14",
																		"nodeType": "YulLiteral",
																		"src": "24140:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24131:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24131:3:14"
																},
																"nativeSrc": "24131:14:14",
																"nodeType": "YulFunctionCall",
																"src": "24131:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "24116:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "24116:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "23983:168:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24050:3:14",
														"nodeType": "YulTypedName",
														"src": "24050:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "24055:6:14",
														"nodeType": "YulTypedName",
														"src": "24055:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "24066:11:14",
														"nodeType": "YulTypedName",
														"src": "24066:11:14",
														"type": ""
													}
												],
												"src": "23983:168:14"
											},
											{
												"body": {
													"nativeSrc": "24247:283:14",
													"nodeType": "YulBlock",
													"src": "24247:283:14",
													"statements": [
														{
															"nativeSrc": "24257:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "24257:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24303:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "24303:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "24271:31:14",
																	"nodeType": "YulIdentifier",
																	"src": "24271:31:14"
																},
																"nativeSrc": "24271:38:14",
																"nodeType": "YulFunctionCall",
																"src": "24271:38:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "24261:6:14",
																	"nodeType": "YulTypedName",
																	"src": "24261:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24318:77:14",
															"nodeType": "YulAssignment",
															"src": "24318:77:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24383:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24383:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24388:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "24388:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "24325:57:14",
																	"nodeType": "YulIdentifier",
																	"src": "24325:57:14"
																},
																"nativeSrc": "24325:70:14",
																"nodeType": "YulFunctionCall",
																"src": "24325:70:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24318:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24318:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24443:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "24443:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24450:4:14",
																				"nodeType": "YulLiteral",
																				"src": "24450:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24439:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24439:3:14"
																		},
																		"nativeSrc": "24439:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24439:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24457:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24457:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24462:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "24462:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "24404:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "24404:34:14"
																},
																"nativeSrc": "24404:65:14",
																"nodeType": "YulFunctionCall",
																"src": "24404:65:14"
															},
															"nativeSrc": "24404:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "24404:65:14"
														},
														{
															"nativeSrc": "24478:46:14",
															"nodeType": "YulAssignment",
															"src": "24478:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24489:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24489:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "24516:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "24516:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "24494:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "24494:21:14"
																		},
																		"nativeSrc": "24494:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24494:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24485:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24485:3:14"
																},
																"nativeSrc": "24485:39:14",
																"nodeType": "YulFunctionCall",
																"src": "24485:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24478:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24478:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "24157:373:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24228:5:14",
														"nodeType": "YulTypedName",
														"src": "24228:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24235:3:14",
														"nodeType": "YulTypedName",
														"src": "24235:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24243:3:14",
														"nodeType": "YulTypedName",
														"src": "24243:3:14",
														"type": ""
													}
												],
												"src": "24157:373:14"
											},
											{
												"body": {
													"nativeSrc": "24764:523:14",
													"nodeType": "YulBlock",
													"src": "24764:523:14",
													"statements": [
														{
															"nativeSrc": "24774:27:14",
															"nodeType": "YulAssignment",
															"src": "24774:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24786:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "24786:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24797:3:14",
																		"nodeType": "YulLiteral",
																		"src": "24797:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24782:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24782:3:14"
																},
																"nativeSrc": "24782:19:14",
																"nodeType": "YulFunctionCall",
																"src": "24782:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24774:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24774:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24855:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "24855:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24868:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "24868:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24879:1:14",
																				"nodeType": "YulLiteral",
																				"src": "24879:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24864:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24864:3:14"
																		},
																		"nativeSrc": "24864:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24864:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24811:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "24811:43:14"
																},
																"nativeSrc": "24811:71:14",
																"nodeType": "YulFunctionCall",
																"src": "24811:71:14"
															},
															"nativeSrc": "24811:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "24811:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24936:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "24936:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24949:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "24949:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24960:2:14",
																				"nodeType": "YulLiteral",
																				"src": "24960:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24945:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24945:3:14"
																		},
																		"nativeSrc": "24945:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24945:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24892:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "24892:43:14"
																},
																"nativeSrc": "24892:72:14",
																"nodeType": "YulFunctionCall",
																"src": "24892:72:14"
															},
															"nativeSrc": "24892:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "24892:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25018:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "25018:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25031:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "25031:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25042:2:14",
																				"nodeType": "YulLiteral",
																				"src": "25042:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25027:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "25027:3:14"
																		},
																		"nativeSrc": "25027:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25027:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24974:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "24974:43:14"
																},
																"nativeSrc": "24974:72:14",
																"nodeType": "YulFunctionCall",
																"src": "24974:72:14"
															},
															"nativeSrc": "24974:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "24974:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "25100:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "25100:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25113:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "25113:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25124:2:14",
																				"nodeType": "YulLiteral",
																				"src": "25124:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25109:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "25109:3:14"
																		},
																		"nativeSrc": "25109:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25109:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25056:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "25056:43:14"
																},
																"nativeSrc": "25056:72:14",
																"nodeType": "YulFunctionCall",
																"src": "25056:72:14"
															},
															"nativeSrc": "25056:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "25056:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25149:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "25149:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25160:3:14",
																				"nodeType": "YulLiteral",
																				"src": "25160:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25145:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "25145:3:14"
																		},
																		"nativeSrc": "25145:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25145:19:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25170:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "25170:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25176:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "25176:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25166:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "25166:3:14"
																		},
																		"nativeSrc": "25166:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25166:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25138:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "25138:6:14"
																},
																"nativeSrc": "25138:49:14",
																"nodeType": "YulFunctionCall",
																"src": "25138:49:14"
															},
															"nativeSrc": "25138:49:14",
															"nodeType": "YulExpressionStatement",
															"src": "25138:49:14"
														},
														{
															"nativeSrc": "25196:84:14",
															"nodeType": "YulAssignment",
															"src": "25196:84:14",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "25266:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "25266:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "25275:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "25275:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "25204:61:14",
																	"nodeType": "YulIdentifier",
																	"src": "25204:61:14"
																},
																"nativeSrc": "25204:76:14",
																"nodeType": "YulFunctionCall",
																"src": "25204:76:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25196:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "25196:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "24536:751:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24704:9:14",
														"nodeType": "YulTypedName",
														"src": "24704:9:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "24716:6:14",
														"nodeType": "YulTypedName",
														"src": "24716:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "24724:6:14",
														"nodeType": "YulTypedName",
														"src": "24724:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24732:6:14",
														"nodeType": "YulTypedName",
														"src": "24732:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24740:6:14",
														"nodeType": "YulTypedName",
														"src": "24740:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24748:6:14",
														"nodeType": "YulTypedName",
														"src": "24748:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24759:4:14",
														"nodeType": "YulTypedName",
														"src": "24759:4:14",
														"type": ""
													}
												],
												"src": "24536:751:14"
											},
											{
												"body": {
													"nativeSrc": "25355:79:14",
													"nodeType": "YulBlock",
													"src": "25355:79:14",
													"statements": [
														{
															"nativeSrc": "25365:22:14",
															"nodeType": "YulAssignment",
															"src": "25365:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "25380:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "25380:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "25374:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "25374:5:14"
																},
																"nativeSrc": "25374:13:14",
																"nodeType": "YulFunctionCall",
																"src": "25374:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "25365:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "25365:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25422:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "25422:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "25396:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "25396:25:14"
																},
																"nativeSrc": "25396:32:14",
																"nodeType": "YulFunctionCall",
																"src": "25396:32:14"
															},
															"nativeSrc": "25396:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "25396:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "25293:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "25333:6:14",
														"nodeType": "YulTypedName",
														"src": "25333:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "25341:3:14",
														"nodeType": "YulTypedName",
														"src": "25341:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "25349:5:14",
														"nodeType": "YulTypedName",
														"src": "25349:5:14",
														"type": ""
													}
												],
												"src": "25293:141:14"
											},
											{
												"body": {
													"nativeSrc": "25516:273:14",
													"nodeType": "YulBlock",
													"src": "25516:273:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "25562:83:14",
																"nodeType": "YulBlock",
																"src": "25562:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "25564:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "25564:77:14"
																			},
																			"nativeSrc": "25564:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "25564:79:14"
																		},
																		"nativeSrc": "25564:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "25564:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "25537:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "25537:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25546:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "25546:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25533:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "25533:3:14"
																		},
																		"nativeSrc": "25533:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25533:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25558:2:14",
																		"nodeType": "YulLiteral",
																		"src": "25558:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "25529:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25529:3:14"
																},
																"nativeSrc": "25529:32:14",
																"nodeType": "YulFunctionCall",
																"src": "25529:32:14"
															},
															"nativeSrc": "25526:119:14",
															"nodeType": "YulIf",
															"src": "25526:119:14"
														},
														{
															"nativeSrc": "25655:127:14",
															"nodeType": "YulBlock",
															"src": "25655:127:14",
															"statements": [
																{
																	"nativeSrc": "25670:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "25670:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25684:1:14",
																		"nodeType": "YulLiteral",
																		"src": "25684:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "25674:6:14",
																			"nodeType": "YulTypedName",
																			"src": "25674:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "25699:73:14",
																	"nodeType": "YulAssignment",
																	"src": "25699:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "25744:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "25744:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "25755:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "25755:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25740:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "25740:3:14"
																				},
																				"nativeSrc": "25740:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "25740:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "25764:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "25764:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "25709:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "25709:30:14"
																		},
																		"nativeSrc": "25709:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25709:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "25699:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "25699:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "25440:349:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25486:9:14",
														"nodeType": "YulTypedName",
														"src": "25486:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "25497:7:14",
														"nodeType": "YulTypedName",
														"src": "25497:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "25509:6:14",
														"nodeType": "YulTypedName",
														"src": "25509:6:14",
														"type": ""
													}
												],
												"src": "25440:349:14"
											},
											{
												"body": {
													"nativeSrc": "26123:725:14",
													"nodeType": "YulBlock",
													"src": "26123:725:14",
													"statements": [
														{
															"nativeSrc": "26133:27:14",
															"nodeType": "YulAssignment",
															"src": "26133:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26145:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "26145:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26156:3:14",
																		"nodeType": "YulLiteral",
																		"src": "26156:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26141:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26141:3:14"
																},
																"nativeSrc": "26141:19:14",
																"nodeType": "YulFunctionCall",
																"src": "26141:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26133:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "26133:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26214:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "26214:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26227:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "26227:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26238:1:14",
																				"nodeType": "YulLiteral",
																				"src": "26238:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26223:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "26223:3:14"
																		},
																		"nativeSrc": "26223:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "26223:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26170:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "26170:43:14"
																},
																"nativeSrc": "26170:71:14",
																"nodeType": "YulFunctionCall",
																"src": "26170:71:14"
															},
															"nativeSrc": "26170:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "26170:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "26295:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "26295:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26308:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "26308:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26319:2:14",
																				"nodeType": "YulLiteral",
																				"src": "26319:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26304:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "26304:3:14"
																		},
																		"nativeSrc": "26304:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "26304:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26251:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "26251:43:14"
																},
																"nativeSrc": "26251:72:14",
																"nodeType": "YulFunctionCall",
																"src": "26251:72:14"
															},
															"nativeSrc": "26251:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "26251:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26344:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "26344:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26355:2:14",
																				"nodeType": "YulLiteral",
																				"src": "26355:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26340:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "26340:3:14"
																		},
																		"nativeSrc": "26340:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "26340:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26364:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "26364:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26370:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "26370:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26360:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "26360:3:14"
																		},
																		"nativeSrc": "26360:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "26360:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26333:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "26333:6:14"
																},
																"nativeSrc": "26333:48:14",
																"nodeType": "YulFunctionCall",
																"src": "26333:48:14"
															},
															"nativeSrc": "26333:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "26333:48:14"
														},
														{
															"nativeSrc": "26390:116:14",
															"nodeType": "YulAssignment",
															"src": "26390:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "26492:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "26492:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "26501:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26501:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "26398:93:14",
																	"nodeType": "YulIdentifier",
																	"src": "26398:93:14"
																},
																"nativeSrc": "26398:108:14",
																"nodeType": "YulFunctionCall",
																"src": "26398:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26390:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "26390:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26527:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "26527:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26538:2:14",
																				"nodeType": "YulLiteral",
																				"src": "26538:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26523:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "26523:3:14"
																		},
																		"nativeSrc": "26523:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "26523:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26547:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "26547:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26553:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "26553:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26543:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "26543:3:14"
																		},
																		"nativeSrc": "26543:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "26543:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26516:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "26516:6:14"
																},
																"nativeSrc": "26516:48:14",
																"nodeType": "YulFunctionCall",
																"src": "26516:48:14"
															},
															"nativeSrc": "26516:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "26516:48:14"
														},
														{
															"nativeSrc": "26573:116:14",
															"nodeType": "YulAssignment",
															"src": "26573:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "26675:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "26675:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "26684:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26684:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "26581:93:14",
																	"nodeType": "YulIdentifier",
																	"src": "26581:93:14"
																},
																"nativeSrc": "26581:108:14",
																"nodeType": "YulFunctionCall",
																"src": "26581:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26573:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "26573:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26710:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "26710:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26721:3:14",
																				"nodeType": "YulLiteral",
																				"src": "26721:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26706:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "26706:3:14"
																		},
																		"nativeSrc": "26706:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "26706:19:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26731:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "26731:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26737:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "26737:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26727:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "26727:3:14"
																		},
																		"nativeSrc": "26727:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "26727:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26699:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "26699:6:14"
																},
																"nativeSrc": "26699:49:14",
																"nodeType": "YulFunctionCall",
																"src": "26699:49:14"
															},
															"nativeSrc": "26699:49:14",
															"nodeType": "YulExpressionStatement",
															"src": "26699:49:14"
														},
														{
															"nativeSrc": "26757:84:14",
															"nodeType": "YulAssignment",
															"src": "26757:84:14",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "26827:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "26827:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "26836:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26836:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "26765:61:14",
																	"nodeType": "YulIdentifier",
																	"src": "26765:61:14"
																},
																"nativeSrc": "26765:76:14",
																"nodeType": "YulFunctionCall",
																"src": "26765:76:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26757:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "26757:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "25795:1053:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26063:9:14",
														"nodeType": "YulTypedName",
														"src": "26063:9:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "26075:6:14",
														"nodeType": "YulTypedName",
														"src": "26075:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "26083:6:14",
														"nodeType": "YulTypedName",
														"src": "26083:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "26091:6:14",
														"nodeType": "YulTypedName",
														"src": "26091:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26099:6:14",
														"nodeType": "YulTypedName",
														"src": "26099:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26107:6:14",
														"nodeType": "YulTypedName",
														"src": "26107:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26118:4:14",
														"nodeType": "YulTypedName",
														"src": "26118:4:14",
														"type": ""
													}
												],
												"src": "25795:1053:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_6122524deead21d84ed31b4a09db3da08247d33ad5b6d78a8635067b970e12b2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only teachers can award credits\")\n\n    }\n\n    function abi_encode_t_stringliteral_6122524deead21d84ed31b4a09db3da08247d33ad5b6d78a8635067b970e12b2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_6122524deead21d84ed31b4a09db3da08247d33ad5b6d78a8635067b970e12b2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6122524deead21d84ed31b4a09db3da08247d33ad5b6d78a8635067b970e12b2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6122524deead21d84ed31b4a09db3da08247d33ad5b6d78a8635067b970e12b2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_7f3d6a9ef91016e663229cd6c6ce7239109406c063c093b722046089e796be61(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only students can claim rewards\")\n\n    }\n\n    function abi_encode_t_stringliteral_7f3d6a9ef91016e663229cd6c6ce7239109406c063c093b722046089e796be61_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7f3d6a9ef91016e663229cd6c6ce7239109406c063c093b722046089e796be61(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f3d6a9ef91016e663229cd6c6ce7239109406c063c093b722046089e796be61__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f3d6a9ef91016e663229cd6c6ce7239109406c063c093b722046089e796be61_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610113575f3560e01c806386e5c15a116100a0578063ae169a501161006f578063ae169a50146102ff578063d547741f1461031b578063e985e9c514610337578063f242432a14610367578063f7be43fb1461038357610113565b806386e5c15a1461027757806391d1485414610295578063a217fddf146102c5578063a22cb465146102e357610113565b80632eb2c2d6116100e75780632eb2c2d6146101d75780632f2ff15d146101f357806336568abe1461020f5780633ff3226d1461022b5780634e1273f41461024757610113565b8062fdd58e1461011757806301ffc9a7146101475780630e89341c14610177578063248a9ca3146101a7575b5f80fd5b610131600480360381019061012c9190611b8b565b6103a1565b60405161013e9190611bd8565b60405180910390f35b610161600480360381019061015c9190611c46565b6103f6565b60405161016e9190611c8b565b60405180910390f35b610191600480360381019061018c9190611ca4565b610417565b60405161019e9190611d59565b60405180910390f35b6101c160048036038101906101bc9190611dac565b6104a9565b6040516101ce9190611de6565b60405180910390f35b6101f160048036038101906101ec9190611fef565b6104c6565b005b61020d600480360381019061020891906120ba565b61056d565b005b610229600480360381019061022491906120ba565b61058f565b005b61024560048036038101906102409190611b8b565b61060a565b005b610261600480360381019061025c91906121b8565b610691565b60405161026e91906122e5565b60405180910390f35b61027f610798565b60405161028c9190611de6565b60405180910390f35b6102af60048036038101906102aa91906120ba565b6107bc565b6040516102bc9190611c8b565b60405180910390f35b6102cd610820565b6040516102da9190611de6565b60405180910390f35b6102fd60048036038101906102f8919061232f565b610826565b005b61031960048036038101906103149190611ca4565b61083c565b005b610335600480360381019061033091906120ba565b6108db565b005b610351600480360381019061034c919061236d565b6108fd565b60405161035e9190611c8b565b60405180910390f35b610381600480360381019061037c91906123ab565b61098b565b005b61038b610a32565b6040516103989190611de6565b60405180910390f35b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f61040082610a56565b80610410575061040f82610b37565b5b9050919050565b6060600280546104269061246b565b80601f01602080910402602001604051908101604052809291908181526020018280546104529061246b565b801561049d5780601f106104745761010080835404028352916020019161049d565b820191905f5260205f20905b81548152906001019060200180831161048057829003601f168201915b50505050509050919050565b5f60035f8381526020019081526020015f20600101549050919050565b5f6104cf610bb0565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610514575061051286826108fd565b155b156105585780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161054f9291906124aa565b60405180910390fd5b6105658686868686610bb7565b505050505050565b610576826104a9565b61057f81610cab565b6105898383610cbf565b50505050565b610597610bb0565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105fb576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106058282610da9565b505050565b6106347fd16e204b8a42a15ab0ea6bb8ec1ecdfbe69f38074fc865323af19efe7d9573d9336107bc565b610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066a9061251b565b60405180910390fd5b61068d825f8360405180602001604052805f815250610e93565b5050565b606081518351146106dd57815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016106d4929190612539565b60405180910390fd5b5f835167ffffffffffffffff8111156106f9576106f8611e03565b5b6040519080825280602002602001820160405280156107275781602001602082028036833780820191505090505b5090505f5b845181101561078d5761076361074b8287610f2890919063ffffffff16565b61075e8387610f3b90919063ffffffff16565b6103a1565b82828151811061077657610775612560565b5b60200260200101818152505080600101905061072c565b508091505092915050565b7fd16e204b8a42a15ab0ea6bb8ec1ecdfbe69f38074fc865323af19efe7d9573d981565b5f60035f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b610838610831610bb0565b8383610f4e565b5050565b6108667f36a5c4aaacb6b388bbd448bf11096b7dafc5652bcc9046084fd0e95b1fb0b2cc336107bc565b6108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c906125d7565b60405180910390fd5b5f6108af826110b7565b90506108bc335f836110c1565b6108d73383600160405180602001604052805f815250610e93565b5050565b6108e4826104a9565b6108ed81610cab565b6108f78383610da9565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f610994610bb0565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156109d957506109d786826108fd565b155b15610a1d5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610a149291906124aa565b60405180910390fd5b610a2a8686868686611163565b505050505050565b7f36a5c4aaacb6b388bbd448bf11096b7dafc5652bcc9046084fd0e95b1fb0b2cc81565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610b2057507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610b305750610b2f82611269565b5b9050919050565b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610ba95750610ba882610a56565b5b9050919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c27575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610c1e91906125f5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610c97575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610c8e91906125f5565b60405180910390fd5b610ca485858585856112d2565b5050505050565b610cbc81610cb7610bb0565b61137e565b50565b5f610cca83836107bc565b610d9f57600160035f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610d3c610bb0565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610da3565b5f90505b92915050565b5f610db483836107bc565b15610e89575f60035f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610e26610bb0565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610e8d565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f03575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610efa91906125f5565b60405180910390fd5b5f80610f0f85856113cf565b91509150610f205f878484876112d2565b505050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fbe575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610fb591906125f5565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110aa9190611c8b565b60405180910390a3505050565b5f600a9050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611131575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161112891906125f5565b60405180910390fd5b5f8061113d84846113cf565b9150915061115c855f848460405180602001604052805f8152506112d2565b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111d3575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111ca91906125f5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611243575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161123a91906125f5565b60405180910390fd5b5f8061124f85856113cf565b9150915061126087878484876112d2565b50505050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6112de858585856113ff565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611377575f61131a610bb0565b90506001845103611366575f6113395f86610f3b90919063ffffffff16565b90505f61134f5f86610f3b90919063ffffffff16565b905061135f83898985858961178f565b5050611375565b61137481878787878761193e565b5b505b5050505050565b61138882826107bc565b6113cb5780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016113c292919061260e565b60405180910390fd5b5050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b805182511461144957815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401611440929190612539565b60405180910390fd5b5f611452610bb0565b90505f5b835181101561164e575f6114738286610f3b90919063ffffffff16565b90505f6114898386610f3b90919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146115ac575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561155857888183856040517f03dee4c500000000000000000000000000000000000000000000000000000000815260040161154f9493929190612635565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461164157805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461163991906126a5565b925050819055505b5050806001019050611456565b506001835103611709575f61166c5f85610f3b90919063ffffffff16565b90505f6116825f85610f3b90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516116fa929190612539565b60405180910390a45050611788565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161177f9291906126d8565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611936578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016117ef95949392919061275f565b6020604051808303815f875af192505050801561182a57506040513d601f19601f8201168201806040525081019061182791906127cb565b60015b6118ab573d805f8114611858576040519150601f19603f3d011682016040523d82523d5f602084013e61185d565b606091505b505f8151036118a357846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161189a91906125f5565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461193457846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161192b91906125f5565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611ae5578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161199e9594939291906127f6565b6020604051808303815f875af19250505080156119d957506040513d601f19601f820116820180604052508101906119d691906127cb565b60015b611a5a573d805f8114611a07576040519150601f19603f3d011682016040523d82523d5f602084013e611a0c565b606091505b505f815103611a5257846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611a4991906125f5565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611ae357846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611ada91906125f5565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611b2782611afe565b9050919050565b611b3781611b1d565b8114611b41575f80fd5b50565b5f81359050611b5281611b2e565b92915050565b5f819050919050565b611b6a81611b58565b8114611b74575f80fd5b50565b5f81359050611b8581611b61565b92915050565b5f8060408385031215611ba157611ba0611af6565b5b5f611bae85828601611b44565b9250506020611bbf85828601611b77565b9150509250929050565b611bd281611b58565b82525050565b5f602082019050611beb5f830184611bc9565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c2581611bf1565b8114611c2f575f80fd5b50565b5f81359050611c4081611c1c565b92915050565b5f60208284031215611c5b57611c5a611af6565b5b5f611c6884828501611c32565b91505092915050565b5f8115159050919050565b611c8581611c71565b82525050565b5f602082019050611c9e5f830184611c7c565b92915050565b5f60208284031215611cb957611cb8611af6565b5b5f611cc684828501611b77565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611d06578082015181840152602081019050611ceb565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611d2b82611ccf565b611d358185611cd9565b9350611d45818560208601611ce9565b611d4e81611d11565b840191505092915050565b5f6020820190508181035f830152611d718184611d21565b905092915050565b5f819050919050565b611d8b81611d79565b8114611d95575f80fd5b50565b5f81359050611da681611d82565b92915050565b5f60208284031215611dc157611dc0611af6565b5b5f611dce84828501611d98565b91505092915050565b611de081611d79565b82525050565b5f602082019050611df95f830184611dd7565b92915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611e3982611d11565b810181811067ffffffffffffffff82111715611e5857611e57611e03565b5b80604052505050565b5f611e6a611aed565b9050611e768282611e30565b919050565b5f67ffffffffffffffff821115611e9557611e94611e03565b5b602082029050602081019050919050565b5f80fd5b5f611ebc611eb784611e7b565b611e61565b90508083825260208201905060208402830185811115611edf57611ede611ea6565b5b835b81811015611f085780611ef48882611b77565b845260208401935050602081019050611ee1565b5050509392505050565b5f82601f830112611f2657611f25611dff565b5b8135611f36848260208601611eaa565b91505092915050565b5f80fd5b5f67ffffffffffffffff821115611f5d57611f5c611e03565b5b611f6682611d11565b9050602081019050919050565b828183375f83830152505050565b5f611f93611f8e84611f43565b611e61565b905082815260208101848484011115611faf57611fae611f3f565b5b611fba848285611f73565b509392505050565b5f82601f830112611fd657611fd5611dff565b5b8135611fe6848260208601611f81565b91505092915050565b5f805f805f60a0868803121561200857612007611af6565b5b5f61201588828901611b44565b955050602061202688828901611b44565b945050604086013567ffffffffffffffff81111561204757612046611afa565b5b61205388828901611f12565b935050606086013567ffffffffffffffff81111561207457612073611afa565b5b61208088828901611f12565b925050608086013567ffffffffffffffff8111156120a1576120a0611afa565b5b6120ad88828901611fc2565b9150509295509295909350565b5f80604083850312156120d0576120cf611af6565b5b5f6120dd85828601611d98565b92505060206120ee85828601611b44565b9150509250929050565b5f67ffffffffffffffff82111561211257612111611e03565b5b602082029050602081019050919050565b5f612135612130846120f8565b611e61565b9050808382526020820190506020840283018581111561215857612157611ea6565b5b835b81811015612181578061216d8882611b44565b84526020840193505060208101905061215a565b5050509392505050565b5f82601f83011261219f5761219e611dff565b5b81356121af848260208601612123565b91505092915050565b5f80604083850312156121ce576121cd611af6565b5b5f83013567ffffffffffffffff8111156121eb576121ea611afa565b5b6121f78582860161218b565b925050602083013567ffffffffffffffff81111561221857612217611afa565b5b61222485828601611f12565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61226081611b58565b82525050565b5f6122718383612257565b60208301905092915050565b5f602082019050919050565b5f6122938261222e565b61229d8185612238565b93506122a883612248565b805f5b838110156122d85781516122bf8882612266565b97506122ca8361227d565b9250506001810190506122ab565b5085935050505092915050565b5f6020820190508181035f8301526122fd8184612289565b905092915050565b61230e81611c71565b8114612318575f80fd5b50565b5f8135905061232981612305565b92915050565b5f806040838503121561234557612344611af6565b5b5f61235285828601611b44565b92505060206123638582860161231b565b9150509250929050565b5f806040838503121561238357612382611af6565b5b5f61239085828601611b44565b92505060206123a185828601611b44565b9150509250929050565b5f805f805f60a086880312156123c4576123c3611af6565b5b5f6123d188828901611b44565b95505060206123e288828901611b44565b94505060406123f388828901611b77565b935050606061240488828901611b77565b925050608086013567ffffffffffffffff81111561242557612424611afa565b5b61243188828901611fc2565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061248257607f821691505b6020821081036124955761249461243e565b5b50919050565b6124a481611b1d565b82525050565b5f6040820190506124bd5f83018561249b565b6124ca602083018461249b565b9392505050565b7f4f6e6c792074656163686572732063616e2061776172642063726564697473005f82015250565b5f612505601f83611cd9565b9150612510826124d1565b602082019050919050565b5f6020820190508181035f830152612532816124f9565b9050919050565b5f60408201905061254c5f830185611bc9565b6125596020830184611bc9565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4f6e6c792073747564656e74732063616e20636c61696d2072657761726473005f82015250565b5f6125c1601f83611cd9565b91506125cc8261258d565b602082019050919050565b5f6020820190508181035f8301526125ee816125b5565b9050919050565b5f6020820190506126085f83018461249b565b92915050565b5f6040820190506126215f83018561249b565b61262e6020830184611dd7565b9392505050565b5f6080820190506126485f83018761249b565b6126556020830186611bc9565b6126626040830185611bc9565b61266f6060830184611bc9565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6126af82611b58565b91506126ba83611b58565b92508282019050808211156126d2576126d1612678565b5b92915050565b5f6040820190508181035f8301526126f08185612289565b905081810360208301526127048184612289565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6127318261270d565b61273b8185612717565b935061274b818560208601611ce9565b61275481611d11565b840191505092915050565b5f60a0820190506127725f83018861249b565b61277f602083018761249b565b61278c6040830186611bc9565b6127996060830185611bc9565b81810360808301526127ab8184612727565b90509695505050505050565b5f815190506127c581611c1c565b92915050565b5f602082840312156127e0576127df611af6565b5b5f6127ed848285016127b7565b91505092915050565b5f60a0820190506128095f83018861249b565b612816602083018761249b565b81810360408301526128288186612289565b9050818103606083015261283c8185612289565b905081810360808301526128508184612727565b9050969550505050505056fea2646970667358221220cd5fc6662917bd6cbf3a4aa67a5a72f1c2bb62328e81e139f7eb3be2f1bec3ae64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x113 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86E5C15A GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xAE169A50 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xF7BE43FB EQ PUSH2 0x383 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x86E5C15A EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E3 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x3FF3226D EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x247 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1C46 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x1DE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1FEF JUMP JUMPDEST PUSH2 0x4C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH2 0x56D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x22E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1DE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1DE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x232F JUMP JUMPDEST PUSH2 0x826 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x335 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH2 0x8DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x236D JUMP JUMPDEST PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH2 0x98B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38B PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x1DE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x400 DUP3 PUSH2 0xA56 JUMP JUMPDEST DUP1 PUSH2 0x410 JUMPI POP PUSH2 0x40F DUP3 PUSH2 0xB37 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x426 SWAP1 PUSH2 0x246B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x452 SWAP1 PUSH2 0x246B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x474 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x480 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4CF PUSH2 0xBB0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x514 JUMPI POP PUSH2 0x512 DUP7 DUP3 PUSH2 0x8FD JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x558 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP3 SWAP2 SWAP1 PUSH2 0x24AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x565 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xBB7 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x576 DUP3 PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x57F DUP2 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xCBF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x597 PUSH2 0xBB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x605 DUP3 DUP3 PUSH2 0xDA9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x634 PUSH32 0xD16E204B8A42A15AB0EA6BB8EC1ECDFBE69F38074FC865323AF19EFE7D9573D9 CALLER PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66A SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68D DUP3 PUSH0 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xE93 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x6DD JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D4 SWAP3 SWAP2 SWAP1 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6F9 JUMPI PUSH2 0x6F8 PUSH2 0x1E03 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x727 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x78D JUMPI PUSH2 0x763 PUSH2 0x74B DUP3 DUP8 PUSH2 0xF28 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x75E DUP4 DUP8 PUSH2 0xF3B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x776 JUMPI PUSH2 0x775 PUSH2 0x2560 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x72C JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xD16E204B8A42A15AB0EA6BB8EC1ECDFBE69F38074FC865323AF19EFE7D9573D9 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x838 PUSH2 0x831 PUSH2 0xBB0 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF4E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x866 PUSH32 0x36A5C4AAACB6B388BBD448BF11096B7DAFC5652BCC9046084FD0E95B1FB0B2CC CALLER PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x8A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89C SWAP1 PUSH2 0x25D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x8AF DUP3 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BC CALLER PUSH0 DUP4 PUSH2 0x10C1 JUMP JUMPDEST PUSH2 0x8D7 CALLER DUP4 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xE93 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8E4 DUP3 PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x8ED DUP2 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0x8F7 DUP4 DUP4 PUSH2 0xDA9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x994 PUSH2 0xBB0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x9D9 JUMPI POP PUSH2 0x9D7 DUP7 DUP3 PUSH2 0x8FD JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA1D JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA14 SWAP3 SWAP2 SWAP1 PUSH2 0x24AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA2A DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1163 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x36A5C4AAACB6B388BBD448BF11096B7DAFC5652BCC9046084FD0E95B1FB0B2CC DUP2 JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xB20 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xB30 JUMPI POP PUSH2 0xB2F DUP3 PUSH2 0x1269 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xBA9 JUMPI POP PUSH2 0xBA8 DUP3 PUSH2 0xA56 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC27 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1E SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC97 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8E SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA4 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x12D2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCBC DUP2 PUSH2 0xCB7 PUSH2 0xBB0 JUMP JUMPDEST PUSH2 0x137E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xCCA DUP4 DUP4 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0xD9F JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD3C PUSH2 0xBB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xDA3 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDB4 DUP4 DUP4 PUSH2 0x7BC JUMP JUMPDEST ISZERO PUSH2 0xE89 JUMPI PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE26 PUSH2 0xBB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xE8D JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF03 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFA SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xF0F DUP6 DUP6 PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xF20 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x12D2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFBE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB5 SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10AA SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1131 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1128 SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x113D DUP5 DUP5 PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x115C DUP6 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x12D2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11D3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CA SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1243 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123A SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x124F DUP6 DUP6 PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1260 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x12D2 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DE DUP6 DUP6 DUP6 DUP6 PUSH2 0x13FF JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1377 JUMPI PUSH0 PUSH2 0x131A PUSH2 0xBB0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x1366 JUMPI PUSH0 PUSH2 0x1339 PUSH0 DUP7 PUSH2 0xF3B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x134F PUSH0 DUP7 PUSH2 0xF3B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x135F DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x178F JUMP JUMPDEST POP POP PUSH2 0x1375 JUMP JUMPDEST PUSH2 0x1374 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x193E JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1388 DUP3 DUP3 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x13CB JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C2 SWAP3 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1449 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1440 SWAP3 SWAP2 SWAP1 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1452 PUSH2 0xBB0 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x164E JUMPI PUSH0 PUSH2 0x1473 DUP3 DUP7 PUSH2 0xF3B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1489 DUP4 DUP7 PUSH2 0xF3B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15AC JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1558 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1641 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1639 SWAP2 SWAP1 PUSH2 0x26A5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1456 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1709 JUMPI PUSH0 PUSH2 0x166C PUSH0 DUP6 PUSH2 0xF3B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1682 PUSH0 DUP6 PUSH2 0xF3B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x16FA SWAP3 SWAP2 SWAP1 PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1788 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x177F SWAP3 SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1936 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17EF SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x275F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x182A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1827 SWAP2 SWAP1 PUSH2 0x27CB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x18AB JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1858 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x185D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x18A3 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x189A SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1934 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192B SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1AE5 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27F6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19D9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19D6 SWAP2 SWAP1 PUSH2 0x27CB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A5A JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1A07 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1A52 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A49 SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1AE3 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ADA SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B27 DUP3 PUSH2 0x1AFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B37 DUP2 PUSH2 0x1B1D JUMP JUMPDEST DUP2 EQ PUSH2 0x1B41 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B52 DUP2 PUSH2 0x1B2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B6A DUP2 PUSH2 0x1B58 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B74 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B85 DUP2 PUSH2 0x1B61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BA1 JUMPI PUSH2 0x1BA0 PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BAE DUP6 DUP3 DUP7 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BBF DUP6 DUP3 DUP7 ADD PUSH2 0x1B77 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD2 DUP2 PUSH2 0x1B58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BEB PUSH0 DUP4 ADD DUP5 PUSH2 0x1BC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C25 DUP2 PUSH2 0x1BF1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C2F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C40 DUP2 PUSH2 0x1C1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5B JUMPI PUSH2 0x1C5A PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C68 DUP5 DUP3 DUP6 ADD PUSH2 0x1C32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C85 DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C9E PUSH0 DUP4 ADD DUP5 PUSH2 0x1C7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB9 JUMPI PUSH2 0x1CB8 PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CC6 DUP5 DUP3 DUP6 ADD PUSH2 0x1B77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D06 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CEB JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D2B DUP3 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x1D35 DUP2 DUP6 PUSH2 0x1CD9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D45 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE9 JUMP JUMPDEST PUSH2 0x1D4E DUP2 PUSH2 0x1D11 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D71 DUP2 DUP5 PUSH2 0x1D21 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D8B DUP2 PUSH2 0x1D79 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D95 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DA6 DUP2 PUSH2 0x1D82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DC1 JUMPI PUSH2 0x1DC0 PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DCE DUP5 DUP3 DUP6 ADD PUSH2 0x1D98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DE0 DUP2 PUSH2 0x1D79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DF9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1E39 DUP3 PUSH2 0x1D11 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E58 JUMPI PUSH2 0x1E57 PUSH2 0x1E03 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6A PUSH2 0x1AED JUMP JUMPDEST SWAP1 POP PUSH2 0x1E76 DUP3 DUP3 PUSH2 0x1E30 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E95 JUMPI PUSH2 0x1E94 PUSH2 0x1E03 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1EBC PUSH2 0x1EB7 DUP5 PUSH2 0x1E7B JUMP JUMPDEST PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1EDF JUMPI PUSH2 0x1EDE PUSH2 0x1EA6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F08 JUMPI DUP1 PUSH2 0x1EF4 DUP9 DUP3 PUSH2 0x1B77 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EE1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F26 JUMPI PUSH2 0x1F25 PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F36 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F5D JUMPI PUSH2 0x1F5C PUSH2 0x1E03 JUMP JUMPDEST JUMPDEST PUSH2 0x1F66 DUP3 PUSH2 0x1D11 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F93 PUSH2 0x1F8E DUP5 PUSH2 0x1F43 JUMP JUMPDEST PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1FAF JUMPI PUSH2 0x1FAE PUSH2 0x1F3F JUMP JUMPDEST JUMPDEST PUSH2 0x1FBA DUP5 DUP3 DUP6 PUSH2 0x1F73 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FD6 JUMPI PUSH2 0x1FD5 PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1FE6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F81 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2008 JUMPI PUSH2 0x2007 PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2015 DUP9 DUP3 DUP10 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2026 DUP9 DUP3 DUP10 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2047 JUMPI PUSH2 0x2046 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH2 0x2053 DUP9 DUP3 DUP10 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2074 JUMPI PUSH2 0x2073 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH2 0x2080 DUP9 DUP3 DUP10 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A1 JUMPI PUSH2 0x20A0 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH2 0x20AD DUP9 DUP3 DUP10 ADD PUSH2 0x1FC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20D0 JUMPI PUSH2 0x20CF PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20DD DUP6 DUP3 DUP7 ADD PUSH2 0x1D98 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20EE DUP6 DUP3 DUP7 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2112 JUMPI PUSH2 0x2111 PUSH2 0x1E03 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2135 PUSH2 0x2130 DUP5 PUSH2 0x20F8 JUMP JUMPDEST PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2158 JUMPI PUSH2 0x2157 PUSH2 0x1EA6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2181 JUMPI DUP1 PUSH2 0x216D DUP9 DUP3 PUSH2 0x1B44 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x215A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x219F JUMPI PUSH2 0x219E PUSH2 0x1DFF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21AF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2123 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21CE JUMPI PUSH2 0x21CD PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21EB JUMPI PUSH2 0x21EA PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH2 0x21F7 DUP6 DUP3 DUP7 ADD PUSH2 0x218B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2218 JUMPI PUSH2 0x2217 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH2 0x2224 DUP6 DUP3 DUP7 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2260 DUP2 PUSH2 0x1B58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2271 DUP4 DUP4 PUSH2 0x2257 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2293 DUP3 PUSH2 0x222E JUMP JUMPDEST PUSH2 0x229D DUP2 DUP6 PUSH2 0x2238 JUMP JUMPDEST SWAP4 POP PUSH2 0x22A8 DUP4 PUSH2 0x2248 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22D8 JUMPI DUP2 MLOAD PUSH2 0x22BF DUP9 DUP3 PUSH2 0x2266 JUMP JUMPDEST SWAP8 POP PUSH2 0x22CA DUP4 PUSH2 0x227D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x22AB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22FD DUP2 DUP5 PUSH2 0x2289 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x230E DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP2 EQ PUSH2 0x2318 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2329 DUP2 PUSH2 0x2305 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2345 JUMPI PUSH2 0x2344 PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2352 DUP6 DUP3 DUP7 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2363 DUP6 DUP3 DUP7 ADD PUSH2 0x231B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2383 JUMPI PUSH2 0x2382 PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2390 DUP6 DUP3 DUP7 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23A1 DUP6 DUP3 DUP7 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x23C4 JUMPI PUSH2 0x23C3 PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23D1 DUP9 DUP3 DUP10 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x23E2 DUP9 DUP3 DUP10 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x23F3 DUP9 DUP3 DUP10 ADD PUSH2 0x1B77 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2404 DUP9 DUP3 DUP10 ADD PUSH2 0x1B77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2425 JUMPI PUSH2 0x2424 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH2 0x2431 DUP9 DUP3 DUP10 ADD PUSH2 0x1FC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2482 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2495 JUMPI PUSH2 0x2494 PUSH2 0x243E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A4 DUP2 PUSH2 0x1B1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24BD PUSH0 DUP4 ADD DUP6 PUSH2 0x249B JUMP JUMPDEST PUSH2 0x24CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x249B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792074656163686572732063616E206177617264206372656469747300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2505 PUSH1 0x1F DUP4 PUSH2 0x1CD9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2510 DUP3 PUSH2 0x24D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2532 DUP2 PUSH2 0x24F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x254C PUSH0 DUP4 ADD DUP6 PUSH2 0x1BC9 JUMP JUMPDEST PUSH2 0x2559 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BC9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4F6E6C792073747564656E74732063616E20636C61696D207265776172647300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25C1 PUSH1 0x1F DUP4 PUSH2 0x1CD9 JUMP JUMPDEST SWAP2 POP PUSH2 0x25CC DUP3 PUSH2 0x258D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25EE DUP2 PUSH2 0x25B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2608 PUSH0 DUP4 ADD DUP5 PUSH2 0x249B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2621 PUSH0 DUP4 ADD DUP6 PUSH2 0x249B JUMP JUMPDEST PUSH2 0x262E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DD7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2648 PUSH0 DUP4 ADD DUP8 PUSH2 0x249B JUMP JUMPDEST PUSH2 0x2655 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1BC9 JUMP JUMPDEST PUSH2 0x2662 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1BC9 JUMP JUMPDEST PUSH2 0x266F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1BC9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26AF DUP3 PUSH2 0x1B58 JUMP JUMPDEST SWAP2 POP PUSH2 0x26BA DUP4 PUSH2 0x1B58 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26D2 JUMPI PUSH2 0x26D1 PUSH2 0x2678 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26F0 DUP2 DUP6 PUSH2 0x2289 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2704 DUP2 DUP5 PUSH2 0x2289 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2731 DUP3 PUSH2 0x270D JUMP JUMPDEST PUSH2 0x273B DUP2 DUP6 PUSH2 0x2717 JUMP JUMPDEST SWAP4 POP PUSH2 0x274B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE9 JUMP JUMPDEST PUSH2 0x2754 DUP2 PUSH2 0x1D11 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2772 PUSH0 DUP4 ADD DUP9 PUSH2 0x249B JUMP JUMPDEST PUSH2 0x277F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x249B JUMP JUMPDEST PUSH2 0x278C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1BC9 JUMP JUMPDEST PUSH2 0x2799 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1BC9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x27AB DUP2 DUP5 PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27C5 DUP2 PUSH2 0x1C1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27E0 JUMPI PUSH2 0x27DF PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27ED DUP5 DUP3 DUP6 ADD PUSH2 0x27B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2809 PUSH0 DUP4 ADD DUP9 PUSH2 0x249B JUMP JUMPDEST PUSH2 0x2816 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x249B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2828 DUP2 DUP7 PUSH2 0x2289 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x283C DUP2 DUP6 PUSH2 0x2289 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2850 DUP2 DUP5 PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD PUSH0 0xC6 PUSH7 0x2917BD6CBF3A4A 0xA6 PUSH27 0x5A72F1C2BB62328E81E139F7EB3BE2F1BEC3AE64736F6C63430008 AND STOP CALLER ",
							"sourceMap": "290:1706:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1690:303:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2084:103:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4014:429:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4226:136:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;737:275:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2536:552:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;388:64:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3156:144:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1074:360:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4642:138:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3367:157:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3591:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;459:64:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2247:132:4;2324:7;2350:9;:13;2360:2;2350:13;;;;;;;;;;;:22;2364:7;2350:22;;;;;;;;;;;;;;;;2343:29;;2247:132;;;;:::o;1690:303:0:-;1844:4;1886:38;1912:11;1886:25;:38::i;:::-;:99;;;;1941:44;1973:11;1941:31;:44::i;:::-;1886:99;1866:119;;1690:303;;;:::o;2084:103:4:-;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;3810:120:1:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4014:429:4:-;4208:14;4225:12;:10;:12::i;:::-;4208:29;;4259:6;4251:14;;:4;:14;;;;:49;;;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4352:6;4360:4;4323:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;4226:136:1:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;737:275:0:-;834:33;427:25;856:10;834:7;:33::i;:::-;812:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;937:29;943:7;952:1;955:6;937:29;;;;;;;;;;;;:5;:29::i;:::-;737:275;;:::o;2536:552:4:-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:3;:10;2782:8;:15;2744:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2688:121;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;2972:68;2982:30;3010:1;2982:8;:27;;:30;;;;:::i;:::-;3014:25;3037:1;3014:3;:22;;:25;;;;:::i;:::-;2972:9;:68::i;:::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2934:3;;;;;2893:158;;;;3068:13;3061:20;;;2536:552;;;;:::o;388:64:0:-;427:25;388:64;:::o;2854:136:1:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2187:49::-;2232:4;2187:49;;;:::o;3156:144:4:-;3241:52;3260:12;:10;:12::i;:::-;3274:8;3284;3241:18;:52::i;:::-;3156:144;;:::o;1074:360:0:-;1155:33;498:25;1177:10;1155:7;:33::i;:::-;1133:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;1258:18;1279:23;1293:8;1279:13;:23::i;:::-;1258:44;;1349:32;1355:10;1367:1;1370:10;1349:5;:32::i;:::-;1392:34;1398:10;1410:8;1420:1;1392:34;;;;;;;;;;;;:5;:34::i;:::-;1122:312;1074:360;:::o;4642:138:1:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3367:157:4:-;3457:4;3480:18;:27;3499:7;3480:27;;;;;;;;;;;;;;;:37;3508:8;3480:37;;;;;;;;;;;;;;;;;;;;;;;;;3473:44;;3367:157;;;;:::o;3591:351::-;3714:14;3731:12;:10;:12::i;:::-;3714:29;;3765:6;3757:14;;:4;:14;;;;:49;;;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3858:6;3866:4;3829:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3753:129;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;:::-;3704:238;3591:351;;;;;:::o;459:64:0:-;498:25;459:64;:::o;1380:305:4:-;1482:4;1532:26;1517:41;;;:11;:41;;;;:109;;;;1589:37;1574:52;;;:11;:52;;;;1517:109;:161;;;;1642:36;1666:11;1642:23;:36::i;:::-;1517:161;1498:180;;1380:305;;;:::o;2565:202:1:-;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;9015:445:4:-;9222:1;9208:16;;:2;:16;;;9204:88;;9278:1;9247:34;;;;;;;;;;;:::i;:::-;;;;;;;;9204:88;9321:1;9305:18;;:4;:18;;;9301:88;;9375:1;9346:32;;;;;;;;;;;:::i;:::-;;;;;;;;9301:88;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;3199:103:1:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;10746:346:4:-;10856:1;10842:16;;:2;:16;;;10838:88;;10912:1;10881:34;;;;;;;;;;;:::i;:::-;;;;;;;;10838:88;10936:20;10958:23;10985:29;11004:2;11008:5;10985:18;:29::i;:::-;10935:79;;;;11024:61;11059:1;11063:2;11067:3;11072:6;11080:4;11024:26;:61::i;:::-;10828:264;;10746:346;;;;:::o;4603:197:8:-;4689:11;4777:4;4772:3;4768:14;4761:4;4756:3;4752:14;4748:35;4742:42;4735:49;;4603:197;;;;:::o;4204:::-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;13268:315:4:-;13395:1;13375:22;;:8;:22;;;13371:94;;13451:1;13420:34;;;;;;;;;;;:::i;:::-;;;;;;;;13371:94;13512:8;13474:18;:25;13493:5;13474:25;;;;;;;;;;;;;;;:35;13500:8;13474:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13557:8;13535:41;;13550:5;13535:41;;;13567:8;13535:41;;;;;;:::i;:::-;;;;;;;;13268:315;;;:::o;1513:169:0:-;1577:7;1672:2;1665:9;;1513:169;;;:::o;12099:329:4:-;12194:1;12178:18;;:4;:18;;;12174:88;;12248:1;12219:32;;;;;;;;;;;:::i;:::-;;;;;;;;12174:88;12272:20;12294:23;12321:29;12340:2;12344:5;12321:18;:29::i;:::-;12271:79;;;;12360:61;12387:4;12401:1;12405:3;12410:6;12360:61;;;;;;;;;;;;:26;:61::i;:::-;12164:264;;12099:329;;;:::o;8151:463::-;8287:1;8273:16;;:2;:16;;;8269:88;;8343:1;8312:34;;;;;;;;;;;:::i;:::-;;;;;;;;8269:88;8386:1;8370:18;;:4;:18;;;8366:88;;8440:1;8411:32;;;;;;;;;;;:::i;:::-;;;;;;;;8366:88;8464:20;8486:23;8513:29;8532:2;8536:5;8513:18;:29::i;:::-;8463:79;;;;8552:55;8579:4;8585:2;8589:3;8594:6;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;763:146:11:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;7004:690:4:-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;:12::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;3432:197:1:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;16082:849:4:-;16190:23;16215;16376:4;16370:11;16360:21;;16446:1;16438:6;16431:17;16584:8;16577:4;16569:6;16565:17;16558:35;16706:4;16698:6;16694:17;16684:27;;16739:1;16731:6;16724:17;16780:8;16773:4;16765:6;16761:17;16754:35;16909:4;16901:6;16897:17;16891:4;16884:31;16082:849;;;;;:::o;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;:12::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;13761:975::-;13984:1;13967:2;:14;;;:18;13963:767;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:719;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:350;;14488:2;14465:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:350;14658:6;14652:13;14643:6;14639:2;14635:15;14628:38;14001:719;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:767;13761:975;;;;;;:::o;14924:1042::-;15172:1;15155:2;:14;;;:18;15151:809;;;15210:2;15193:43;;;15237:8;15247:4;15253:3;15258:6;15266:4;15193:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15189:761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15607:1;15590:6;:13;:18;15586:350;;15718:2;15695:26;;;;;;;;;;;:::i;:::-;;;;;;;;15586:350;15888:6;15882:13;15873:6;15869:2;15865:15;15858:38;15189:761;15362:48;;;15350:60;;;:8;:60;;;;15346:179;;15503:2;15480:26;;;;;;;;;;;:::i;:::-;;;;;;;;15346:179;15272:267;15151:809;14924:1042;;;;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:246::-;3909:1;3919:113;3933:6;3930:1;3927:13;3919:113;;;4018:1;4013:3;4009:11;4003:18;3999:1;3994:3;3990:11;3983:39;3955:2;3952:1;3948:10;3943:15;;3919:113;;;4066:1;4057:6;4052:3;4048:16;4041:27;3890:184;3828:246;;;:::o;4080:102::-;4121:6;4172:2;4168:7;4163:2;4156:5;4152:14;4148:28;4138:38;;4080:102;;;:::o;4188:377::-;4276:3;4304:39;4337:5;4304:39;:::i;:::-;4359:71;4423:6;4418:3;4359:71;:::i;:::-;4352:78;;4439:65;4497:6;4492:3;4485:4;4478:5;4474:16;4439:65;:::i;:::-;4529:29;4551:6;4529:29;:::i;:::-;4524:3;4520:39;4513:46;;4280:285;4188:377;;;;:::o;4571:313::-;4684:4;4722:2;4711:9;4707:18;4699:26;;4771:9;4765:4;4761:20;4757:1;4746:9;4742:17;4735:47;4799:78;4872:4;4863:6;4799:78;:::i;:::-;4791:86;;4571:313;;;;:::o;4890:77::-;4927:7;4956:5;4945:16;;4890:77;;;:::o;4973:122::-;5046:24;5064:5;5046:24;:::i;:::-;5039:5;5036:35;5026:63;;5085:1;5082;5075:12;5026:63;4973:122;:::o;5101:139::-;5147:5;5185:6;5172:20;5163:29;;5201:33;5228:5;5201:33;:::i;:::-;5101:139;;;;:::o;5246:329::-;5305:6;5354:2;5342:9;5333:7;5329:23;5325:32;5322:119;;;5360:79;;:::i;:::-;5322:119;5480:1;5505:53;5550:7;5541:6;5530:9;5526:22;5505:53;:::i;:::-;5495:63;;5451:117;5246:329;;;;:::o;5581:118::-;5668:24;5686:5;5668:24;:::i;:::-;5663:3;5656:37;5581:118;;:::o;5705:222::-;5798:4;5836:2;5825:9;5821:18;5813:26;;5849:71;5917:1;5906:9;5902:17;5893:6;5849:71;:::i;:::-;5705:222;;;;:::o;5933:117::-;6042:1;6039;6032:12;6056:180;6104:77;6101:1;6094:88;6201:4;6198:1;6191:15;6225:4;6222:1;6215:15;6242:281;6325:27;6347:4;6325:27;:::i;:::-;6317:6;6313:40;6455:6;6443:10;6440:22;6419:18;6407:10;6404:34;6401:62;6398:88;;;6466:18;;:::i;:::-;6398:88;6506:10;6502:2;6495:22;6285:238;6242:281;;:::o;6529:129::-;6563:6;6590:20;;:::i;:::-;6580:30;;6619:33;6647:4;6639:6;6619:33;:::i;:::-;6529:129;;;:::o;6664:311::-;6741:4;6831:18;6823:6;6820:30;6817:56;;;6853:18;;:::i;:::-;6817:56;6903:4;6895:6;6891:17;6883:25;;6963:4;6957;6953:15;6945:23;;6664:311;;;:::o;6981:117::-;7090:1;7087;7080:12;7121:710;7217:5;7242:81;7258:64;7315:6;7258:64;:::i;:::-;7242:81;:::i;:::-;7233:90;;7343:5;7372:6;7365:5;7358:21;7406:4;7399:5;7395:16;7388:23;;7459:4;7451:6;7447:17;7439:6;7435:30;7488:3;7480:6;7477:15;7474:122;;;7507:79;;:::i;:::-;7474:122;7622:6;7605:220;7639:6;7634:3;7631:15;7605:220;;;7714:3;7743:37;7776:3;7764:10;7743:37;:::i;:::-;7738:3;7731:50;7810:4;7805:3;7801:14;7794:21;;7681:144;7665:4;7660:3;7656:14;7649:21;;7605:220;;;7609:21;7223:608;;7121:710;;;;;:::o;7854:370::-;7925:5;7974:3;7967:4;7959:6;7955:17;7951:27;7941:122;;7982:79;;:::i;:::-;7941:122;8099:6;8086:20;8124:94;8214:3;8206:6;8199:4;8191:6;8187:17;8124:94;:::i;:::-;8115:103;;7931:293;7854:370;;;;:::o;8230:117::-;8339:1;8336;8329:12;8353:307;8414:4;8504:18;8496:6;8493:30;8490:56;;;8526:18;;:::i;:::-;8490:56;8564:29;8586:6;8564:29;:::i;:::-;8556:37;;8648:4;8642;8638:15;8630:23;;8353:307;;;:::o;8666:146::-;8763:6;8758:3;8753;8740:30;8804:1;8795:6;8790:3;8786:16;8779:27;8666:146;;;:::o;8818:423::-;8895:5;8920:65;8936:48;8977:6;8936:48;:::i;:::-;8920:65;:::i;:::-;8911:74;;9008:6;9001:5;8994:21;9046:4;9039:5;9035:16;9084:3;9075:6;9070:3;9066:16;9063:25;9060:112;;;9091:79;;:::i;:::-;9060:112;9181:54;9228:6;9223:3;9218;9181:54;:::i;:::-;8901:340;8818:423;;;;;:::o;9260:338::-;9315:5;9364:3;9357:4;9349:6;9345:17;9341:27;9331:122;;9372:79;;:::i;:::-;9331:122;9489:6;9476:20;9514:78;9588:3;9580:6;9573:4;9565:6;9561:17;9514:78;:::i;:::-;9505:87;;9321:277;9260:338;;;;:::o;9604:1509::-;9758:6;9766;9774;9782;9790;9839:3;9827:9;9818:7;9814:23;9810:33;9807:120;;;9846:79;;:::i;:::-;9807:120;9966:1;9991:53;10036:7;10027:6;10016:9;10012:22;9991:53;:::i;:::-;9981:63;;9937:117;10093:2;10119:53;10164:7;10155:6;10144:9;10140:22;10119:53;:::i;:::-;10109:63;;10064:118;10249:2;10238:9;10234:18;10221:32;10280:18;10272:6;10269:30;10266:117;;;10302:79;;:::i;:::-;10266:117;10407:78;10477:7;10468:6;10457:9;10453:22;10407:78;:::i;:::-;10397:88;;10192:303;10562:2;10551:9;10547:18;10534:32;10593:18;10585:6;10582:30;10579:117;;;10615:79;;:::i;:::-;10579:117;10720:78;10790:7;10781:6;10770:9;10766:22;10720:78;:::i;:::-;10710:88;;10505:303;10875:3;10864:9;10860:19;10847:33;10907:18;10899:6;10896:30;10893:117;;;10929:79;;:::i;:::-;10893:117;11034:62;11088:7;11079:6;11068:9;11064:22;11034:62;:::i;:::-;11024:72;;10818:288;9604:1509;;;;;;;;:::o;11119:474::-;11187:6;11195;11244:2;11232:9;11223:7;11219:23;11215:32;11212:119;;;11250:79;;:::i;:::-;11212:119;11370:1;11395:53;11440:7;11431:6;11420:9;11416:22;11395:53;:::i;:::-;11385:63;;11341:117;11497:2;11523:53;11568:7;11559:6;11548:9;11544:22;11523:53;:::i;:::-;11513:63;;11468:118;11119:474;;;;;:::o;11599:311::-;11676:4;11766:18;11758:6;11755:30;11752:56;;;11788:18;;:::i;:::-;11752:56;11838:4;11830:6;11826:17;11818:25;;11898:4;11892;11888:15;11880:23;;11599:311;;;:::o;11933:710::-;12029:5;12054:81;12070:64;12127:6;12070:64;:::i;:::-;12054:81;:::i;:::-;12045:90;;12155:5;12184:6;12177:5;12170:21;12218:4;12211:5;12207:16;12200:23;;12271:4;12263:6;12259:17;12251:6;12247:30;12300:3;12292:6;12289:15;12286:122;;;12319:79;;:::i;:::-;12286:122;12434:6;12417:220;12451:6;12446:3;12443:15;12417:220;;;12526:3;12555:37;12588:3;12576:10;12555:37;:::i;:::-;12550:3;12543:50;12622:4;12617:3;12613:14;12606:21;;12493:144;12477:4;12472:3;12468:14;12461:21;;12417:220;;;12421:21;12035:608;;11933:710;;;;;:::o;12666:370::-;12737:5;12786:3;12779:4;12771:6;12767:17;12763:27;12753:122;;12794:79;;:::i;:::-;12753:122;12911:6;12898:20;12936:94;13026:3;13018:6;13011:4;13003:6;12999:17;12936:94;:::i;:::-;12927:103;;12743:293;12666:370;;;;:::o;13042:894::-;13160:6;13168;13217:2;13205:9;13196:7;13192:23;13188:32;13185:119;;;13223:79;;:::i;:::-;13185:119;13371:1;13360:9;13356:17;13343:31;13401:18;13393:6;13390:30;13387:117;;;13423:79;;:::i;:::-;13387:117;13528:78;13598:7;13589:6;13578:9;13574:22;13528:78;:::i;:::-;13518:88;;13314:302;13683:2;13672:9;13668:18;13655:32;13714:18;13706:6;13703:30;13700:117;;;13736:79;;:::i;:::-;13700:117;13841:78;13911:7;13902:6;13891:9;13887:22;13841:78;:::i;:::-;13831:88;;13626:303;13042:894;;;;;:::o;13942:114::-;14009:6;14043:5;14037:12;14027:22;;13942:114;;;:::o;14062:184::-;14161:11;14195:6;14190:3;14183:19;14235:4;14230:3;14226:14;14211:29;;14062:184;;;;:::o;14252:132::-;14319:4;14342:3;14334:11;;14372:4;14367:3;14363:14;14355:22;;14252:132;;;:::o;14390:108::-;14467:24;14485:5;14467:24;:::i;:::-;14462:3;14455:37;14390:108;;:::o;14504:179::-;14573:10;14594:46;14636:3;14628:6;14594:46;:::i;:::-;14672:4;14667:3;14663:14;14649:28;;14504:179;;;;:::o;14689:113::-;14759:4;14791;14786:3;14782:14;14774:22;;14689:113;;;:::o;14838:732::-;14957:3;14986:54;15034:5;14986:54;:::i;:::-;15056:86;15135:6;15130:3;15056:86;:::i;:::-;15049:93;;15166:56;15216:5;15166:56;:::i;:::-;15245:7;15276:1;15261:284;15286:6;15283:1;15280:13;15261:284;;;15362:6;15356:13;15389:63;15448:3;15433:13;15389:63;:::i;:::-;15382:70;;15475:60;15528:6;15475:60;:::i;:::-;15465:70;;15321:224;15308:1;15305;15301:9;15296:14;;15261:284;;;15265:14;15561:3;15554:10;;14962:608;;;14838:732;;;;:::o;15576:373::-;15719:4;15757:2;15746:9;15742:18;15734:26;;15806:9;15800:4;15796:20;15792:1;15781:9;15777:17;15770:47;15834:108;15937:4;15928:6;15834:108;:::i;:::-;15826:116;;15576:373;;;;:::o;15955:116::-;16025:21;16040:5;16025:21;:::i;:::-;16018:5;16015:32;16005:60;;16061:1;16058;16051:12;16005:60;15955:116;:::o;16077:133::-;16120:5;16158:6;16145:20;16136:29;;16174:30;16198:5;16174:30;:::i;:::-;16077:133;;;;:::o;16216:468::-;16281:6;16289;16338:2;16326:9;16317:7;16313:23;16309:32;16306:119;;;16344:79;;:::i;:::-;16306:119;16464:1;16489:53;16534:7;16525:6;16514:9;16510:22;16489:53;:::i;:::-;16479:63;;16435:117;16591:2;16617:50;16659:7;16650:6;16639:9;16635:22;16617:50;:::i;:::-;16607:60;;16562:115;16216:468;;;;;:::o;16690:474::-;16758:6;16766;16815:2;16803:9;16794:7;16790:23;16786:32;16783:119;;;16821:79;;:::i;:::-;16783:119;16941:1;16966:53;17011:7;17002:6;16991:9;16987:22;16966:53;:::i;:::-;16956:63;;16912:117;17068:2;17094:53;17139:7;17130:6;17119:9;17115:22;17094:53;:::i;:::-;17084:63;;17039:118;16690:474;;;;;:::o;17170:1089::-;17274:6;17282;17290;17298;17306;17355:3;17343:9;17334:7;17330:23;17326:33;17323:120;;;17362:79;;:::i;:::-;17323:120;17482:1;17507:53;17552:7;17543:6;17532:9;17528:22;17507:53;:::i;:::-;17497:63;;17453:117;17609:2;17635:53;17680:7;17671:6;17660:9;17656:22;17635:53;:::i;:::-;17625:63;;17580:118;17737:2;17763:53;17808:7;17799:6;17788:9;17784:22;17763:53;:::i;:::-;17753:63;;17708:118;17865:2;17891:53;17936:7;17927:6;17916:9;17912:22;17891:53;:::i;:::-;17881:63;;17836:118;18021:3;18010:9;18006:19;17993:33;18053:18;18045:6;18042:30;18039:117;;;18075:79;;:::i;:::-;18039:117;18180:62;18234:7;18225:6;18214:9;18210:22;18180:62;:::i;:::-;18170:72;;17964:288;17170:1089;;;;;;;;:::o;18265:180::-;18313:77;18310:1;18303:88;18410:4;18407:1;18400:15;18434:4;18431:1;18424:15;18451:320;18495:6;18532:1;18526:4;18522:12;18512:22;;18579:1;18573:4;18569:12;18600:18;18590:81;;18656:4;18648:6;18644:17;18634:27;;18590:81;18718:2;18710:6;18707:14;18687:18;18684:38;18681:84;;18737:18;;:::i;:::-;18681:84;18502:269;18451:320;;;:::o;18777:118::-;18864:24;18882:5;18864:24;:::i;:::-;18859:3;18852:37;18777:118;;:::o;18901:332::-;19022:4;19060:2;19049:9;19045:18;19037:26;;19073:71;19141:1;19130:9;19126:17;19117:6;19073:71;:::i;:::-;19154:72;19222:2;19211:9;19207:18;19198:6;19154:72;:::i;:::-;18901:332;;;;;:::o;19239:181::-;19379:33;19375:1;19367:6;19363:14;19356:57;19239:181;:::o;19426:366::-;19568:3;19589:67;19653:2;19648:3;19589:67;:::i;:::-;19582:74;;19665:93;19754:3;19665:93;:::i;:::-;19783:2;19778:3;19774:12;19767:19;;19426:366;;;:::o;19798:419::-;19964:4;20002:2;19991:9;19987:18;19979:26;;20051:9;20045:4;20041:20;20037:1;20026:9;20022:17;20015:47;20079:131;20205:4;20079:131;:::i;:::-;20071:139;;19798:419;;;:::o;20223:332::-;20344:4;20382:2;20371:9;20367:18;20359:26;;20395:71;20463:1;20452:9;20448:17;20439:6;20395:71;:::i;:::-;20476:72;20544:2;20533:9;20529:18;20520:6;20476:72;:::i;:::-;20223:332;;;;;:::o;20561:180::-;20609:77;20606:1;20599:88;20706:4;20703:1;20696:15;20730:4;20727:1;20720:15;20747:181;20887:33;20883:1;20875:6;20871:14;20864:57;20747:181;:::o;20934:366::-;21076:3;21097:67;21161:2;21156:3;21097:67;:::i;:::-;21090:74;;21173:93;21262:3;21173:93;:::i;:::-;21291:2;21286:3;21282:12;21275:19;;20934:366;;;:::o;21306:419::-;21472:4;21510:2;21499:9;21495:18;21487:26;;21559:9;21553:4;21549:20;21545:1;21534:9;21530:17;21523:47;21587:131;21713:4;21587:131;:::i;:::-;21579:139;;21306:419;;;:::o;21731:222::-;21824:4;21862:2;21851:9;21847:18;21839:26;;21875:71;21943:1;21932:9;21928:17;21919:6;21875:71;:::i;:::-;21731:222;;;;:::o;21959:332::-;22080:4;22118:2;22107:9;22103:18;22095:26;;22131:71;22199:1;22188:9;22184:17;22175:6;22131:71;:::i;:::-;22212:72;22280:2;22269:9;22265:18;22256:6;22212:72;:::i;:::-;21959:332;;;;;:::o;22297:553::-;22474:4;22512:3;22501:9;22497:19;22489:27;;22526:71;22594:1;22583:9;22579:17;22570:6;22526:71;:::i;:::-;22607:72;22675:2;22664:9;22660:18;22651:6;22607:72;:::i;:::-;22689;22757:2;22746:9;22742:18;22733:6;22689:72;:::i;:::-;22771;22839:2;22828:9;22824:18;22815:6;22771:72;:::i;:::-;22297:553;;;;;;;:::o;22856:180::-;22904:77;22901:1;22894:88;23001:4;22998:1;22991:15;23025:4;23022:1;23015:15;23042:191;23082:3;23101:20;23119:1;23101:20;:::i;:::-;23096:25;;23135:20;23153:1;23135:20;:::i;:::-;23130:25;;23178:1;23175;23171:9;23164:16;;23199:3;23196:1;23193:10;23190:36;;;23206:18;;:::i;:::-;23190:36;23042:191;;;;:::o;23239:634::-;23460:4;23498:2;23487:9;23483:18;23475:26;;23547:9;23541:4;23537:20;23533:1;23522:9;23518:17;23511:47;23575:108;23678:4;23669:6;23575:108;:::i;:::-;23567:116;;23730:9;23724:4;23720:20;23715:2;23704:9;23700:18;23693:48;23758:108;23861:4;23852:6;23758:108;:::i;:::-;23750:116;;23239:634;;;;;:::o;23879:98::-;23930:6;23964:5;23958:12;23948:22;;23879:98;;;:::o;23983:168::-;24066:11;24100:6;24095:3;24088:19;24140:4;24135:3;24131:14;24116:29;;23983:168;;;;:::o;24157:373::-;24243:3;24271:38;24303:5;24271:38;:::i;:::-;24325:70;24388:6;24383:3;24325:70;:::i;:::-;24318:77;;24404:65;24462:6;24457:3;24450:4;24443:5;24439:16;24404:65;:::i;:::-;24494:29;24516:6;24494:29;:::i;:::-;24489:3;24485:39;24478:46;;24247:283;24157:373;;;;:::o;24536:751::-;24759:4;24797:3;24786:9;24782:19;24774:27;;24811:71;24879:1;24868:9;24864:17;24855:6;24811:71;:::i;:::-;24892:72;24960:2;24949:9;24945:18;24936:6;24892:72;:::i;:::-;24974;25042:2;25031:9;25027:18;25018:6;24974:72;:::i;:::-;25056;25124:2;25113:9;25109:18;25100:6;25056:72;:::i;:::-;25176:9;25170:4;25166:20;25160:3;25149:9;25145:19;25138:49;25204:76;25275:4;25266:6;25204:76;:::i;:::-;25196:84;;24536:751;;;;;;;;:::o;25293:141::-;25349:5;25380:6;25374:13;25365:22;;25396:32;25422:5;25396:32;:::i;:::-;25293:141;;;;:::o;25440:349::-;25509:6;25558:2;25546:9;25537:7;25533:23;25529:32;25526:119;;;25564:79;;:::i;:::-;25526:119;25684:1;25709:63;25764:7;25755:6;25744:9;25740:22;25709:63;:::i;:::-;25699:73;;25655:127;25440:349;;;;:::o;25795:1053::-;26118:4;26156:3;26145:9;26141:19;26133:27;;26170:71;26238:1;26227:9;26223:17;26214:6;26170:71;:::i;:::-;26251:72;26319:2;26308:9;26304:18;26295:6;26251:72;:::i;:::-;26370:9;26364:4;26360:20;26355:2;26344:9;26340:18;26333:48;26398:108;26501:4;26492:6;26398:108;:::i;:::-;26390:116;;26553:9;26547:4;26543:20;26538:2;26527:9;26523:18;26516:48;26581:108;26684:4;26675:6;26581:108;:::i;:::-;26573:116;;26737:9;26731:4;26727:20;26721:3;26710:9;26706:19;26699:49;26765:76;26836:4;26827:6;26765:76;:::i;:::-;26757:84;;25795:1053;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2077200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "397",
								"STUDENT_ROLE()": "435",
								"TEACHER_ROLE()": "348",
								"awardCredits(address,uint256)": "infinite",
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"claimReward(uint256)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3167",
								"isApprovedForAll(address,address)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "infinite",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"getRewardCost(uint256)": "27"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 290,
									"end": 1996,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 290,
									"end": 1996,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 290,
									"end": 1996,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 532,
									"end": 688,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 532,
									"end": 688,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 532,
									"end": 688,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 532,
									"end": 688,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 532,
									"end": 688,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 532,
									"end": 688,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 688,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 532,
									"end": 688,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 532,
									"end": 688,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 532,
									"end": 688,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 532,
									"end": 688,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH data",
									"source": 4,
									"value": "BE7838470A3C26528D43BAE23565234ED295A39BDE7B6C68AC16C023B38BF94F"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1293,
									"end": 1306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 606,
									"end": 647,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 634,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 616,
									"end": 634,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 636,
									"end": 646,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 606,
									"end": 615,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 606,
									"end": 615,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 606,
									"end": 615,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 606,
									"end": 647,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 606,
									"end": 647,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 606,
									"end": 647,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 606,
									"end": 647,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 606,
									"end": 647,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 290,
									"end": 1996,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 290,
									"end": 1996,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 10355,
									"end": 10361,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 10348,
									"end": 10361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 10282,
									"end": 10368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4226,
									"end": 4362,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 4226,
									"end": 4362,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 4313,
									"end": 4317,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4300,
									"end": 4312,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 4300,
									"end": 4312,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4300,
									"end": 4312,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4300,
									"end": 4318,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2464,
									"end": 2480,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2475,
									"end": 2479,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2464,
									"end": 2474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 2464,
									"end": 2474,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2464,
									"end": 2474,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2464,
									"end": 2480,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2464,
									"end": 2480,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2464,
									"end": 2480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2464,
									"end": 2480,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2464,
									"end": 2480,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4341,
									"end": 4345,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4347,
									"end": 4354,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4330,
									"end": 4340,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 4330,
									"end": 4340,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4330,
									"end": 4340,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4330,
									"end": 4355,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4330,
									"end": 4355,
									"modifierDepth": 1,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4226,
									"end": 4362,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4226,
									"end": 4362,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4226,
									"end": 4362,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4226,
									"end": 4362,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3875,
									"end": 3882,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3907,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3912,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3894,
									"end": 3923,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3894,
									"end": 3923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3810,
									"end": 3930,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3810,
									"end": 3930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3199,
									"end": 3302,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 3199,
									"end": 3302,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3265,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3276,
									"end": 3280,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3282,
									"end": 3294,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 3282,
									"end": 3292,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 3282,
									"end": 3292,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3282,
									"end": 3292,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3282,
									"end": 3294,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3282,
									"end": 3294,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3282,
									"end": 3294,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3282,
									"end": 3294,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 3282,
									"end": 3294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3265,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 3265,
									"end": 3275,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3265,
									"end": 3275,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3265,
									"end": 3295,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3265,
									"end": 3295,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3265,
									"end": 3295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3265,
									"end": 3295,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3265,
									"end": 3295,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3199,
									"end": 3302,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3199,
									"end": 3302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3432,
									"end": 3629,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 3432,
									"end": 3629,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3520,
									"end": 3542,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3528,
									"end": 3532,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3534,
									"end": 3541,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3520,
									"end": 3527,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 3520,
									"end": 3527,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3520,
									"end": 3527,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3520,
									"end": 3542,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3520,
									"end": 3542,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3520,
									"end": 3542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3520,
									"end": 3542,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3520,
									"end": 3542,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3515,
									"end": 3623,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 3515,
									"end": 3623,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3598,
									"end": 3605,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3607,
									"end": 3611,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH",
									"source": 1,
									"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 3565,
									"end": 3612,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3612,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3515,
									"end": 3623,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 3515,
									"end": 3623,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3629,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3629,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3629,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "72"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 14,
									"value": "72"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "79"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 14,
									"value": "79"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "85"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 14,
									"value": "85"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 14,
									"value": "53"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "90"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 14,
									"value": "90"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "53"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "98"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 14,
									"value": "98"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "102"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 14,
									"value": "102"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "103"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 14,
									"value": "103"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "104"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 14,
									"value": "104"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "105"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 14,
									"value": "105"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "109"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 14,
									"value": "109"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "111"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 14,
									"value": "111"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "113"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 14,
									"value": "113"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "114"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "115"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 14,
									"value": "115"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 14,
									"value": "114"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "116"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 14,
									"value": "116"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "120"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 14,
									"value": "120"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "121"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 14,
									"value": "121"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 14,
									"value": "123"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "125"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "123"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 14,
									"value": "125"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "126"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "127"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 14,
									"value": "127"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 14,
									"value": "126"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 14,
									"value": "63"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "132"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 14,
									"value": "132"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5592,
									"end": 5669,
									"name": "tag",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 5592,
									"end": 5669,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5629,
									"end": 5636,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5658,
									"end": 5663,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5647,
									"end": 5663,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5647,
									"end": 5663,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5592,
									"end": 5669,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5592,
									"end": 5669,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5592,
									"end": 5669,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5592,
									"end": 5669,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5675,
									"end": 5793,
									"name": "tag",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 5675,
									"end": 5793,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5762,
									"end": 5786,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "135"
								},
								{
									"begin": 5780,
									"end": 5785,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5762,
									"end": 5786,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 5762,
									"end": 5786,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5762,
									"end": 5786,
									"name": "tag",
									"source": 14,
									"value": "135"
								},
								{
									"begin": 5762,
									"end": 5786,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5757,
									"end": 5760,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5750,
									"end": 5787,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 5675,
									"end": 5793,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5675,
									"end": 5793,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5675,
									"end": 5793,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5799,
									"end": 6131,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 5799,
									"end": 6131,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5920,
									"end": 5924,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5958,
									"end": 5960,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 5947,
									"end": 5956,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5943,
									"end": 5961,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5935,
									"end": 5961,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5935,
									"end": 5961,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5971,
									"end": 6042,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "137"
								},
								{
									"begin": 6039,
									"end": 6040,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6028,
									"end": 6037,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6024,
									"end": 6041,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6015,
									"end": 6021,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 5971,
									"end": 6042,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "63"
								},
								{
									"begin": 5971,
									"end": 6042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5971,
									"end": 6042,
									"name": "tag",
									"source": 14,
									"value": "137"
								},
								{
									"begin": 5971,
									"end": 6042,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6052,
									"end": 6124,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "138"
								},
								{
									"begin": 6120,
									"end": 6122,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 6109,
									"end": 6118,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6096,
									"end": 6102,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6052,
									"end": 6124,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 6052,
									"end": 6124,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6052,
									"end": 6124,
									"name": "tag",
									"source": 14,
									"value": "138"
								},
								{
									"begin": 6052,
									"end": 6124,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5799,
									"end": 6131,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 5799,
									"end": 6131,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 5799,
									"end": 6131,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5799,
									"end": 6131,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5799,
									"end": 6131,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5799,
									"end": 6131,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 290,
									"end": 1996,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 290,
									"end": 1996,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 290,
									"end": 1996,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 290,
									"end": 1996,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 290,
									"end": 1996,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 290,
									"end": 1996,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 1996,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 290,
									"end": 1996,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 1996,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd5fc6662917bd6cbf3a4aa67a5a72f1c2bb62328e81e139f7eb3be2f1bec3ae64736f6c63430008160033",
									".code": [
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "86E5C15A"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "AE169A50"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "AE169A50"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "F7BE43FB"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "86E5C15A"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "3FF3226D"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 1996,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1690,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1690,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1690,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 737,
											"end": 1012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 737,
											"end": 1012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 388,
											"end": 452,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 388,
											"end": 452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 388,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 388,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 452,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 388,
											"end": 452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 388,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 388,
											"end": 452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 388,
											"end": 452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 388,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 452,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 388,
											"end": 452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 388,
											"end": 452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 388,
											"end": 452,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 388,
											"end": 452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 452,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1074,
											"end": 1434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1074,
											"end": 1434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 459,
											"end": 523,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 459,
											"end": 523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 459,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 459,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 459,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 459,
											"end": 523,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 459,
											"end": 523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 459,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 459,
											"end": 523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 459,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 459,
											"end": 523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 459,
											"end": 523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 459,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 459,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 459,
											"end": 523,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 459,
											"end": 523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 459,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 459,
											"end": 523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 459,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 459,
											"end": 523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 459,
											"end": 523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 459,
											"end": 523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 459,
											"end": 523,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1886,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1912,
											"end": 1923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1886,
											"end": 1924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1924,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1886,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1886,
											"end": 1985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1973,
											"end": 1984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1941,
											"end": 1985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1985,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1941,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1985,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1886,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4208,
											"end": 4222,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4225,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4225,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4251,
											"end": 4255,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4270,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4300,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 4,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4323,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4385,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4198,
											"end": 4443,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 834,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 427,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "D16E204B8A42A15AB0EA6BB8EC1ECDFBE69F38074FC865323AF19EFE7D9573D9"
										},
										{
											"begin": 856,
											"end": 866,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 834,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 834,
											"end": 867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 834,
											"end": 867,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 834,
											"end": 867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 812,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 812,
											"end": 926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 812,
											"end": 926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 812,
											"end": 926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 812,
											"end": 926,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 812,
											"end": 926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 812,
											"end": 926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 812,
											"end": 926,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 812,
											"end": 926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 812,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 812,
											"end": 926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 812,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 812,
											"end": 926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 812,
											"end": 926,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 812,
											"end": 926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 812,
											"end": 926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 812,
											"end": 926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 812,
											"end": 926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 812,
											"end": 926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 812,
											"end": 926,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 812,
											"end": 926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 812,
											"end": 926,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 812,
											"end": 926,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 812,
											"end": 926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 943,
											"end": 950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 952,
											"end": 953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 961,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 937,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 937,
											"end": 966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 937,
											"end": 966,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 937,
											"end": 966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 737,
											"end": 1012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 737,
											"end": 1012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2782,
											"end": 2790,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 4,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2744,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2852,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3017,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2972,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2953,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 388,
											"end": 452,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 388,
											"end": 452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "D16E204B8A42A15AB0EA6BB8EC1ECDFBE69F38074FC865323AF19EFE7D9573D9"
										},
										{
											"begin": 388,
											"end": 452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 388,
											"end": 452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3260,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 3260,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3274,
											"end": 3282,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3284,
											"end": 3292,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3241,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 498,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "36A5C4AAACB6B388BBD448BF11096B7DAFC5652BCC9046084FD0E95B1FB0B2CC"
										},
										{
											"begin": 1177,
											"end": 1187,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1155,
											"end": 1188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1188,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1155,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1133,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1133,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1293,
											"end": 1301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1279,
											"end": 1302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1302,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1279,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1355,
											"end": 1365,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1380,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1349,
											"end": 1381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1381,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1349,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1398,
											"end": 1408,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1418,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1421,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1392,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1392,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1426,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1392,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3506,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3516,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3728,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3731,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 3731,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3765,
											"end": 3771,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3761,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3776,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3806,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 4,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3829,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3891,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 459,
											"end": 523,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 459,
											"end": 523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 498,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "36A5C4AAACB6B388BBD448BF11096B7DAFC5652BCC9046084FD0E95B1FB0B2CC"
										},
										{
											"begin": 459,
											"end": 523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 459,
											"end": 523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1558,
											"name": "PUSH",
											"source": 4,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1528,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1589,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1585,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 1642,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9208,
											"end": 9210,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 4,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 9247,
											"end": 9281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9305,
											"end": 9309,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 4,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 9346,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 9425,
											"end": 9429,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 9398,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9015,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10842,
											"end": 10844,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10912,
											"end": 10913,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 4,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 10881,
											"end": 10915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10956,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10958,
											"end": 10981,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 11004,
											"end": 11006,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11008,
											"end": 11013,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10985,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 10985,
											"end": 11014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 11059,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11065,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11067,
											"end": 11070,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11080,
											"end": 11084,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11024,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 11024,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10746,
											"end": 11092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4290,
											"end": 4301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4373,
											"end": 4376,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4383,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4360,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4353,
											"end": 4367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4343,
											"end": 4385,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4204,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13395,
											"end": 13396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13375,
											"end": 13383,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13451,
											"end": 13452,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 4,
											"value": "CED3E10000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 13420,
											"end": 13454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13512,
											"end": 13520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13493,
											"end": 13498,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13508,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13557,
											"end": 13565,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13550,
											"end": 13555,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13567,
											"end": 13575,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 13535,
											"end": 13576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13268,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1682,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1513,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1665,
											"end": 1674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1665,
											"end": 1674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12194,
											"end": 12195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12178,
											"end": 12182,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12248,
											"end": 12249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 4,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 12219,
											"end": 12251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12272,
											"end": 12292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12294,
											"end": 12317,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 12340,
											"end": 12342,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12344,
											"end": 12349,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12321,
											"end": 12339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 12321,
											"end": 12350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 12387,
											"end": 12391,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12401,
											"end": 12402,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12405,
											"end": 12408,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12410,
											"end": 12416,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12360,
											"end": 12386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 12360,
											"end": 12421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12164,
											"end": 12428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12164,
											"end": 12428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12099,
											"end": 12428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 4,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 8312,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 8374,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 4,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 8411,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8464,
											"end": 8484,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8509,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8536,
											"end": 8541,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8513,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 8513,
											"end": 8542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 8552,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 7205,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7249,
											"end": 7251,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7281,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 7300,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 7300,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7330,
											"end": 7345,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7365,
											"end": 7375,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7378,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7421,
											"end": 7434,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7437,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 7514,
											"end": 7522,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7538,
											"end": 7543,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 7483,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 7483,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 7625,
											"end": 7633,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 7589,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7267,
											"end": 7688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7004,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16082,
											"end": 16931,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 16082,
											"end": 16931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16190,
											"end": 16213,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 16215,
											"end": 16238,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16376,
											"end": 16380,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16370,
											"end": 16381,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16381,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16446,
											"end": 16447,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 16438,
											"end": 16444,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16431,
											"end": 16448,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16584,
											"end": 16592,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16577,
											"end": 16581,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16569,
											"end": 16575,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16565,
											"end": 16582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16558,
											"end": 16593,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16706,
											"end": 16710,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16698,
											"end": 16704,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16694,
											"end": 16711,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16684,
											"end": 16711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16684,
											"end": 16711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16739,
											"end": 16740,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 16731,
											"end": 16737,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16724,
											"end": 16741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16780,
											"end": 16788,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16773,
											"end": 16777,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16765,
											"end": 16771,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16754,
											"end": 16789,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16909,
											"end": 16913,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16901,
											"end": 16907,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16897,
											"end": 16914,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16891,
											"end": 16895,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16884,
											"end": 16915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16082,
											"end": 16931,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 16082,
											"end": 16931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16082,
											"end": 16931,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 16082,
											"end": 16931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16082,
											"end": 16931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16082,
											"end": 16931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5275,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5292,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 4,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5315,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 5407,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5407,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5454,
											"end": 5464,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5537,
											"end": 5550,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5553,
											"end": 5559,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5553,
											"end": 5581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5600,
											"end": 5604,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5638,
											"end": 5657,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5672,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5715,
											"end": 5720,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5701,
											"end": 5712,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5795,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5797,
											"end": 5802,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 4,
											"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 5751,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 5954,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 6016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6082,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 6070,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6182,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6179,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6218,
											"end": 6231,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 6260,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6240,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6234,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 4,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 6281,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 4,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 6362,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5251,
											"end": 6425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13761,
											"end": 14736,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 13761,
											"end": 14736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 13967,
											"end": 13985,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 13963,
											"end": 14730,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13963,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 13963,
											"end": 14730,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 4,
											"value": "F23A6E61"
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14377,
											"end": 14378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14366,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14360,
											"end": 14373,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14356,
											"end": 14706,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 14356,
											"end": 14706,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14488,
											"end": 14490,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "PUSH",
											"source": 4,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 14465,
											"end": 14491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14356,
											"end": 14706,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 14356,
											"end": 14706,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14658,
											"end": 14664,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14652,
											"end": 14665,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14643,
											"end": 14649,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14639,
											"end": 14641,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14635,
											"end": 14650,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14628,
											"end": 14666,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 4,
											"value": "F23A6E61"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14133,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14273,
											"end": 14275,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 4,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 14250,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14077,
											"end": 14309,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13963,
											"end": 14730,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 13963,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13761,
											"end": 14736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13761,
											"end": 14736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13761,
											"end": 14736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13761,
											"end": 14736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13761,
											"end": 14736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13761,
											"end": 14736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13761,
											"end": 14736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14924,
											"end": 15966,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 14924,
											"end": 15966,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15172,
											"end": 15173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15155,
											"end": 15157,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15155,
											"end": 15169,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15155,
											"end": 15169,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15155,
											"end": 15169,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 15151,
											"end": 15960,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15151,
											"end": 15960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 15151,
											"end": 15960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15210,
											"end": 15212,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15236,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15193,
											"end": 15236,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15236,
											"name": "PUSH",
											"source": 4,
											"value": "BC197C81"
										},
										{
											"begin": 15237,
											"end": 15245,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 15247,
											"end": 15251,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 15253,
											"end": 15256,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 15258,
											"end": 15264,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 15266,
											"end": 15270,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 15193,
											"end": 15271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 15193,
											"end": 15271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15607,
											"end": 15608,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15590,
											"end": 15596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15590,
											"end": 15603,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15590,
											"end": 15608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15586,
											"end": 15936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 15586,
											"end": 15936,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15718,
											"end": 15720,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "PUSH",
											"source": 4,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 15695,
											"end": 15721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15586,
											"end": 15936,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 15586,
											"end": 15936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15888,
											"end": 15894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15882,
											"end": 15895,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15873,
											"end": 15879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15869,
											"end": 15871,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15865,
											"end": 15880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15858,
											"end": 15896,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15362,
											"end": 15410,
											"name": "PUSH",
											"source": 4,
											"value": "BC197C81"
										},
										{
											"begin": 15362,
											"end": 15410,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 15362,
											"end": 15410,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 15350,
											"end": 15410,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15350,
											"end": 15410,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15350,
											"end": 15410,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15350,
											"end": 15358,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15350,
											"end": 15410,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15350,
											"end": 15410,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15350,
											"end": 15410,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15350,
											"end": 15410,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 15346,
											"end": 15525,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15503,
											"end": 15505,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "PUSH",
											"source": 4,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 15480,
											"end": 15506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15525,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 15346,
											"end": 15525,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15272,
											"end": 15539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15151,
											"end": 15960,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 15151,
											"end": 15960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14924,
											"end": 15966,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14924,
											"end": 15966,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14924,
											"end": 15966,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14924,
											"end": 15966,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14924,
											"end": 15966,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14924,
											"end": 15966,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14924,
											"end": 15966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 3327,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3213,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3548,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3653,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 3910,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3933,
											"end": 3939,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3930,
											"end": 3931,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3927,
											"end": 3940,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4016,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4009,
											"end": 4020,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4003,
											"end": 4021,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3999,
											"end": 4000,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 4022,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3955,
											"end": 3957,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3953,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3948,
											"end": 3958,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "tag",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4063,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4052,
											"end": 4055,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4048,
											"end": 4064,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4068,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3828,
											"end": 4074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4121,
											"end": 4127,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4174,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4163,
											"end": 4165,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4156,
											"end": 4161,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4152,
											"end": 4166,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4148,
											"end": 4176,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4138,
											"end": 4176,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4138,
											"end": 4176,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4080,
											"end": 4182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 4337,
											"end": 4342,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 4304,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 4359,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "tag",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4352,
											"end": 4430,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4352,
											"end": 4430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 4497,
											"end": 4503,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4492,
											"end": 4495,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4483,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4474,
											"end": 4490,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 4439,
											"end": 4504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 4529,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "tag",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4524,
											"end": 4527,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4520,
											"end": 4559,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4513,
											"end": 4559,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4513,
											"end": 4559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4280,
											"end": 4565,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4188,
											"end": 4565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4688,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4724,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4771,
											"end": 4780,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4742,
											"end": 4759,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4735,
											"end": 4782,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 4872,
											"end": 4876,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4863,
											"end": 4869,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 4799,
											"end": 4877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4791,
											"end": 4877,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4791,
											"end": 4877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 4967,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 4890,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4927,
											"end": 4934,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4956,
											"end": 4961,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 4961,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 4961,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 4967,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 4967,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 4967,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 4967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4973,
											"end": 5095,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 4973,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5046,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 5064,
											"end": 5069,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5046,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 5046,
											"end": 5070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5046,
											"end": 5070,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 5046,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5039,
											"end": 5044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5036,
											"end": 5071,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 5026,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 5026,
											"end": 5089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5085,
											"end": 5086,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5082,
											"end": 5083,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5026,
											"end": 5089,
											"name": "tag",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 5026,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4973,
											"end": 5095,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4973,
											"end": 5095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5101,
											"end": 5240,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 5101,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5147,
											"end": 5152,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5185,
											"end": 5191,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5172,
											"end": 5192,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5163,
											"end": 5192,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5163,
											"end": 5192,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5201,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 5228,
											"end": 5233,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5201,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 5201,
											"end": 5234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5201,
											"end": 5234,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 5201,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5101,
											"end": 5240,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5101,
											"end": 5240,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5101,
											"end": 5240,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5101,
											"end": 5240,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5101,
											"end": 5240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5246,
											"end": 5575,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 5246,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5305,
											"end": 5311,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5356,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5342,
											"end": 5351,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5333,
											"end": 5340,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5329,
											"end": 5352,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5325,
											"end": 5357,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5322,
											"end": 5441,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5322,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 5322,
											"end": 5441,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5360,
											"end": 5439,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 5360,
											"end": 5439,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 5360,
											"end": 5439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5360,
											"end": 5439,
											"name": "tag",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 5360,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5322,
											"end": 5441,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 5322,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5480,
											"end": 5481,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5505,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 5550,
											"end": 5557,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5541,
											"end": 5547,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5530,
											"end": 5539,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5526,
											"end": 5548,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5505,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 5505,
											"end": 5558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5505,
											"end": 5558,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 5505,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5495,
											"end": 5558,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5495,
											"end": 5558,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5451,
											"end": 5568,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5246,
											"end": 5575,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5246,
											"end": 5575,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5246,
											"end": 5575,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5246,
											"end": 5575,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5246,
											"end": 5575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5581,
											"end": 5699,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 5581,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 5686,
											"end": 5691,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 5668,
											"end": 5692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5692,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 5668,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5663,
											"end": 5666,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5656,
											"end": 5693,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5581,
											"end": 5699,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5581,
											"end": 5699,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5581,
											"end": 5699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5705,
											"end": 5927,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 5705,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5838,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5825,
											"end": 5834,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5821,
											"end": 5839,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5813,
											"end": 5839,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5813,
											"end": 5839,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5849,
											"end": 5920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 5917,
											"end": 5918,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5906,
											"end": 5915,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5893,
											"end": 5899,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5849,
											"end": 5920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 5849,
											"end": 5920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5849,
											"end": 5920,
											"name": "tag",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 5849,
											"end": 5920,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5705,
											"end": 5927,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5705,
											"end": 5927,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5705,
											"end": 5927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5705,
											"end": 5927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5705,
											"end": 5927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5933,
											"end": 6050,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 5933,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6042,
											"end": 6043,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6039,
											"end": 6040,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6032,
											"end": 6044,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6056,
											"end": 6236,
											"name": "tag",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 6056,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6104,
											"end": 6181,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6182,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6201,
											"end": 6205,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 6198,
											"end": 6199,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6191,
											"end": 6206,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6229,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6222,
											"end": 6223,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6215,
											"end": 6230,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6242,
											"end": 6523,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 6242,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 6325,
											"end": 6352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6352,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 6325,
											"end": 6352,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6317,
											"end": 6323,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6313,
											"end": 6353,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6455,
											"end": 6461,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6443,
											"end": 6453,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6440,
											"end": 6462,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6419,
											"end": 6437,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6407,
											"end": 6417,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6404,
											"end": 6438,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6401,
											"end": 6463,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 6398,
											"end": 6486,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6398,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 6398,
											"end": 6486,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 6466,
											"end": 6484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6398,
											"end": 6486,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 6398,
											"end": 6486,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6506,
											"end": 6516,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6504,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6285,
											"end": 6523,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6242,
											"end": 6523,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6242,
											"end": 6523,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6242,
											"end": 6523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6529,
											"end": 6658,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 6529,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6563,
											"end": 6569,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6590,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 6590,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 6590,
											"end": 6610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6590,
											"end": 6610,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 6590,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6580,
											"end": 6610,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6580,
											"end": 6610,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6619,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 6647,
											"end": 6651,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6639,
											"end": 6645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6619,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 6619,
											"end": 6652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6619,
											"end": 6652,
											"name": "tag",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 6619,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6529,
											"end": 6658,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6529,
											"end": 6658,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6529,
											"end": 6658,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6529,
											"end": 6658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6664,
											"end": 6975,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 6664,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6741,
											"end": 6745,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6823,
											"end": 6829,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6817,
											"end": 6873,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6817,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 6817,
											"end": 6873,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6853,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 6853,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 6853,
											"end": 6871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6853,
											"end": 6871,
											"name": "tag",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 6853,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6817,
											"end": 6873,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 6817,
											"end": 6873,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6903,
											"end": 6907,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6895,
											"end": 6901,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6891,
											"end": 6908,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6883,
											"end": 6908,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6883,
											"end": 6908,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6963,
											"end": 6967,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6957,
											"end": 6961,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6953,
											"end": 6968,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6945,
											"end": 6968,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6945,
											"end": 6968,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6664,
											"end": 6975,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6664,
											"end": 6975,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6664,
											"end": 6975,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6664,
											"end": 6975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6981,
											"end": 7098,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 6981,
											"end": 7098,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7090,
											"end": 7091,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7088,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7080,
											"end": 7092,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7121,
											"end": 7831,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 7121,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7217,
											"end": 7222,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7242,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 7258,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 7315,
											"end": 7321,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7258,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 7258,
											"end": 7322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7258,
											"end": 7322,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 7258,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7242,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 7242,
											"end": 7323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7242,
											"end": 7323,
											"name": "tag",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 7242,
											"end": 7323,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7233,
											"end": 7323,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7233,
											"end": 7323,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7343,
											"end": 7348,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7372,
											"end": 7378,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7358,
											"end": 7379,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7406,
											"end": 7410,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7399,
											"end": 7404,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7395,
											"end": 7411,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7388,
											"end": 7411,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7388,
											"end": 7411,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7459,
											"end": 7463,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7451,
											"end": 7457,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7447,
											"end": 7464,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7439,
											"end": 7445,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7435,
											"end": 7465,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7488,
											"end": 7491,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7480,
											"end": 7486,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7477,
											"end": 7492,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7474,
											"end": 7596,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7474,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 7474,
											"end": 7596,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7507,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 7507,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 7507,
											"end": 7586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7507,
											"end": 7586,
											"name": "tag",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 7507,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7474,
											"end": 7596,
											"name": "tag",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 7474,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7622,
											"end": 7628,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7605,
											"end": 7825,
											"name": "tag",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 7605,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7639,
											"end": 7645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7634,
											"end": 7637,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7631,
											"end": 7646,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 7605,
											"end": 7825,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7605,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 7605,
											"end": 7825,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7714,
											"end": 7717,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7743,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 7776,
											"end": 7779,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 7764,
											"end": 7774,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7743,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 7743,
											"end": 7780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7743,
											"end": 7780,
											"name": "tag",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 7743,
											"end": 7780,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7738,
											"end": 7741,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7731,
											"end": 7781,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7810,
											"end": 7814,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7805,
											"end": 7808,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7801,
											"end": 7815,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7794,
											"end": 7815,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7794,
											"end": 7815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7681,
											"end": 7825,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7665,
											"end": 7669,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7660,
											"end": 7663,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7656,
											"end": 7670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7670,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7670,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7605,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 7605,
											"end": 7825,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7605,
											"end": 7825,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 7605,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7609,
											"end": 7630,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7223,
											"end": 7831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7223,
											"end": 7831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7121,
											"end": 7831,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7121,
											"end": 7831,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7121,
											"end": 7831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7121,
											"end": 7831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7121,
											"end": 7831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7121,
											"end": 7831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7854,
											"end": 8224,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 7854,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7925,
											"end": 7930,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7977,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7967,
											"end": 7971,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 7959,
											"end": 7965,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7955,
											"end": 7972,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7951,
											"end": 7978,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7941,
											"end": 8063,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 7941,
											"end": 8063,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7982,
											"end": 8061,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 7982,
											"end": 8061,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 7982,
											"end": 8061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7982,
											"end": 8061,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 7982,
											"end": 8061,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7941,
											"end": 8063,
											"name": "tag",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 7941,
											"end": 8063,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8099,
											"end": 8105,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8086,
											"end": 8106,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 8124,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 8214,
											"end": 8217,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8206,
											"end": 8212,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8199,
											"end": 8203,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8191,
											"end": 8197,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8187,
											"end": 8204,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8124,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 8124,
											"end": 8218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8124,
											"end": 8218,
											"name": "tag",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 8124,
											"end": 8218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8115,
											"end": 8218,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8115,
											"end": 8218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7931,
											"end": 8224,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7854,
											"end": 8224,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7854,
											"end": 8224,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7854,
											"end": 8224,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7854,
											"end": 8224,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7854,
											"end": 8224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8230,
											"end": 8347,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 8230,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8339,
											"end": 8340,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8329,
											"end": 8341,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8353,
											"end": 8660,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 8353,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8414,
											"end": 8418,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8504,
											"end": 8522,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8496,
											"end": 8502,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8493,
											"end": 8523,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8490,
											"end": 8546,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8490,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 8490,
											"end": 8546,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8526,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 8526,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 8526,
											"end": 8544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8526,
											"end": 8544,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 8526,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8490,
											"end": 8546,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 8490,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8564,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 8586,
											"end": 8592,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8564,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 8564,
											"end": 8593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8564,
											"end": 8593,
											"name": "tag",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 8564,
											"end": 8593,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8556,
											"end": 8593,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8556,
											"end": 8593,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8648,
											"end": 8652,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8642,
											"end": 8646,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8638,
											"end": 8653,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8630,
											"end": 8653,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8630,
											"end": 8653,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8353,
											"end": 8660,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8353,
											"end": 8660,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8353,
											"end": 8660,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8353,
											"end": 8660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8666,
											"end": 8812,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 8666,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8763,
											"end": 8769,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8758,
											"end": 8761,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8753,
											"end": 8756,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8740,
											"end": 8770,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 8804,
											"end": 8805,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8795,
											"end": 8801,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8790,
											"end": 8793,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8786,
											"end": 8802,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8666,
											"end": 8812,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8666,
											"end": 8812,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8666,
											"end": 8812,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8666,
											"end": 8812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8818,
											"end": 9241,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 8818,
											"end": 9241,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8895,
											"end": 8900,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8920,
											"end": 8985,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 8936,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 8977,
											"end": 8983,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8936,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 8936,
											"end": 8984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8936,
											"end": 8984,
											"name": "tag",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 8936,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8920,
											"end": 8985,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 8920,
											"end": 8985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8920,
											"end": 8985,
											"name": "tag",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 8920,
											"end": 8985,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8911,
											"end": 8985,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8911,
											"end": 8985,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9008,
											"end": 9014,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9001,
											"end": 9006,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8994,
											"end": 9015,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9046,
											"end": 9050,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9039,
											"end": 9044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9035,
											"end": 9051,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9084,
											"end": 9087,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9075,
											"end": 9081,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9070,
											"end": 9073,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9066,
											"end": 9082,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9063,
											"end": 9088,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9060,
											"end": 9172,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9060,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 9060,
											"end": 9172,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9091,
											"end": 9170,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 9091,
											"end": 9170,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 9091,
											"end": 9170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9091,
											"end": 9170,
											"name": "tag",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 9091,
											"end": 9170,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9060,
											"end": 9172,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 9060,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9181,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 9228,
											"end": 9234,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9223,
											"end": 9226,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9218,
											"end": 9221,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9181,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 9181,
											"end": 9235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9181,
											"end": 9235,
											"name": "tag",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 9181,
											"end": 9235,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8901,
											"end": 9241,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8818,
											"end": 9241,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8818,
											"end": 9241,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8818,
											"end": 9241,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8818,
											"end": 9241,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8818,
											"end": 9241,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8818,
											"end": 9241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9260,
											"end": 9598,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 9260,
											"end": 9598,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9315,
											"end": 9320,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9364,
											"end": 9367,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9357,
											"end": 9361,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 9349,
											"end": 9355,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9345,
											"end": 9362,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9341,
											"end": 9368,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9331,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 9331,
											"end": 9453,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9372,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 9372,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 9372,
											"end": 9451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9372,
											"end": 9451,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 9372,
											"end": 9451,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9331,
											"end": 9453,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 9331,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9489,
											"end": 9495,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9476,
											"end": 9496,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 9514,
											"end": 9592,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 9588,
											"end": 9591,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9580,
											"end": 9586,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9573,
											"end": 9577,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9565,
											"end": 9571,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9561,
											"end": 9578,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9514,
											"end": 9592,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 9514,
											"end": 9592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9514,
											"end": 9592,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 9514,
											"end": 9592,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9505,
											"end": 9592,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9505,
											"end": 9592,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9321,
											"end": 9598,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9260,
											"end": 9598,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9260,
											"end": 9598,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9260,
											"end": 9598,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9260,
											"end": 9598,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9260,
											"end": 9598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 11113,
											"name": "tag",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 9604,
											"end": 11113,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9758,
											"end": 9764,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9766,
											"end": 9772,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9774,
											"end": 9780,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9782,
											"end": 9788,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9790,
											"end": 9796,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9839,
											"end": 9842,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 9827,
											"end": 9836,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9818,
											"end": 9825,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 9814,
											"end": 9837,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9810,
											"end": 9843,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9807,
											"end": 9927,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9807,
											"end": 9927,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 9807,
											"end": 9927,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9846,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 9846,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 9846,
											"end": 9925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9846,
											"end": 9925,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 9846,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9807,
											"end": 9927,
											"name": "tag",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 9807,
											"end": 9927,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9966,
											"end": 9967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9991,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 10036,
											"end": 10043,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10027,
											"end": 10033,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10016,
											"end": 10025,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10012,
											"end": 10034,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9991,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 9991,
											"end": 10044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9991,
											"end": 10044,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 9991,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9981,
											"end": 10044,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 9981,
											"end": 10044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9937,
											"end": 10054,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10093,
											"end": 10095,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10119,
											"end": 10172,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 10164,
											"end": 10171,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10155,
											"end": 10161,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10144,
											"end": 10153,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10140,
											"end": 10162,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10119,
											"end": 10172,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 10119,
											"end": 10172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10119,
											"end": 10172,
											"name": "tag",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 10119,
											"end": 10172,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10109,
											"end": 10172,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 10109,
											"end": 10172,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10064,
											"end": 10182,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10249,
											"end": 10251,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10238,
											"end": 10247,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10234,
											"end": 10252,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10221,
											"end": 10253,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 10280,
											"end": 10298,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10272,
											"end": 10278,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10269,
											"end": 10299,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10266,
											"end": 10383,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10266,
											"end": 10383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 10266,
											"end": 10383,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10302,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 10302,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 10302,
											"end": 10381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10302,
											"end": 10381,
											"name": "tag",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 10302,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10266,
											"end": 10383,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 10266,
											"end": 10383,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 10477,
											"end": 10484,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10468,
											"end": 10474,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10457,
											"end": 10466,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10453,
											"end": 10475,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 10407,
											"end": 10485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10485,
											"name": "tag",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 10407,
											"end": 10485,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10397,
											"end": 10485,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10397,
											"end": 10485,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10192,
											"end": 10495,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10562,
											"end": 10564,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10551,
											"end": 10560,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10547,
											"end": 10565,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10566,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 10593,
											"end": 10611,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10585,
											"end": 10591,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10582,
											"end": 10612,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10579,
											"end": 10696,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10579,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 10579,
											"end": 10696,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10615,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 10615,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 10615,
											"end": 10694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10615,
											"end": 10694,
											"name": "tag",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 10615,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10579,
											"end": 10696,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 10579,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10720,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 10790,
											"end": 10797,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10781,
											"end": 10787,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10770,
											"end": 10779,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10766,
											"end": 10788,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10720,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 10720,
											"end": 10798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10720,
											"end": 10798,
											"name": "tag",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 10720,
											"end": 10798,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10710,
											"end": 10798,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10710,
											"end": 10798,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10505,
											"end": 10808,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10875,
											"end": 10878,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10860,
											"end": 10879,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10847,
											"end": 10880,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10899,
											"end": 10905,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10896,
											"end": 10926,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10893,
											"end": 11010,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10893,
											"end": 11010,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 10893,
											"end": 11010,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10929,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 10929,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 10929,
											"end": 11008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10929,
											"end": 11008,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 10929,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10893,
											"end": 11010,
											"name": "tag",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 10893,
											"end": 11010,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11034,
											"end": 11096,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 11088,
											"end": 11095,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11079,
											"end": 11085,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11068,
											"end": 11077,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 11064,
											"end": 11086,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11034,
											"end": 11096,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 11034,
											"end": 11096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11034,
											"end": 11096,
											"name": "tag",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 11034,
											"end": 11096,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11024,
											"end": 11096,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11024,
											"end": 11096,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10818,
											"end": 11106,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 11113,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 11113,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 11113,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 11113,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 11113,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 11113,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 11113,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 11113,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 11113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11119,
											"end": 11593,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 11119,
											"end": 11593,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11187,
											"end": 11193,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11195,
											"end": 11201,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11244,
											"end": 11246,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11232,
											"end": 11241,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11223,
											"end": 11230,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11219,
											"end": 11242,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11215,
											"end": 11247,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11212,
											"end": 11331,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11212,
											"end": 11331,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 11212,
											"end": 11331,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11250,
											"end": 11329,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 11250,
											"end": 11329,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 11250,
											"end": 11329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11250,
											"end": 11329,
											"name": "tag",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 11250,
											"end": 11329,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11212,
											"end": 11331,
											"name": "tag",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 11212,
											"end": 11331,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11370,
											"end": 11371,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11395,
											"end": 11448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 11440,
											"end": 11447,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11431,
											"end": 11437,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11420,
											"end": 11429,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11416,
											"end": 11438,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11395,
											"end": 11448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 11395,
											"end": 11448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11395,
											"end": 11448,
											"name": "tag",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 11395,
											"end": 11448,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11385,
											"end": 11448,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11385,
											"end": 11448,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11341,
											"end": 11458,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11497,
											"end": 11499,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11523,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 11568,
											"end": 11575,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11559,
											"end": 11565,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11548,
											"end": 11557,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11544,
											"end": 11566,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11523,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 11523,
											"end": 11576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11523,
											"end": 11576,
											"name": "tag",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 11523,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11513,
											"end": 11576,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11513,
											"end": 11576,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11468,
											"end": 11586,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11119,
											"end": 11593,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11119,
											"end": 11593,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11119,
											"end": 11593,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11119,
											"end": 11593,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11119,
											"end": 11593,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11119,
											"end": 11593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11599,
											"end": 11910,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 11599,
											"end": 11910,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11676,
											"end": 11680,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11766,
											"end": 11784,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11758,
											"end": 11764,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11755,
											"end": 11785,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11752,
											"end": 11808,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11752,
											"end": 11808,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 11752,
											"end": 11808,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11788,
											"end": 11806,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 11788,
											"end": 11806,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 11788,
											"end": 11806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11788,
											"end": 11806,
											"name": "tag",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 11788,
											"end": 11806,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11752,
											"end": 11808,
											"name": "tag",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 11752,
											"end": 11808,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11838,
											"end": 11842,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11830,
											"end": 11836,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11826,
											"end": 11843,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 11818,
											"end": 11843,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11818,
											"end": 11843,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11902,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11892,
											"end": 11896,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11888,
											"end": 11903,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11880,
											"end": 11903,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11880,
											"end": 11903,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11599,
											"end": 11910,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11599,
											"end": 11910,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11599,
											"end": 11910,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11599,
											"end": 11910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11933,
											"end": 12643,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 11933,
											"end": 12643,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12029,
											"end": 12034,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12054,
											"end": 12135,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 12070,
											"end": 12134,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 12127,
											"end": 12133,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12070,
											"end": 12134,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 12070,
											"end": 12134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12070,
											"end": 12134,
											"name": "tag",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 12070,
											"end": 12134,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12054,
											"end": 12135,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 12054,
											"end": 12135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12054,
											"end": 12135,
											"name": "tag",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 12054,
											"end": 12135,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12045,
											"end": 12135,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12045,
											"end": 12135,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12155,
											"end": 12160,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12184,
											"end": 12190,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12177,
											"end": 12182,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12170,
											"end": 12191,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12218,
											"end": 12222,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12211,
											"end": 12216,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12207,
											"end": 12223,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12200,
											"end": 12223,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12200,
											"end": 12223,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12271,
											"end": 12275,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12263,
											"end": 12269,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12259,
											"end": 12276,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 12251,
											"end": 12257,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12247,
											"end": 12277,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12300,
											"end": 12303,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12292,
											"end": 12298,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12289,
											"end": 12304,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12286,
											"end": 12408,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12286,
											"end": 12408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 12286,
											"end": 12408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12319,
											"end": 12398,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 12319,
											"end": 12398,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 12319,
											"end": 12398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12319,
											"end": 12398,
											"name": "tag",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 12319,
											"end": 12398,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12286,
											"end": 12408,
											"name": "tag",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 12286,
											"end": 12408,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12434,
											"end": 12440,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12417,
											"end": 12637,
											"name": "tag",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 12417,
											"end": 12637,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12451,
											"end": 12457,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12446,
											"end": 12449,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12443,
											"end": 12458,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12417,
											"end": 12637,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12417,
											"end": 12637,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 12417,
											"end": 12637,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12526,
											"end": 12529,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12555,
											"end": 12592,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 12588,
											"end": 12591,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 12576,
											"end": 12586,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12555,
											"end": 12592,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 12555,
											"end": 12592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12555,
											"end": 12592,
											"name": "tag",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 12555,
											"end": 12592,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12550,
											"end": 12553,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12543,
											"end": 12593,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12622,
											"end": 12626,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12617,
											"end": 12620,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12613,
											"end": 12627,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12606,
											"end": 12627,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 12606,
											"end": 12627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12493,
											"end": 12637,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12477,
											"end": 12481,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12472,
											"end": 12475,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12468,
											"end": 12482,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12461,
											"end": 12482,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12461,
											"end": 12482,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12417,
											"end": 12637,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 12417,
											"end": 12637,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12417,
											"end": 12637,
											"name": "tag",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 12417,
											"end": 12637,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12421,
											"end": 12442,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12035,
											"end": 12643,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12035,
											"end": 12643,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11933,
											"end": 12643,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11933,
											"end": 12643,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11933,
											"end": 12643,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11933,
											"end": 12643,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11933,
											"end": 12643,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11933,
											"end": 12643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12666,
											"end": 13036,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 12666,
											"end": 13036,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12737,
											"end": 12742,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12786,
											"end": 12789,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12779,
											"end": 12783,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 12771,
											"end": 12777,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12767,
											"end": 12784,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12763,
											"end": 12790,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12875,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 12753,
											"end": 12875,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12794,
											"end": 12873,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 12794,
											"end": 12873,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 12794,
											"end": 12873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12794,
											"end": 12873,
											"name": "tag",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 12794,
											"end": 12873,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12875,
											"name": "tag",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 12753,
											"end": 12875,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12911,
											"end": 12917,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12898,
											"end": 12918,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 12936,
											"end": 13030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 13026,
											"end": 13029,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13018,
											"end": 13024,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13011,
											"end": 13015,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13003,
											"end": 13009,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12999,
											"end": 13016,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12936,
											"end": 13030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 12936,
											"end": 13030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12936,
											"end": 13030,
											"name": "tag",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 12936,
											"end": 13030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12927,
											"end": 13030,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12927,
											"end": 13030,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12743,
											"end": 13036,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12666,
											"end": 13036,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12666,
											"end": 13036,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12666,
											"end": 13036,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12666,
											"end": 13036,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12666,
											"end": 13036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13042,
											"end": 13936,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 13042,
											"end": 13936,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13160,
											"end": 13166,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13168,
											"end": 13174,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13217,
											"end": 13219,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13205,
											"end": 13214,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13196,
											"end": 13203,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13192,
											"end": 13215,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13188,
											"end": 13220,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13185,
											"end": 13304,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13185,
											"end": 13304,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 13185,
											"end": 13304,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13223,
											"end": 13302,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 13223,
											"end": 13302,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 13223,
											"end": 13302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13223,
											"end": 13302,
											"name": "tag",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 13223,
											"end": 13302,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13185,
											"end": 13304,
											"name": "tag",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 13185,
											"end": 13304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13371,
											"end": 13372,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13360,
											"end": 13369,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13356,
											"end": 13373,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13343,
											"end": 13374,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 13401,
											"end": 13419,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13393,
											"end": 13399,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13390,
											"end": 13420,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13387,
											"end": 13504,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13387,
											"end": 13504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 13387,
											"end": 13504,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13423,
											"end": 13502,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 13423,
											"end": 13502,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 13423,
											"end": 13502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13423,
											"end": 13502,
											"name": "tag",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 13423,
											"end": 13502,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13387,
											"end": 13504,
											"name": "tag",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 13387,
											"end": 13504,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13528,
											"end": 13606,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 13598,
											"end": 13605,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13589,
											"end": 13595,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13578,
											"end": 13587,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13574,
											"end": 13596,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13528,
											"end": 13606,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 13528,
											"end": 13606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13528,
											"end": 13606,
											"name": "tag",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 13528,
											"end": 13606,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13518,
											"end": 13606,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13518,
											"end": 13606,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13314,
											"end": 13616,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13683,
											"end": 13685,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13672,
											"end": 13681,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13668,
											"end": 13686,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13655,
											"end": 13687,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 13714,
											"end": 13732,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13706,
											"end": 13712,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13703,
											"end": 13733,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13700,
											"end": 13817,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13700,
											"end": 13817,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 13700,
											"end": 13817,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13736,
											"end": 13815,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 13736,
											"end": 13815,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 13736,
											"end": 13815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13736,
											"end": 13815,
											"name": "tag",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 13736,
											"end": 13815,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13700,
											"end": 13817,
											"name": "tag",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 13700,
											"end": 13817,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13841,
											"end": 13919,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 13911,
											"end": 13918,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13902,
											"end": 13908,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13891,
											"end": 13900,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13887,
											"end": 13909,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13841,
											"end": 13919,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 13841,
											"end": 13919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13841,
											"end": 13919,
											"name": "tag",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 13841,
											"end": 13919,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13831,
											"end": 13919,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13831,
											"end": 13919,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13626,
											"end": 13929,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13042,
											"end": 13936,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13042,
											"end": 13936,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13042,
											"end": 13936,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13042,
											"end": 13936,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13042,
											"end": 13936,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13042,
											"end": 13936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13942,
											"end": 14056,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 13942,
											"end": 14056,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14009,
											"end": 14015,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14043,
											"end": 14048,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14037,
											"end": 14049,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14027,
											"end": 14049,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14027,
											"end": 14049,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13942,
											"end": 14056,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13942,
											"end": 14056,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13942,
											"end": 14056,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13942,
											"end": 14056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14062,
											"end": 14246,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 14062,
											"end": 14246,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14161,
											"end": 14172,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14195,
											"end": 14201,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14190,
											"end": 14193,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14183,
											"end": 14202,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14235,
											"end": 14239,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14233,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14226,
											"end": 14240,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14211,
											"end": 14240,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14211,
											"end": 14240,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14062,
											"end": 14246,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14062,
											"end": 14246,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14062,
											"end": 14246,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14062,
											"end": 14246,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14062,
											"end": 14246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14252,
											"end": 14384,
											"name": "tag",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 14252,
											"end": 14384,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14319,
											"end": 14323,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14342,
											"end": 14345,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14334,
											"end": 14345,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14334,
											"end": 14345,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14372,
											"end": 14376,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14367,
											"end": 14370,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14355,
											"end": 14377,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14355,
											"end": 14377,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14252,
											"end": 14384,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14252,
											"end": 14384,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14252,
											"end": 14384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14252,
											"end": 14384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14390,
											"end": 14498,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 14390,
											"end": 14498,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14467,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 14485,
											"end": 14490,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14467,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 14467,
											"end": 14491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14467,
											"end": 14491,
											"name": "tag",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 14467,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14462,
											"end": 14465,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14455,
											"end": 14492,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14390,
											"end": 14498,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14390,
											"end": 14498,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14390,
											"end": 14498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14504,
											"end": 14683,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 14504,
											"end": 14683,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14573,
											"end": 14583,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14594,
											"end": 14640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 14636,
											"end": 14639,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14628,
											"end": 14634,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14594,
											"end": 14640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 14594,
											"end": 14640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14594,
											"end": 14640,
											"name": "tag",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 14594,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14672,
											"end": 14676,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14667,
											"end": 14670,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14663,
											"end": 14677,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14649,
											"end": 14677,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14649,
											"end": 14677,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14504,
											"end": 14683,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14504,
											"end": 14683,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14504,
											"end": 14683,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14504,
											"end": 14683,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14504,
											"end": 14683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14689,
											"end": 14802,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 14689,
											"end": 14802,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14791,
											"end": 14795,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14786,
											"end": 14789,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14782,
											"end": 14796,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14774,
											"end": 14796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14774,
											"end": 14796,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14689,
											"end": 14802,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14689,
											"end": 14802,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14689,
											"end": 14802,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14689,
											"end": 14802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14838,
											"end": 15570,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 14838,
											"end": 15570,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14957,
											"end": 14960,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14986,
											"end": 15040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 15034,
											"end": 15039,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14986,
											"end": 15040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 14986,
											"end": 15040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14986,
											"end": 15040,
											"name": "tag",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 14986,
											"end": 15040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15056,
											"end": 15142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 15135,
											"end": 15141,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15130,
											"end": 15133,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15056,
											"end": 15142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 15056,
											"end": 15142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15056,
											"end": 15142,
											"name": "tag",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 15056,
											"end": 15142,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15049,
											"end": 15142,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 15049,
											"end": 15142,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15166,
											"end": 15222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 15216,
											"end": 15221,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15166,
											"end": 15222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 15166,
											"end": 15222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15166,
											"end": 15222,
											"name": "tag",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 15166,
											"end": 15222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15245,
											"end": 15252,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15276,
											"end": 15277,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15261,
											"end": 15545,
											"name": "tag",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 15261,
											"end": 15545,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15286,
											"end": 15292,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15283,
											"end": 15284,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15280,
											"end": 15293,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 15261,
											"end": 15545,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15261,
											"end": 15545,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 15261,
											"end": 15545,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15362,
											"end": 15368,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15356,
											"end": 15369,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15389,
											"end": 15452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 15448,
											"end": 15451,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 15433,
											"end": 15446,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15389,
											"end": 15452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 15389,
											"end": 15452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15389,
											"end": 15452,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 15389,
											"end": 15452,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15382,
											"end": 15452,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 15382,
											"end": 15452,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15475,
											"end": 15535,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 15528,
											"end": 15534,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15475,
											"end": 15535,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 15475,
											"end": 15535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15475,
											"end": 15535,
											"name": "tag",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 15475,
											"end": 15535,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15465,
											"end": 15535,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15465,
											"end": 15535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15321,
											"end": 15545,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15308,
											"end": 15309,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 15305,
											"end": 15306,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15301,
											"end": 15310,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15296,
											"end": 15310,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15296,
											"end": 15310,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15261,
											"end": 15545,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 15261,
											"end": 15545,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15261,
											"end": 15545,
											"name": "tag",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 15261,
											"end": 15545,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15265,
											"end": 15279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15561,
											"end": 15564,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15554,
											"end": 15564,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 15554,
											"end": 15564,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14962,
											"end": 15570,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14962,
											"end": 15570,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14962,
											"end": 15570,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14838,
											"end": 15570,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14838,
											"end": 15570,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14838,
											"end": 15570,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14838,
											"end": 15570,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14838,
											"end": 15570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15576,
											"end": 15949,
											"name": "tag",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 15576,
											"end": 15949,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15719,
											"end": 15723,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15757,
											"end": 15759,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15746,
											"end": 15755,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15742,
											"end": 15760,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15734,
											"end": 15760,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15734,
											"end": 15760,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15806,
											"end": 15815,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15800,
											"end": 15804,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15796,
											"end": 15816,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15792,
											"end": 15793,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15781,
											"end": 15790,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15777,
											"end": 15794,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15770,
											"end": 15817,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15834,
											"end": 15942,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 15937,
											"end": 15941,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15928,
											"end": 15934,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15834,
											"end": 15942,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 15834,
											"end": 15942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15834,
											"end": 15942,
											"name": "tag",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 15834,
											"end": 15942,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15826,
											"end": 15942,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15826,
											"end": 15942,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15576,
											"end": 15949,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15576,
											"end": 15949,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15576,
											"end": 15949,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15576,
											"end": 15949,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15576,
											"end": 15949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15955,
											"end": 16071,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 15955,
											"end": 16071,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16025,
											"end": 16046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 16040,
											"end": 16045,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16025,
											"end": 16046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 16025,
											"end": 16046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16025,
											"end": 16046,
											"name": "tag",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 16025,
											"end": 16046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16015,
											"end": 16047,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 16005,
											"end": 16065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 16005,
											"end": 16065,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16061,
											"end": 16062,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16058,
											"end": 16059,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16051,
											"end": 16063,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 16005,
											"end": 16065,
											"name": "tag",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 16005,
											"end": 16065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15955,
											"end": 16071,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15955,
											"end": 16071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16077,
											"end": 16210,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 16077,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16120,
											"end": 16125,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16158,
											"end": 16164,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16145,
											"end": 16165,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 16136,
											"end": 16165,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16136,
											"end": 16165,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16174,
											"end": 16204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 16198,
											"end": 16203,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16174,
											"end": 16204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 16174,
											"end": 16204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16174,
											"end": 16204,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 16174,
											"end": 16204,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16077,
											"end": 16210,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16077,
											"end": 16210,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16077,
											"end": 16210,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16077,
											"end": 16210,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16077,
											"end": 16210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16216,
											"end": 16684,
											"name": "tag",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 16216,
											"end": 16684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16281,
											"end": 16287,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16289,
											"end": 16295,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16338,
											"end": 16340,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16326,
											"end": 16335,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16317,
											"end": 16324,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16313,
											"end": 16336,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16309,
											"end": 16341,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 16306,
											"end": 16425,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16306,
											"end": 16425,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 16306,
											"end": 16425,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16344,
											"end": 16423,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 16344,
											"end": 16423,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 16344,
											"end": 16423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16344,
											"end": 16423,
											"name": "tag",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 16344,
											"end": 16423,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16306,
											"end": 16425,
											"name": "tag",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 16306,
											"end": 16425,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16464,
											"end": 16465,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16489,
											"end": 16542,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 16534,
											"end": 16541,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16525,
											"end": 16531,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16514,
											"end": 16523,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16510,
											"end": 16532,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16489,
											"end": 16542,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 16489,
											"end": 16542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16489,
											"end": 16542,
											"name": "tag",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 16489,
											"end": 16542,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16479,
											"end": 16542,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16479,
											"end": 16542,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16435,
											"end": 16552,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16591,
											"end": 16593,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16617,
											"end": 16667,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 16659,
											"end": 16666,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16650,
											"end": 16656,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16639,
											"end": 16648,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16635,
											"end": 16657,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16617,
											"end": 16667,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 16617,
											"end": 16667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16617,
											"end": 16667,
											"name": "tag",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 16617,
											"end": 16667,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16607,
											"end": 16667,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16607,
											"end": 16667,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16562,
											"end": 16677,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16216,
											"end": 16684,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16216,
											"end": 16684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16216,
											"end": 16684,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16216,
											"end": 16684,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16216,
											"end": 16684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16216,
											"end": 16684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16690,
											"end": 17164,
											"name": "tag",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 16690,
											"end": 17164,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16758,
											"end": 16764,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16766,
											"end": 16772,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16815,
											"end": 16817,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16803,
											"end": 16812,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16794,
											"end": 16801,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16790,
											"end": 16813,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16786,
											"end": 16818,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 16783,
											"end": 16902,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16783,
											"end": 16902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 16783,
											"end": 16902,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16821,
											"end": 16900,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 16821,
											"end": 16900,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 16821,
											"end": 16900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16821,
											"end": 16900,
											"name": "tag",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 16821,
											"end": 16900,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16783,
											"end": 16902,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 16783,
											"end": 16902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16941,
											"end": 16942,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16966,
											"end": 17019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 17011,
											"end": 17018,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17002,
											"end": 17008,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16991,
											"end": 17000,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16987,
											"end": 17009,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16966,
											"end": 17019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 16966,
											"end": 17019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16966,
											"end": 17019,
											"name": "tag",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 16966,
											"end": 17019,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16956,
											"end": 17019,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16956,
											"end": 17019,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16912,
											"end": 17029,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17068,
											"end": 17070,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17094,
											"end": 17147,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 17139,
											"end": 17146,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17130,
											"end": 17136,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17119,
											"end": 17128,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 17115,
											"end": 17137,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17094,
											"end": 17147,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 17094,
											"end": 17147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17094,
											"end": 17147,
											"name": "tag",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 17094,
											"end": 17147,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17084,
											"end": 17147,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17084,
											"end": 17147,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17039,
											"end": 17157,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16690,
											"end": 17164,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16690,
											"end": 17164,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16690,
											"end": 17164,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16690,
											"end": 17164,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16690,
											"end": 17164,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16690,
											"end": 17164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17170,
											"end": 18259,
											"name": "tag",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 17170,
											"end": 18259,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17274,
											"end": 17280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17282,
											"end": 17288,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17290,
											"end": 17296,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17298,
											"end": 17304,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17306,
											"end": 17312,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17355,
											"end": 17358,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 17343,
											"end": 17352,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 17334,
											"end": 17341,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 17330,
											"end": 17353,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 17326,
											"end": 17359,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 17323,
											"end": 17443,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17323,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 17323,
											"end": 17443,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17362,
											"end": 17441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 17362,
											"end": 17441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 17362,
											"end": 17441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17362,
											"end": 17441,
											"name": "tag",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 17362,
											"end": 17441,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17323,
											"end": 17443,
											"name": "tag",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 17323,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17482,
											"end": 17483,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17507,
											"end": 17560,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 17552,
											"end": 17559,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 17543,
											"end": 17549,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17532,
											"end": 17541,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 17528,
											"end": 17550,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17507,
											"end": 17560,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 17507,
											"end": 17560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17507,
											"end": 17560,
											"name": "tag",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 17507,
											"end": 17560,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17497,
											"end": 17560,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 17497,
											"end": 17560,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17453,
											"end": 17570,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17609,
											"end": 17611,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17635,
											"end": 17688,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 17680,
											"end": 17687,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 17671,
											"end": 17677,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17660,
											"end": 17669,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 17656,
											"end": 17678,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17635,
											"end": 17688,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 17635,
											"end": 17688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17635,
											"end": 17688,
											"name": "tag",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 17635,
											"end": 17688,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17625,
											"end": 17688,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 17625,
											"end": 17688,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17580,
											"end": 17698,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17737,
											"end": 17739,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 17763,
											"end": 17816,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 17808,
											"end": 17815,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 17799,
											"end": 17805,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17788,
											"end": 17797,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 17784,
											"end": 17806,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17763,
											"end": 17816,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 17763,
											"end": 17816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17763,
											"end": 17816,
											"name": "tag",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 17763,
											"end": 17816,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17753,
											"end": 17816,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 17753,
											"end": 17816,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17708,
											"end": 17826,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17865,
											"end": 17867,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 17891,
											"end": 17944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 17936,
											"end": 17943,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 17927,
											"end": 17933,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17916,
											"end": 17925,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 17912,
											"end": 17934,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17891,
											"end": 17944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 17891,
											"end": 17944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17891,
											"end": 17944,
											"name": "tag",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 17891,
											"end": 17944,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17881,
											"end": 17944,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17881,
											"end": 17944,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17836,
											"end": 17954,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18021,
											"end": 18024,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 18010,
											"end": 18019,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18006,
											"end": 18025,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17993,
											"end": 18026,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 18053,
											"end": 18071,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18045,
											"end": 18051,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18042,
											"end": 18072,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 18039,
											"end": 18156,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18039,
											"end": 18156,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "589"
										},
										{
											"begin": 18039,
											"end": 18156,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18075,
											"end": 18154,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 18075,
											"end": 18154,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 18075,
											"end": 18154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18075,
											"end": 18154,
											"name": "tag",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 18075,
											"end": 18154,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18039,
											"end": 18156,
											"name": "tag",
											"source": 14,
											"value": "589"
										},
										{
											"begin": 18039,
											"end": 18156,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18180,
											"end": 18242,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 18234,
											"end": 18241,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 18225,
											"end": 18231,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18214,
											"end": 18223,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 18210,
											"end": 18232,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18180,
											"end": 18242,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 18180,
											"end": 18242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18180,
											"end": 18242,
											"name": "tag",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 18180,
											"end": 18242,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18170,
											"end": 18242,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18170,
											"end": 18242,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17964,
											"end": 18252,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17170,
											"end": 18259,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17170,
											"end": 18259,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 17170,
											"end": 18259,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17170,
											"end": 18259,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17170,
											"end": 18259,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 17170,
											"end": 18259,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17170,
											"end": 18259,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 17170,
											"end": 18259,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17170,
											"end": 18259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18265,
											"end": 18445,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 18265,
											"end": 18445,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18313,
											"end": 18390,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18310,
											"end": 18311,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18303,
											"end": 18391,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18410,
											"end": 18414,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 18407,
											"end": 18408,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 18400,
											"end": 18415,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18434,
											"end": 18438,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 18431,
											"end": 18432,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18424,
											"end": 18439,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 18451,
											"end": 18771,
											"name": "tag",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 18451,
											"end": 18771,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18495,
											"end": 18501,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18532,
											"end": 18533,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 18526,
											"end": 18530,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18522,
											"end": 18534,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 18512,
											"end": 18534,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18512,
											"end": 18534,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18579,
											"end": 18580,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 18573,
											"end": 18577,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18569,
											"end": 18581,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 18600,
											"end": 18618,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18590,
											"end": 18671,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 18590,
											"end": 18671,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18656,
											"end": 18660,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 18648,
											"end": 18654,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18644,
											"end": 18661,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 18634,
											"end": 18661,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18634,
											"end": 18661,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18590,
											"end": 18671,
											"name": "tag",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 18590,
											"end": 18671,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18718,
											"end": 18720,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18710,
											"end": 18716,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18707,
											"end": 18721,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 18687,
											"end": 18705,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18684,
											"end": 18722,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18681,
											"end": 18765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 18681,
											"end": 18765,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18737,
											"end": 18755,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 18737,
											"end": 18755,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 18737,
											"end": 18755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18737,
											"end": 18755,
											"name": "tag",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 18737,
											"end": 18755,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18681,
											"end": 18765,
											"name": "tag",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 18681,
											"end": 18765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18502,
											"end": 18771,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18451,
											"end": 18771,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18451,
											"end": 18771,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18451,
											"end": 18771,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18451,
											"end": 18771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18777,
											"end": 18895,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 18777,
											"end": 18895,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18864,
											"end": 18888,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 18882,
											"end": 18887,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18864,
											"end": 18888,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 18864,
											"end": 18888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18864,
											"end": 18888,
											"name": "tag",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 18864,
											"end": 18888,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18859,
											"end": 18862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18852,
											"end": 18889,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18777,
											"end": 18895,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18777,
											"end": 18895,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18777,
											"end": 18895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18901,
											"end": 19233,
											"name": "tag",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 18901,
											"end": 19233,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19022,
											"end": 19026,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19060,
											"end": 19062,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 19049,
											"end": 19058,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19045,
											"end": 19063,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19037,
											"end": 19063,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19037,
											"end": 19063,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19073,
											"end": 19144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 19141,
											"end": 19142,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19130,
											"end": 19139,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19126,
											"end": 19143,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19117,
											"end": 19123,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 19073,
											"end": 19144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 19073,
											"end": 19144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19073,
											"end": 19144,
											"name": "tag",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 19073,
											"end": 19144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19154,
											"end": 19226,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 19222,
											"end": 19224,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19211,
											"end": 19220,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19207,
											"end": 19225,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19198,
											"end": 19204,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19154,
											"end": 19226,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 19154,
											"end": 19226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19154,
											"end": 19226,
											"name": "tag",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 19154,
											"end": 19226,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18901,
											"end": 19233,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 18901,
											"end": 19233,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18901,
											"end": 19233,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18901,
											"end": 19233,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18901,
											"end": 19233,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18901,
											"end": 19233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19239,
											"end": 19420,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 19239,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19379,
											"end": 19412,
											"name": "PUSH",
											"source": 14,
											"value": "4F6E6C792074656163686572732063616E206177617264206372656469747300"
										},
										{
											"begin": 19375,
											"end": 19376,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19367,
											"end": 19373,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19363,
											"end": 19377,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19356,
											"end": 19413,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19239,
											"end": 19420,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19239,
											"end": 19420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19426,
											"end": 19792,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 19426,
											"end": 19792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19568,
											"end": 19571,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19589,
											"end": 19656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 19653,
											"end": 19655,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 19648,
											"end": 19651,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19589,
											"end": 19656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 19589,
											"end": 19656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19589,
											"end": 19656,
											"name": "tag",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 19589,
											"end": 19656,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19582,
											"end": 19656,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19582,
											"end": 19656,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19665,
											"end": 19758,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 19754,
											"end": 19757,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19665,
											"end": 19758,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 19665,
											"end": 19758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19665,
											"end": 19758,
											"name": "tag",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 19665,
											"end": 19758,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19783,
											"end": 19785,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19778,
											"end": 19781,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19774,
											"end": 19786,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19767,
											"end": 19786,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19767,
											"end": 19786,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19426,
											"end": 19792,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19426,
											"end": 19792,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19426,
											"end": 19792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19426,
											"end": 19792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19798,
											"end": 20217,
											"name": "tag",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 19798,
											"end": 20217,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19964,
											"end": 19968,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20002,
											"end": 20004,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19991,
											"end": 20000,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19987,
											"end": 20005,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19979,
											"end": 20005,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19979,
											"end": 20005,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20051,
											"end": 20060,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20045,
											"end": 20049,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20041,
											"end": 20061,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20037,
											"end": 20038,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20026,
											"end": 20035,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20022,
											"end": 20039,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20015,
											"end": 20062,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20079,
											"end": 20210,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "607"
										},
										{
											"begin": 20205,
											"end": 20209,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20079,
											"end": 20210,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 20079,
											"end": 20210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20079,
											"end": 20210,
											"name": "tag",
											"source": 14,
											"value": "607"
										},
										{
											"begin": 20079,
											"end": 20210,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20071,
											"end": 20210,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20071,
											"end": 20210,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19798,
											"end": 20217,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19798,
											"end": 20217,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19798,
											"end": 20217,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19798,
											"end": 20217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20223,
											"end": 20555,
											"name": "tag",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 20223,
											"end": 20555,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20344,
											"end": 20348,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20382,
											"end": 20384,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 20371,
											"end": 20380,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20367,
											"end": 20385,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20359,
											"end": 20385,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20359,
											"end": 20385,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20395,
											"end": 20466,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 20463,
											"end": 20464,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20452,
											"end": 20461,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20448,
											"end": 20465,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20439,
											"end": 20445,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 20395,
											"end": 20466,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 20395,
											"end": 20466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20395,
											"end": 20466,
											"name": "tag",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 20395,
											"end": 20466,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20476,
											"end": 20548,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 20544,
											"end": 20546,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20533,
											"end": 20542,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20529,
											"end": 20547,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20520,
											"end": 20526,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20476,
											"end": 20548,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 20476,
											"end": 20548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20476,
											"end": 20548,
											"name": "tag",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 20476,
											"end": 20548,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20223,
											"end": 20555,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 20223,
											"end": 20555,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20223,
											"end": 20555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20223,
											"end": 20555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20223,
											"end": 20555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20223,
											"end": 20555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20561,
											"end": 20741,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 20561,
											"end": 20741,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20609,
											"end": 20686,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20606,
											"end": 20607,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20599,
											"end": 20687,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20706,
											"end": 20710,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 20703,
											"end": 20704,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 20696,
											"end": 20711,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20730,
											"end": 20734,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 20727,
											"end": 20728,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20720,
											"end": 20735,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 20747,
											"end": 20928,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 20747,
											"end": 20928,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20887,
											"end": 20920,
											"name": "PUSH",
											"source": 14,
											"value": "4F6E6C792073747564656E74732063616E20636C61696D207265776172647300"
										},
										{
											"begin": 20883,
											"end": 20884,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20875,
											"end": 20881,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20871,
											"end": 20885,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20864,
											"end": 20921,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20747,
											"end": 20928,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20747,
											"end": 20928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20934,
											"end": 21300,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 20934,
											"end": 21300,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21076,
											"end": 21079,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21097,
											"end": 21164,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 21161,
											"end": 21163,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 21156,
											"end": 21159,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21097,
											"end": 21164,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 21097,
											"end": 21164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21097,
											"end": 21164,
											"name": "tag",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 21097,
											"end": 21164,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21090,
											"end": 21164,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21090,
											"end": 21164,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21173,
											"end": 21266,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 21262,
											"end": 21265,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21173,
											"end": 21266,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 21173,
											"end": 21266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21173,
											"end": 21266,
											"name": "tag",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 21173,
											"end": 21266,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21291,
											"end": 21293,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21286,
											"end": 21289,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21282,
											"end": 21294,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21275,
											"end": 21294,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21275,
											"end": 21294,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20934,
											"end": 21300,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20934,
											"end": 21300,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20934,
											"end": 21300,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20934,
											"end": 21300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21306,
											"end": 21725,
											"name": "tag",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 21306,
											"end": 21725,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21472,
											"end": 21476,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21510,
											"end": 21512,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21499,
											"end": 21508,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21495,
											"end": 21513,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21487,
											"end": 21513,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21487,
											"end": 21513,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21559,
											"end": 21568,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21553,
											"end": 21557,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21549,
											"end": 21569,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 21545,
											"end": 21546,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21534,
											"end": 21543,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21530,
											"end": 21547,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21523,
											"end": 21570,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21587,
											"end": 21718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 21713,
											"end": 21717,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21587,
											"end": 21718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 21587,
											"end": 21718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21587,
											"end": 21718,
											"name": "tag",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 21587,
											"end": 21718,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21579,
											"end": 21718,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21579,
											"end": 21718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21306,
											"end": 21725,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21306,
											"end": 21725,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21306,
											"end": 21725,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21306,
											"end": 21725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21731,
											"end": 21953,
											"name": "tag",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 21731,
											"end": 21953,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21824,
											"end": 21828,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21862,
											"end": 21864,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21851,
											"end": 21860,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21847,
											"end": 21865,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21839,
											"end": 21865,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21839,
											"end": 21865,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21875,
											"end": 21946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 21943,
											"end": 21944,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21932,
											"end": 21941,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21928,
											"end": 21945,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21919,
											"end": 21925,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 21875,
											"end": 21946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 21875,
											"end": 21946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21875,
											"end": 21946,
											"name": "tag",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 21875,
											"end": 21946,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21731,
											"end": 21953,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21731,
											"end": 21953,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21731,
											"end": 21953,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21731,
											"end": 21953,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21731,
											"end": 21953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21959,
											"end": 22291,
											"name": "tag",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 21959,
											"end": 22291,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22080,
											"end": 22084,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22118,
											"end": 22120,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 22107,
											"end": 22116,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22103,
											"end": 22121,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22095,
											"end": 22121,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22095,
											"end": 22121,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22131,
											"end": 22202,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 22199,
											"end": 22200,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22188,
											"end": 22197,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22184,
											"end": 22201,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22175,
											"end": 22181,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 22131,
											"end": 22202,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 22131,
											"end": 22202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22131,
											"end": 22202,
											"name": "tag",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 22131,
											"end": 22202,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22212,
											"end": 22284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 22280,
											"end": 22282,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22269,
											"end": 22278,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22265,
											"end": 22283,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22256,
											"end": 22262,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22212,
											"end": 22284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 22212,
											"end": 22284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22212,
											"end": 22284,
											"name": "tag",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 22212,
											"end": 22284,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21959,
											"end": 22291,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 21959,
											"end": 22291,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21959,
											"end": 22291,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21959,
											"end": 22291,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21959,
											"end": 22291,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21959,
											"end": 22291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22297,
											"end": 22850,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 22297,
											"end": 22850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22474,
											"end": 22478,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22512,
											"end": 22515,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 22501,
											"end": 22510,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22497,
											"end": 22516,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22489,
											"end": 22516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22489,
											"end": 22516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22526,
											"end": 22597,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 22594,
											"end": 22595,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22583,
											"end": 22592,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22579,
											"end": 22596,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22570,
											"end": 22576,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 22526,
											"end": 22597,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 22526,
											"end": 22597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22526,
											"end": 22597,
											"name": "tag",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 22526,
											"end": 22597,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22607,
											"end": 22679,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 22675,
											"end": 22677,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22664,
											"end": 22673,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22660,
											"end": 22678,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22651,
											"end": 22657,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 22607,
											"end": 22679,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 22607,
											"end": 22679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22607,
											"end": 22679,
											"name": "tag",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 22607,
											"end": 22679,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22689,
											"end": 22761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 22757,
											"end": 22759,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 22746,
											"end": 22755,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22742,
											"end": 22760,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22733,
											"end": 22739,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 22689,
											"end": 22761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 22689,
											"end": 22761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22689,
											"end": 22761,
											"name": "tag",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 22689,
											"end": 22761,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22771,
											"end": 22843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 22839,
											"end": 22841,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 22828,
											"end": 22837,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22824,
											"end": 22842,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22815,
											"end": 22821,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22771,
											"end": 22843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 22771,
											"end": 22843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22771,
											"end": 22843,
											"name": "tag",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 22771,
											"end": 22843,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22297,
											"end": 22850,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 22297,
											"end": 22850,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 22297,
											"end": 22850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22297,
											"end": 22850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22297,
											"end": 22850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22297,
											"end": 22850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22297,
											"end": 22850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22297,
											"end": 22850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22856,
											"end": 23036,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 22856,
											"end": 23036,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22904,
											"end": 22981,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22901,
											"end": 22902,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22894,
											"end": 22982,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23001,
											"end": 23005,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 22998,
											"end": 22999,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 22991,
											"end": 23006,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23025,
											"end": 23029,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 23022,
											"end": 23023,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23015,
											"end": 23030,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 23042,
											"end": 23233,
											"name": "tag",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 23042,
											"end": 23233,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23082,
											"end": 23085,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23101,
											"end": 23121,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 23119,
											"end": 23120,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23101,
											"end": 23121,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 23101,
											"end": 23121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23101,
											"end": 23121,
											"name": "tag",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 23101,
											"end": 23121,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23096,
											"end": 23121,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23096,
											"end": 23121,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23135,
											"end": 23155,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 23153,
											"end": 23154,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23135,
											"end": 23155,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 23135,
											"end": 23155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23135,
											"end": 23155,
											"name": "tag",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 23135,
											"end": 23155,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23130,
											"end": 23155,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23130,
											"end": 23155,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23178,
											"end": 23179,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23175,
											"end": 23176,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23171,
											"end": 23180,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23164,
											"end": 23180,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23164,
											"end": 23180,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23199,
											"end": 23202,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 23196,
											"end": 23197,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23193,
											"end": 23203,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 23190,
											"end": 23226,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 23190,
											"end": 23226,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 23190,
											"end": 23226,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 23206,
											"end": 23224,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 23206,
											"end": 23224,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 23206,
											"end": 23224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23206,
											"end": 23224,
											"name": "tag",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 23206,
											"end": 23224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23190,
											"end": 23226,
											"name": "tag",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 23190,
											"end": 23226,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23042,
											"end": 23233,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23042,
											"end": 23233,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23042,
											"end": 23233,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23042,
											"end": 23233,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23042,
											"end": 23233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23239,
											"end": 23873,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 23239,
											"end": 23873,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23460,
											"end": 23464,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23498,
											"end": 23500,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 23487,
											"end": 23496,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23483,
											"end": 23501,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23475,
											"end": 23501,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23475,
											"end": 23501,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23547,
											"end": 23556,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23541,
											"end": 23545,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23537,
											"end": 23557,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 23533,
											"end": 23534,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23522,
											"end": 23531,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23518,
											"end": 23535,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23511,
											"end": 23558,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23575,
											"end": 23683,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 23678,
											"end": 23682,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23669,
											"end": 23675,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 23575,
											"end": 23683,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 23575,
											"end": 23683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23575,
											"end": 23683,
											"name": "tag",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 23575,
											"end": 23683,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23567,
											"end": 23683,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23567,
											"end": 23683,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23730,
											"end": 23739,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23724,
											"end": 23728,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23720,
											"end": 23740,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 23715,
											"end": 23717,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23704,
											"end": 23713,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23700,
											"end": 23718,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23693,
											"end": 23741,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23758,
											"end": 23866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "636"
										},
										{
											"begin": 23861,
											"end": 23865,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23852,
											"end": 23858,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23758,
											"end": 23866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 23758,
											"end": 23866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23758,
											"end": 23866,
											"name": "tag",
											"source": 14,
											"value": "636"
										},
										{
											"begin": 23758,
											"end": 23866,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23750,
											"end": 23866,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23750,
											"end": 23866,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23239,
											"end": 23873,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 23239,
											"end": 23873,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23239,
											"end": 23873,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23239,
											"end": 23873,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23239,
											"end": 23873,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23239,
											"end": 23873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23879,
											"end": 23977,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 23879,
											"end": 23977,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23930,
											"end": 23936,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23964,
											"end": 23969,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23958,
											"end": 23970,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 23948,
											"end": 23970,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23948,
											"end": 23970,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23879,
											"end": 23977,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23879,
											"end": 23977,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23879,
											"end": 23977,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23879,
											"end": 23977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23983,
											"end": 24151,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 23983,
											"end": 24151,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24066,
											"end": 24077,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24100,
											"end": 24106,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24095,
											"end": 24098,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24088,
											"end": 24107,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24140,
											"end": 24144,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24135,
											"end": 24138,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24131,
											"end": 24145,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24116,
											"end": 24145,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24116,
											"end": 24145,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23983,
											"end": 24151,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23983,
											"end": 24151,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23983,
											"end": 24151,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23983,
											"end": 24151,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23983,
											"end": 24151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24157,
											"end": 24530,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 24157,
											"end": 24530,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24243,
											"end": 24246,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24271,
											"end": 24309,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 24303,
											"end": 24308,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24271,
											"end": 24309,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 24271,
											"end": 24309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24271,
											"end": 24309,
											"name": "tag",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 24271,
											"end": 24309,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24325,
											"end": 24395,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 24388,
											"end": 24394,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24383,
											"end": 24386,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 24325,
											"end": 24395,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 24325,
											"end": 24395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24325,
											"end": 24395,
											"name": "tag",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 24325,
											"end": 24395,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24318,
											"end": 24395,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 24318,
											"end": 24395,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24404,
											"end": 24469,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 24462,
											"end": 24468,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24457,
											"end": 24460,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 24450,
											"end": 24454,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24443,
											"end": 24448,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 24439,
											"end": 24455,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24404,
											"end": 24469,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 24404,
											"end": 24469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24404,
											"end": 24469,
											"name": "tag",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 24404,
											"end": 24469,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24494,
											"end": 24523,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 24516,
											"end": 24522,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24494,
											"end": 24523,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 24494,
											"end": 24523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24494,
											"end": 24523,
											"name": "tag",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 24494,
											"end": 24523,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24489,
											"end": 24492,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24485,
											"end": 24524,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24478,
											"end": 24524,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24478,
											"end": 24524,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24247,
											"end": 24530,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24157,
											"end": 24530,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24157,
											"end": 24530,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24157,
											"end": 24530,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24157,
											"end": 24530,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24157,
											"end": 24530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24536,
											"end": 25287,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 24536,
											"end": 25287,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24759,
											"end": 24763,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24797,
											"end": 24800,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 24786,
											"end": 24795,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24782,
											"end": 24801,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24774,
											"end": 24801,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24774,
											"end": 24801,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24811,
											"end": 24882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 24879,
											"end": 24880,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24868,
											"end": 24877,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24864,
											"end": 24881,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24855,
											"end": 24861,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 24811,
											"end": 24882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 24811,
											"end": 24882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24811,
											"end": 24882,
											"name": "tag",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 24811,
											"end": 24882,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24892,
											"end": 24964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 24960,
											"end": 24962,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24949,
											"end": 24958,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24945,
											"end": 24963,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24936,
											"end": 24942,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 24892,
											"end": 24964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 24892,
											"end": 24964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24892,
											"end": 24964,
											"name": "tag",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 24892,
											"end": 24964,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24974,
											"end": 25046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 25042,
											"end": 25044,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 25031,
											"end": 25040,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25027,
											"end": 25045,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25018,
											"end": 25024,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 24974,
											"end": 25046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 24974,
											"end": 25046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24974,
											"end": 25046,
											"name": "tag",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 24974,
											"end": 25046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25056,
											"end": 25128,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 25124,
											"end": 25126,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 25113,
											"end": 25122,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25109,
											"end": 25127,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 25056,
											"end": 25128,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 25056,
											"end": 25128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25056,
											"end": 25128,
											"name": "tag",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 25056,
											"end": 25128,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25176,
											"end": 25185,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25170,
											"end": 25174,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25166,
											"end": 25186,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 25160,
											"end": 25163,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 25149,
											"end": 25158,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25145,
											"end": 25164,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25138,
											"end": 25187,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 25204,
											"end": 25280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 25275,
											"end": 25279,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25266,
											"end": 25272,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25204,
											"end": 25280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 25204,
											"end": 25280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25204,
											"end": 25280,
											"name": "tag",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 25204,
											"end": 25280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25196,
											"end": 25280,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25196,
											"end": 25280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24536,
											"end": 25287,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 24536,
											"end": 25287,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 24536,
											"end": 25287,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24536,
											"end": 25287,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24536,
											"end": 25287,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24536,
											"end": 25287,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24536,
											"end": 25287,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24536,
											"end": 25287,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24536,
											"end": 25287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25293,
											"end": 25434,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 25293,
											"end": 25434,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25349,
											"end": 25354,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25380,
											"end": 25386,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25374,
											"end": 25387,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 25365,
											"end": 25387,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25365,
											"end": 25387,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25396,
											"end": 25428,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 25422,
											"end": 25427,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25396,
											"end": 25428,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 25396,
											"end": 25428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25396,
											"end": 25428,
											"name": "tag",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 25396,
											"end": 25428,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25293,
											"end": 25434,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 25293,
											"end": 25434,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25293,
											"end": 25434,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25293,
											"end": 25434,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25293,
											"end": 25434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25440,
											"end": 25789,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 25440,
											"end": 25789,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25509,
											"end": 25515,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25558,
											"end": 25560,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 25546,
											"end": 25555,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25537,
											"end": 25544,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25533,
											"end": 25556,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 25529,
											"end": 25561,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 25526,
											"end": 25645,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 25526,
											"end": 25645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 25526,
											"end": 25645,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 25564,
											"end": 25643,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 25564,
											"end": 25643,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 25564,
											"end": 25643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25564,
											"end": 25643,
											"name": "tag",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 25564,
											"end": 25643,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25526,
											"end": 25645,
											"name": "tag",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 25526,
											"end": 25645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25684,
											"end": 25685,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25709,
											"end": 25772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "655"
										},
										{
											"begin": 25764,
											"end": 25771,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25755,
											"end": 25761,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25744,
											"end": 25753,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 25740,
											"end": 25762,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25709,
											"end": 25772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 25709,
											"end": 25772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25709,
											"end": 25772,
											"name": "tag",
											"source": 14,
											"value": "655"
										},
										{
											"begin": 25709,
											"end": 25772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25699,
											"end": 25772,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25699,
											"end": 25772,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25655,
											"end": 25782,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25440,
											"end": 25789,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 25440,
											"end": 25789,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25440,
											"end": 25789,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25440,
											"end": 25789,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25440,
											"end": 25789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25795,
											"end": 26848,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 25795,
											"end": 26848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26118,
											"end": 26122,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26156,
											"end": 26159,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 26145,
											"end": 26154,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26141,
											"end": 26160,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26133,
											"end": 26160,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26133,
											"end": 26160,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26170,
											"end": 26241,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 26238,
											"end": 26239,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26227,
											"end": 26236,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26223,
											"end": 26240,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26214,
											"end": 26220,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 26170,
											"end": 26241,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 26170,
											"end": 26241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26170,
											"end": 26241,
											"name": "tag",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 26170,
											"end": 26241,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26251,
											"end": 26323,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 26319,
											"end": 26321,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 26308,
											"end": 26317,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26304,
											"end": 26322,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26295,
											"end": 26301,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 26251,
											"end": 26323,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 26251,
											"end": 26323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26251,
											"end": 26323,
											"name": "tag",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 26251,
											"end": 26323,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26370,
											"end": 26379,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26364,
											"end": 26368,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26360,
											"end": 26380,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 26355,
											"end": 26357,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 26344,
											"end": 26353,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26340,
											"end": 26358,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26333,
											"end": 26381,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 26398,
											"end": 26506,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 26501,
											"end": 26505,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26492,
											"end": 26498,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 26398,
											"end": 26506,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 26398,
											"end": 26506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26398,
											"end": 26506,
											"name": "tag",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 26398,
											"end": 26506,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26390,
											"end": 26506,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26390,
											"end": 26506,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26553,
											"end": 26562,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26547,
											"end": 26551,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26543,
											"end": 26563,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 26538,
											"end": 26540,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 26527,
											"end": 26536,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26523,
											"end": 26541,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26516,
											"end": 26564,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 26581,
											"end": 26689,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "660"
										},
										{
											"begin": 26684,
											"end": 26688,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26675,
											"end": 26681,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 26581,
											"end": 26689,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 26581,
											"end": 26689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26581,
											"end": 26689,
											"name": "tag",
											"source": 14,
											"value": "660"
										},
										{
											"begin": 26581,
											"end": 26689,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26573,
											"end": 26689,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26573,
											"end": 26689,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26737,
											"end": 26746,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26731,
											"end": 26735,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26727,
											"end": 26747,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 26721,
											"end": 26724,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 26710,
											"end": 26719,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26706,
											"end": 26725,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26699,
											"end": 26748,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 26765,
											"end": 26841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 26836,
											"end": 26840,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26827,
											"end": 26833,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 26765,
											"end": 26841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 26765,
											"end": 26841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26765,
											"end": 26841,
											"name": "tag",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 26765,
											"end": 26841,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26757,
											"end": 26841,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26757,
											"end": 26841,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25795,
											"end": 26848,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 25795,
											"end": 26848,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 25795,
											"end": 26848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25795,
											"end": 26848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25795,
											"end": 26848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25795,
											"end": 26848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25795,
											"end": 26848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25795,
											"end": 26848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25795,
											"end": 26848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								},
								"BE7838470A3C26528D43BAE23565234ED295A39BDE7B6C68AC16C023B38BF94F": "68747470733a2f2f6d796170692e636f6d2f6170692f746f6b656e2f7b69647d2e6a736f6e"
							},
							"sourceList": [
								"contracts/EduToken.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"STUDENT_ROLE()": "f7be43fb",
							"TEACHER_ROLE()": "86e5c15a",
							"awardCredits(address,uint256)": "3ff3226d",
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"claimReward(uint256)": "ae169a50",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isApprovedForAll(address,address)": "e985e9c5",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STUDENT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEACHER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"awardCredits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EduToken.sol\":\"EduToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/EduToken.sol\":{\"keccak256\":\"0x4685a44f43a99eb3a6158d06ec198eb7f5708f6ead034812ae13e081417cf870\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c47612060d40deaf696b5245be1e60bca445edf68c89065e63468867ab68aae4\",\"dweb:/ipfs/QmdTyoKD7HvDCvt4A5ZDRCkx2NihxNwzoM1mYoyv8CAh8j\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f\",\"dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd05803ef6ae7b7307c409e7bd3e6e8ba54470f09e9594dad8f8bf3a1c7973af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://faa944ac1ba1a80f474815678cc3c90316ae22b26f08cdc3038f393f19f5eb58\",\"dweb:/ipfs/QmS5osseSJwvPzWjRk5jmitQRHp5FjHZA4NxZ1Tk6ohEYG\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xb88683ee1e740b187c66ad4d0671d2e2008d80c629a3a6b4c58a9ce884507718\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aeb2f36a4b5eba9ac00d2a1fe8dbd4d948fd5b008760a37d134d85ff9ba2805\",\"dweb:/ipfs/QmTb7Zs7TCv73hDoUD4n1dgPebssfnniQrCS5E2sUBqwUQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x0f8b8696348d5a57b13d44f5cc63894f0368038c06f6d00bdeda6f9aa13127e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://718159abc22da25c2de7e70f6b7bbbf6b6e20c3db6681893f8049b57f4ee65ce\",\"dweb:/ipfs/QmPJeQ7Qj7mrAwfR69sLjyjUSb44B7yAJXvMG1NFtoTJKv\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x553c1a345186dbf3b85ff238887acf290d5e1fafcc99eb8bf14c48a346a8ca34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39dfd17d675251ba895aff3a3727a48badbb76e40d3d94ae092e8cdbf2ea45f9\",\"dweb:/ipfs/QmQHrDH3fvHoxCFAppEm55Ttp9A4fibNoZgLC3VqJY5arL\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x94ead5f501c98a6e8e612388db946b6d44b38cb32751ff275324efb5d4f19d17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://410dfe51b7c1f073fc8626456d2eab862e7d949c5065e67bd4688990e405868f\",\"dweb:/ipfs/QmfUo3r8GqELwFK8oHmy5WGUbw2kfV1BcS9MBhwqtFynKJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 680,
								"contract": "contracts/EduToken.sol:EduToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 686,
								"contract": "contracts/EduToken.sol:EduToken",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 688,
								"contract": "contracts/EduToken.sol:EduToken",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 149,
								"contract": "contracts/EduToken.sol:EduToken",
								"label": "_roles",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)144_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)144_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)144_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)144_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 141,
										"contract": "contracts/EduToken.sol:EduToken",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 143,
										"contract": "contracts/EduToken.sol:EduToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f\",\"dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 149,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)144_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)144_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)144_storage"
							},
							"t_struct(RoleData)144_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 141,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 143,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f\",\"dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd05803ef6ae7b7307c409e7bd3e6e8ba54470f09e9594dad8f8bf3a1c7973af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://faa944ac1ba1a80f474815678cc3c90316ae22b26f08cdc3038f393f19f5eb58\",\"dweb:/ipfs/QmS5osseSJwvPzWjRk5jmitQRHp5FjHZA4NxZ1Tk6ohEYG\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xb88683ee1e740b187c66ad4d0671d2e2008d80c629a3a6b4c58a9ce884507718\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aeb2f36a4b5eba9ac00d2a1fe8dbd4d948fd5b008760a37d134d85ff9ba2805\",\"dweb:/ipfs/QmTb7Zs7TCv73hDoUD4n1dgPebssfnniQrCS5E2sUBqwUQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x0f8b8696348d5a57b13d44f5cc63894f0368038c06f6d00bdeda6f9aa13127e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://718159abc22da25c2de7e70f6b7bbbf6b6e20c3db6681893f8049b57f4ee65ce\",\"dweb:/ipfs/QmPJeQ7Qj7mrAwfR69sLjyjUSb44B7yAJXvMG1NFtoTJKv\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x553c1a345186dbf3b85ff238887acf290d5e1fafcc99eb8bf14c48a346a8ca34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39dfd17d675251ba895aff3a3727a48badbb76e40d3d94ae092e8cdbf2ea45f9\",\"dweb:/ipfs/QmQHrDH3fvHoxCFAppEm55Ttp9A4fibNoZgLC3VqJY5arL\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x94ead5f501c98a6e8e612388db946b6d44b38cb32751ff275324efb5d4f19d17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://410dfe51b7c1f073fc8626456d2eab862e7d949c5065e67bd4688990e405868f\",\"dweb:/ipfs/QmfUo3r8GqELwFK8oHmy5WGUbw2kfV1BcS9MBhwqtFynKJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 680,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 686,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 688,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xb88683ee1e740b187c66ad4d0671d2e2008d80c629a3a6b4c58a9ce884507718\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aeb2f36a4b5eba9ac00d2a1fe8dbd4d948fd5b008760a37d134d85ff9ba2805\",\"dweb:/ipfs/QmTb7Zs7TCv73hDoUD4n1dgPebssfnniQrCS5E2sUBqwUQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x0f8b8696348d5a57b13d44f5cc63894f0368038c06f6d00bdeda6f9aa13127e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://718159abc22da25c2de7e70f6b7bbbf6b6e20c3db6681893f8049b57f4ee65ce\",\"dweb:/ipfs/QmPJeQ7Qj7mrAwfR69sLjyjUSb44B7yAJXvMG1NFtoTJKv\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xb88683ee1e740b187c66ad4d0671d2e2008d80c629a3a6b4c58a9ce884507718\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aeb2f36a4b5eba9ac00d2a1fe8dbd4d948fd5b008760a37d134d85ff9ba2805\",\"dweb:/ipfs/QmTb7Zs7TCv73hDoUD4n1dgPebssfnniQrCS5E2sUBqwUQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x553c1a345186dbf3b85ff238887acf290d5e1fafcc99eb8bf14c48a346a8ca34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39dfd17d675251ba895aff3a3727a48badbb76e40d3d94ae092e8cdbf2ea45f9\",\"dweb:/ipfs/QmQHrDH3fvHoxCFAppEm55Ttp9A4fibNoZgLC3VqJY5arL\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cd410f4f3a07594b369520fafc74a06ad246be2a109c361ce738dc474e2dddc364736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cd410f4f3a07594b369520fafc74a06ad246be2a109c361ce738dc474e2dddc364736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD COINBASE 0xF 0x4F GASPRICE SMOD MSIZE 0x4B CALLDATASIZE SWAP6 KECCAK256 STATICCALL 0xFC PUSH21 0xA06AD246BE2A109C361CE738DC474E2DDDC364736F PUSH13 0x63430008160033000000000000 ",
							"sourceMap": "276:4526:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cd410f4f3a07594b369520fafc74a06ad246be2a109c361ce738dc474e2dddc364736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD COINBASE 0xF 0x4F GASPRICE SMOD MSIZE 0x4B CALLDATASIZE SWAP6 KECCAK256 STATICCALL 0xFC PUSH21 0xA06AD246BE2A109C361CE738DC474E2DDDC364736F PUSH13 0x63430008160033000000000000 ",
							"sourceMap": "276:4526:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd410f4f3a07594b369520fafc74a06ad246be2a109c361ce738dc474e2dddc364736f6c63430008160033",
									".code": [
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"contracts/EduToken.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x94ead5f501c98a6e8e612388db946b6d44b38cb32751ff275324efb5d4f19d17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://410dfe51b7c1f073fc8626456d2eab862e7d949c5065e67bd4688990e405868f\",\"dweb:/ipfs/QmfUo3r8GqELwFK8oHmy5WGUbw2kfV1BcS9MBhwqtFynKJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":1246:3931  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":1246:3931  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203f80062afc6c3b3281bb447cdf61d9e0488beeaccd54424023b6bc394335562564736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203f80062afc6c3b3281bb447cdf61d9e0488beeaccd54424023b6bc394335562564736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH DUP1 MOD 0x2A 0xFC PUSH13 0x3B3281BB447CDF61D9E0488BEE 0xAC 0xCD SLOAD TIMESTAMP BLOCKHASH 0x23 0xB6 0xBC CODECOPY NUMBER CALLDATALOAD JUMP 0x25 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1246:2685:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203f80062afc6c3b3281bb447cdf61d9e0488beeaccd54424023b6bc394335562564736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH DUP1 MOD 0x2A 0xFC PUSH13 0x3B3281BB447CDF61D9E0488BEE 0xAC 0xCD SLOAD TIMESTAMP BLOCKHASH 0x23 0xB6 0xBC CODECOPY NUMBER CALLDATALOAD JUMP 0x25 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1246:2685:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f80062afc6c3b3281bb447cdf61d9e0488beeaccd54424023b6bc394335562564736f6c63430008160033",
									".code": [
										{
											"begin": 1246,
											"end": 3931,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"contracts/EduToken.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":203:15453  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":203:15453  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122047bb97db57b7926122781c5a07a2050fa567afddabb8a452ae4b0578773cc65464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047bb97db57b7926122781c5a07a2050fa567afddabb8a452ae4b0578773cc65464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xBB SWAP8 0xDB JUMPI 0xB7 SWAP3 PUSH2 0x2278 SHR GAS SMOD LOG2 SDIV 0xF 0xA5 PUSH8 0xAFDDABB8A452AE4B SDIV PUSH25 0x773CC65464736F6C6343000816003300000000000000000000 ",
							"sourceMap": "203:15250:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047bb97db57b7926122781c5a07a2050fa567afddabb8a452ae4b0578773cc65464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xBB SWAP8 0xDB JUMPI 0xB7 SWAP3 PUSH2 0x2278 SHR GAS SMOD LOG2 SDIV 0xF 0xA5 PUSH8 0xAFDDABB8A452AE4B SDIV PUSH25 0x773CC65464736F6C6343000816003300000000000000000000 ",
							"sourceMap": "203:15250:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047bb97db57b7926122781c5a07a2050fa567afddabb8a452ae4b0578773cc65464736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15453,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15453,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15453,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15453,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15453,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15453,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15453,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15453,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15453,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"contracts/EduToken.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x94ead5f501c98a6e8e612388db946b6d44b38cb32751ff275324efb5d4f19d17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://410dfe51b7c1f073fc8626456d2eab862e7d949c5065e67bd4688990e405868f\",\"dweb:/ipfs/QmfUo3r8GqELwFK8oHmy5WGUbw2kfV1BcS9MBhwqtFynKJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/EduToken.sol:37:28:\n   |\n37 |     function getRewardCost(uint256 rewardId) internal pure returns (uint256) {\n   |                            ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1552,
					"file": "contracts/EduToken.sol",
					"start": 1536
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/EduToken.sol": {
				"ast": {
					"absolutePath": "contracts/EduToken.sol",
					"exportedSymbols": {
						"AccessControl": [
							418
						],
						"Arrays": [
							2053
						],
						"Context": [
							2075
						],
						"ERC1155": [
							1689
						],
						"ERC165": [
							2209
						],
						"EduToken": [
							122
						],
						"IAccessControl": [
							501
						],
						"IERC1155": [
							1812
						],
						"IERC1155Errors": [
							638
						],
						"IERC1155MetadataURI": [
							1870
						],
						"IERC1155Receiver": [
							1854
						],
						"IERC165": [
							2221
						]
					},
					"id": 123,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 123,
							"sourceUnit": 1690,
							"src": "61:112:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 123,
							"sourceUnit": 419,
							"src": "175:111:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "ERC1155",
										"nameLocations": [
											"311:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1689,
										"src": "311:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "311:7:0"
								},
								{
									"baseName": {
										"id": 6,
										"name": "AccessControl",
										"nameLocations": [
											"320:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 418,
										"src": "320:13:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "320:13:0"
								}
							],
							"canonicalName": "EduToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 122,
							"linearizedBaseContracts": [
								122,
								418,
								1689,
								638,
								1870,
								1812,
								2209,
								2221,
								501,
								2075
							],
							"name": "EduToken",
							"nameLocation": "299:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "86e5c15a",
									"id": 12,
									"mutability": "constant",
									"name": "TEACHER_ROLE",
									"nameLocation": "412:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 122,
									"src": "388:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 8,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "388:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "544541434845525f524f4c45",
												"id": 10,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "437:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_d16e204b8a42a15ab0ea6bb8ec1ecdfbe69f38074fc865323af19efe7d9573d9",
													"typeString": "literal_string \"TEACHER_ROLE\""
												},
												"value": "TEACHER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_d16e204b8a42a15ab0ea6bb8ec1ecdfbe69f38074fc865323af19efe7d9573d9",
													"typeString": "literal_string \"TEACHER_ROLE\""
												}
											],
											"id": 9,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "427:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "427:25:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f7be43fb",
									"id": 17,
									"mutability": "constant",
									"name": "STUDENT_ROLE",
									"nameLocation": "483:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 122,
									"src": "459:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 13,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "459:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "53545544454e545f524f4c45",
												"id": 15,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "508:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_36a5c4aaacb6b388bbd448bf11096b7dafc5652bcc9046084fd0e95b1fb0b2cc",
													"typeString": "literal_string \"STUDENT_ROLE\""
												},
												"value": "STUDENT_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_36a5c4aaacb6b388bbd448bf11096b7dafc5652bcc9046084fd0e95b1fb0b2cc",
													"typeString": "literal_string \"STUDENT_ROLE\""
												}
											],
											"id": 14,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "498:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "498:25:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "595:93:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 24,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "616:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 25,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "636:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "640:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "636:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 23,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "606:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "606:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "606:41:0"
											}
										]
									},
									"id": 30,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f6d796170692e636f6d2f6170692f746f6b656e2f7b69647d2e6a736f6e",
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "554:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_be7838470a3c26528d43bae23565234ed295a39bde7b6c68ac16c023b38bf94f",
														"typeString": "literal_string \"https://myapi.com/api/token/{id}.json\""
													},
													"value": "https://myapi.com/api/token/{id}.json"
												}
											],
											"id": 21,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 19,
												"name": "ERC1155",
												"nameLocations": [
													"546:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1689,
												"src": "546:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "546:48:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "595:0:0"
									},
									"scope": 122,
									"src": "532:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "801:211:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 39,
																	"name": "TEACHER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "842:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 40,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "856:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "860:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "856:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 38,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "834:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "834:33:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792074656163686572732063616e2061776172642063726564697473",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "882:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6122524deead21d84ed31b4a09db3da08247d33ad5b6d78a8635067b970e12b2",
																"typeString": "literal_string \"Only teachers can award credits\""
															},
															"value": "Only teachers can award credits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6122524deead21d84ed31b4a09db3da08247d33ad5b6d78a8635067b970e12b2",
																"typeString": "literal_string \"Only teachers can award credits\""
															}
														],
														"id": 37,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "812:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "812:114:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "812:114:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 47,
															"name": "student",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "943:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "952:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 49,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "955:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "963:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 46,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "937:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "937:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "937:29:0"
											}
										]
									},
									"functionSelector": "3ff3226d",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "awardCredits",
									"nameLocation": "746:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "student",
												"nameLocation": "767:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "759:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "784:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "776:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:33:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "801:0:0"
									},
									"scope": 122,
									"src": "737:275:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1122:312:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 61,
																	"name": "STUDENT_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "1163:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 62,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1177:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1181:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1177:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 60,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "1155:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1155:33:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792073747564656e74732063616e20636c61696d2072657761726473",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1203:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f3d6a9ef91016e663229cd6c6ce7239109406c063c093b722046089e796be61",
																"typeString": "literal_string \"Only students can claim rewards\""
															},
															"value": "Only students can claim rewards"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f3d6a9ef91016e663229cd6c6ce7239109406c063c093b722046089e796be61",
																"typeString": "literal_string \"Only students can claim rewards\""
															}
														],
														"id": 59,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1133:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1133:114:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1133:114:0"
											},
											{
												"assignments": [
													69
												],
												"declarations": [
													{
														"constant": false,
														"id": 69,
														"mutability": "mutable",
														"name": "creditCost",
														"nameLocation": "1266:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 89,
														"src": "1258:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 68,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1258:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 73,
												"initialValue": {
													"arguments": [
														{
															"id": 71,
															"name": "rewardId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "1293:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 70,
														"name": "getRewardCost",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1279:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1279:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1258:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 75,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1355:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1359:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1355:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1367:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 78,
															"name": "creditCost",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "1370:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 74,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "1349:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1349:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "1349:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 82,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1398:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1402:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1398:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "rewardId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "1410:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1420:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "",
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1423:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 81,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "1392:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1392:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "1392:34:0"
											}
										]
									},
									"functionSelector": "ae169a50",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "1083:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "rewardId",
												"nameLocation": "1103:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1095:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1094:18:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1122:0:0"
									},
									"scope": 122,
									"src": "1074:360:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1586:96:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3130",
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1672:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10_by_1",
														"typeString": "int_const 10"
													},
													"value": "10"
												},
												"functionReturnParameters": 96,
												"id": 98,
												"nodeType": "Return",
												"src": "1665:9:0"
											}
										]
									},
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardCost",
									"nameLocation": "1522:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "rewardId",
												"nameLocation": "1544:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1536:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1535:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1577:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1576:9:0"
									},
									"scope": 122,
									"src": "1513:169:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										185,
										730
									],
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1855:138:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 112,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "1912:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 110,
																"name": "ERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1689,
																"src": "1886:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC1155_$1689_$",
																	"typeString": "type(contract ERC1155)"
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1894:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 730,
															"src": "1886:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1886:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 116,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "1973:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 114,
																"name": "AccessControl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "1941:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_AccessControl_$418_$",
																	"typeString": "type(contract AccessControl)"
																}
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1955:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 185,
															"src": "1941:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1941:44:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1886:99:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 109,
												"id": 119,
												"nodeType": "Return",
												"src": "1866:119:0"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1699:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 106,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 104,
												"name": "ERC1155",
												"nameLocations": [
													"1802:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1689,
												"src": "1802:7:0"
											},
											{
												"id": 105,
												"name": "AccessControl",
												"nameLocations": [
													"1811:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 418,
												"src": "1811:13:0"
											}
										],
										"src": "1793:32:0"
									},
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1724:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1717:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 101,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1717:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1716:20:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1844:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 107,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1844:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1843:6:0"
									},
									"scope": 122,
									"src": "1690:303:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 123,
							"src": "290:1706:0",
							"usedErrors": [
								428,
								431,
								603,
								608,
								613,
								620,
								625,
								630,
								637
							],
							"usedEvents": [
								440,
								449,
								458,
								1709,
								1724,
								1733,
								1740
							]
						}
					],
					"src": "33:1963:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							418
						],
						"Context": [
							2075
						],
						"ERC165": [
							2209
						],
						"IAccessControl": [
							501
						]
					},
					"id": 419,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 124,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 126,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 419,
							"sourceUnit": 502,
							"src": "134:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 125,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 501,
										"src": "142:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 128,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 419,
							"sourceUnit": 2076,
							"src": "187:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 127,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2075,
										"src": "195:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 419,
							"sourceUnit": 2210,
							"src": "233:57:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 129,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2209,
										"src": "241:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 132,
										"name": "Context",
										"nameLocations": [
											"1988:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2075,
										"src": "1988:7:1"
									},
									"id": 133,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:1"
								},
								{
									"baseName": {
										"id": 134,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 501,
										"src": "1997:14:1"
									},
									"id": 135,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:1"
								},
								{
									"baseName": {
										"id": 136,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2209,
										"src": "2013:6:1"
									},
									"id": 137,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:1"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 418,
							"linearizedBaseContracts": [
								418,
								2209,
								2221,
								501,
								2075
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 144,
									"members": [
										{
											"constant": false,
											"id": 141,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "2052:40:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 140,
												"keyName": "account",
												"keyNameLocation": "2068:7:1",
												"keyType": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 143,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 144,
											"src": "2102:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 142,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:1",
									"nodeType": "StructDefinition",
									"scope": 418,
									"src": "2026:100:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 149,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 418,
									"src": "2132:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$144_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 148,
										"keyName": "role",
										"keyNameLocation": "2148:4:1",
										"keyType": {
											"id": 145,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$144_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 147,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 146,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 144,
												"src": "2156:8:1"
											},
											"referencedDeclaration": 144,
											"src": "2156:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$144_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 152,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 418,
									"src": "2187:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 150,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 151,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "2454:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "2475:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 157,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															216,
															237
														],
														"referencedDeclaration": 216,
														"src": "2464:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:1"
											},
											{
												"id": 161,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:1"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 163,
									"name": "onlyRole",
									"nameLocation": "2431:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2440:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 154,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:1"
									},
									"src": "2422:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2208
									],
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "2656:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 172,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "2673:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 174,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "2693:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$501_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$501_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 173,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$501",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:1",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 180,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "2748:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 178,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$418_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2208,
															"src": "2724:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 171,
												"id": 183,
												"nodeType": "Return",
												"src": "2666:94:1"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 168,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:1"
									},
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2592:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 165,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:1"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2650:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:1"
									},
									"scope": 418,
									"src": "2565:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										468
									],
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2937:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 195,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "2954:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$144_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 197,
															"indexExpression": {
																"id": 196,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "2961:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$144_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:1",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 141,
														"src": "2954:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 200,
													"indexExpression": {
														"id": 199,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "2975:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 194,
												"id": 201,
												"nodeType": "Return",
												"src": "2947:36:1"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2871:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 187,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2885:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2931:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:1"
									},
									"scope": 418,
									"src": "2854:136:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "3255:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 210,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "3276:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 211,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2065,
																"src": "3282:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 209,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															216,
															237
														],
														"referencedDeclaration": 237,
														"src": "3265:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3219:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 205,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 418,
									"src": "3199:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3505:124:1",
										"statements": [
											{
												"condition": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 225,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "3528:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 226,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "3534:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 224,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "3520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 235,
												"nodeType": "IfStatement",
												"src": "3515:108:1",
												"trueBody": {
													"id": 234,
													"nodeType": "Block",
													"src": "3544:79:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 230,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "3598:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 231,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "3607:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 229,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "3565:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 233,
															"nodeType": "RevertStatement",
															"src": "3558:54:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3452:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3466:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:1"
									},
									"scope": 418,
									"src": "3432:197:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										476
									],
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "3884:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 245,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "3901:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$144_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 247,
														"indexExpression": {
															"id": 246,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3908:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$144_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:1",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 143,
													"src": "3901:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 244,
												"id": 249,
												"nodeType": "Return",
												"src": "3894:29:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3832:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 239,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3875:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:1"
									},
									"scope": 418,
									"src": "3810:120:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										484
									],
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "4320:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 265,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4341:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 266,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4347:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 264,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "4330:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:1"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 260,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4313:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 259,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "4300:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 262,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 258,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 163,
												"src": "4291:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "4245:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "4259:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:1"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:1"
									},
									"scope": 418,
									"src": "4226:136:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										492
									],
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "4737:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "4759:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 285,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "4765:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 283,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "4747:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:1"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 279,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "4730:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 278,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "4717:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 281,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 277,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 163,
												"src": "4708:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "4662:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 272,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "4676:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:1"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:1"
									},
									"scope": 418,
									"src": "4642:138:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										500
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "5407:166:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 297,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5421:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 298,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2065,
															"src": "5443:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 305,
												"nodeType": "IfStatement",
												"src": "5417:102:1",
												"trueBody": {
													"id": 304,
													"nodeType": "Block",
													"src": "5457:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 301,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "5478:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 303,
															"nodeType": "RevertStatement",
															"src": "5471:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "5541:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 308,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "5547:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 306,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "5529:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:1"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5350:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 291,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5364:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:1"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:1"
									},
									"scope": 418,
									"src": "5328:245:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "5771:174:1",
										"statements": [
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "5781:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 320,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 325,
												"initialValue": {
													"arguments": [
														{
															"id": 323,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5822:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 322,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "5809:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:1"
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 326,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "5837:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$144_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 328,
															"indexExpression": {
																"id": 327,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "5844:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$144_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:1",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 143,
														"src": "5837:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 330,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5862:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5903:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 335,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "5909:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 336,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5928:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 333,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "5886:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "5881:57:1"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "5721:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "5735:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 316,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:1"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:1"
									},
									"scope": 418,
									"src": "5698:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "6262:233:1",
										"statements": [
											{
												"condition": {
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 351,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "6285:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 352,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "6291:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 350,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "6277:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 376,
													"nodeType": "Block",
													"src": "6452:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 349,
															"id": 375,
															"nodeType": "Return",
															"src": "6466:12:1"
														}
													]
												},
												"id": 377,
												"nodeType": "IfStatement",
												"src": "6272:217:1",
												"trueBody": {
													"id": 373,
													"nodeType": "Block",
													"src": "6301:145:1",
													"statements": [
														{
															"expression": {
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 355,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 149,
																				"src": "6315:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$144_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 357,
																			"indexExpression": {
																				"id": 356,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 343,
																				"src": "6322:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$144_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 358,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 141,
																		"src": "6315:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 360,
																	"indexExpression": {
																		"id": 359,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "6336:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 363,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 365,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "6382:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 366,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "6388:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 367,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2065,
																			"src": "6397:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 364,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "6370:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 370,
															"nodeType": "EmitStatement",
															"src": "6365:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 349,
															"id": 372,
															"nodeType": "Return",
															"src": "6424:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:1",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "6199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "6213:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "6256:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:1"
									},
									"scope": 418,
									"src": "6179:316:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "6814:233:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 390,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "6836:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 391,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6842:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 389,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "6828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 414,
													"nodeType": "Block",
													"src": "7004:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 388,
															"id": 413,
															"nodeType": "Return",
															"src": "7018:12:1"
														}
													]
												},
												"id": 415,
												"nodeType": "IfStatement",
												"src": "6824:217:1",
												"trueBody": {
													"id": 411,
													"nodeType": "Block",
													"src": "6852:146:1",
													"statements": [
														{
															"expression": {
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 393,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 149,
																				"src": "6866:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$144_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 395,
																			"indexExpression": {
																				"id": 394,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 382,
																				"src": "6873:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$144_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 396,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 141,
																		"src": "6866:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 398,
																	"indexExpression": {
																		"id": 397,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "6887:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 401,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 403,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 382,
																		"src": "6934:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 404,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "6940:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 405,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2065,
																			"src": "6949:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 402,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "6922:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 408,
															"nodeType": "EmitStatement",
															"src": "6917:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 388,
															"id": 410,
															"nodeType": "Return",
															"src": "6976:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:1",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "6751:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "6765:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:1"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "6808:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:1"
									},
									"scope": 418,
									"src": "6730:317:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 419,
							"src": "1953:5096:1",
							"usedErrors": [
								428,
								431
							],
							"usedEvents": [
								440,
								449,
								458
							]
						}
					],
					"src": "108:6942:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							501
						]
					},
					"id": 502,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 420,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:2",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 501,
							"linearizedBaseContracts": [
								501
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:2",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 428,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "357:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "374:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 425,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:2"
									},
									"src": "318:76:2"
								},
								{
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:2",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 431,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:2"
									},
									"src": "553:37:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 440,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "878:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 433,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "900:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 435,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "935:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 437,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:2"
									},
									"src": "855:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "971:212:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 449,
									"name": "RoleGranted",
									"nameLocation": "1194:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1222:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "1206:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 442,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1244:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "1228:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1269:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "1253:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1253:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:71:2"
									},
									"src": "1188:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "1283:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 458,
									"name": "RoleRevoked",
									"nameLocation": "1569:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1597:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1581:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 451,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1619:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1603:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1644:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1628:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1580:71:2"
									},
									"src": "1563:89:2"
								},
								{
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "1658:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 468,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1748:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1764:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "1756:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 460,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1778:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "1770:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1755:31:2"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "1810:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1810:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1809:6:2"
									},
									"scope": 501,
									"src": "1739:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1822:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 476,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2020:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2041:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2033:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 470,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2033:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:14:2"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2070:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 473,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:9:2"
									},
									"scope": 501,
									"src": "2011:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "2085:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2338:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2356:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "2348:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 478,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2370:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "2362:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2362:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:31:2"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2387:0:2"
									},
									"scope": 501,
									"src": "2329:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "2394:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2631:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2650:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "2642:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 486,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2642:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2641:31:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2681:0:2"
									},
									"scope": 501,
									"src": "2622:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "2688:491:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3193:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3214:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "3206:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 494,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3206:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3228:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "3220:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3220:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3205:42:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3256:0:2"
									},
									"scope": 501,
									"src": "3184:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 502,
							"src": "226:3033:2",
							"usedErrors": [
								428,
								431
							],
							"usedEvents": [
								440,
								449,
								458
							]
						}
					],
					"src": "109:3151:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							638
						],
						"IERC20Errors": [
							543
						],
						"IERC721Errors": [
							591
						]
					},
					"id": 639,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 503,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 504,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:3",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 543,
							"linearizedBaseContracts": [
								543
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 513,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "654:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "670:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "687:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:3"
									},
									"src": "623:80:3"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 518,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "891:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:3"
									},
									"src": "866:41:3"
								},
								{
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 523,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1104:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:3"
									},
									"src": "1077:45:3"
								},
								{
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 532,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1511:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1528:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1547:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:3"
									},
									"src": "1478:85:3"
								},
								{
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 537,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "1775:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:3"
									},
									"src": "1748:45:3"
								},
								{
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 542,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "2025:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:3"
									},
									"src": "1999:43:3"
								}
							],
							"scope": 639,
							"src": "280:1764:3",
							"usedErrors": [
								513,
								518,
								523,
								532,
								537,
								542
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 544,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:3",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 591,
							"linearizedBaseContracts": [
								591
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 549,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "2469:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:3"
									},
									"src": "2444:40:3"
								},
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 554,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "2656:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:3"
									},
									"src": "2627:46:3"
								},
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 563,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3000:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3016:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3033:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:3"
									},
									"src": "2973:75:3"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 568,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "3237:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:3"
									},
									"src": "3211:42:3"
								},
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 573,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "3451:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:3"
									},
									"src": "3423:46:3"
								},
								{
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 580,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3760:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3778:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:3"
									},
									"src": "3727:68:3"
								},
								{
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 585,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "4008:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:3"
									},
									"src": "3980:46:3"
								},
								{
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 590,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4262:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:3"
									},
									"src": "4234:46:3"
								}
							],
							"scope": 639,
							"src": "2190:2092:3",
							"usedErrors": [
								549,
								554,
								563,
								568,
								573,
								580,
								585,
								590
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 592,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:3",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 638,
							"linearizedBaseContracts": [
								638
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 603,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "4860:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "4876:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "4893:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "4909:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:3"
									},
									"src": "4827:99:3"
								},
								{
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 608,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "5116:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:3"
									},
									"src": "5089:43:3"
								},
								{
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 613,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5331:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:3"
									},
									"src": "5302:47:3"
								},
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 620,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "5651:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "5669:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:3"
									},
									"src": "5616:68:3"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 625,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "5898:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:3"
									},
									"src": "5869:47:3"
								},
								{
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 630,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6153:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:3"
									},
									"src": "6124:47:3"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 637,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "6494:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "6513:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:3"
									},
									"src": "6462:73:3"
								}
							],
							"scope": 639,
							"src": "4430:2107:3",
							"usedErrors": [
								603,
								608,
								613,
								620,
								625,
								630,
								637
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							2053
						],
						"Context": [
							2075
						],
						"ERC1155": [
							1689
						],
						"ERC165": [
							2209
						],
						"IERC1155": [
							1812
						],
						"IERC1155Errors": [
							638
						],
						"IERC1155MetadataURI": [
							1870
						],
						"IERC1155Receiver": [
							1854
						],
						"IERC165": [
							2221
						]
					},
					"id": 1690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 640,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 642,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1690,
							"sourceUnit": 1813,
							"src": "135:40:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 641,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1812,
										"src": "143:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 644,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1690,
							"sourceUnit": 1855,
							"src": "176:56:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 643,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1854,
										"src": "184:16:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 646,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1690,
							"sourceUnit": 1871,
							"src": "233:73:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 645,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1870,
										"src": "241:19:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 648,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1690,
							"sourceUnit": 2076,
							"src": "307:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 647,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2075,
										"src": "315:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 651,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1690,
							"sourceUnit": 2210,
							"src": "356:69:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 649,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2221,
										"src": "364:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 650,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2209,
										"src": "373:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 653,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1690,
							"sourceUnit": 2054,
							"src": "426:46:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 652,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2053,
										"src": "434:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 655,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1690,
							"sourceUnit": 639,
							"src": "473:67:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 654,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 638,
										"src": "481:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 657,
										"name": "Context",
										"nameLocations": [
											"756:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2075,
										"src": "756:7:4"
									},
									"id": 658,
									"nodeType": "InheritanceSpecifier",
									"src": "756:7:4"
								},
								{
									"baseName": {
										"id": 659,
										"name": "ERC165",
										"nameLocations": [
											"765:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2209,
										"src": "765:6:4"
									},
									"id": 660,
									"nodeType": "InheritanceSpecifier",
									"src": "765:6:4"
								},
								{
									"baseName": {
										"id": 661,
										"name": "IERC1155",
										"nameLocations": [
											"773:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1812,
										"src": "773:8:4"
									},
									"id": 662,
									"nodeType": "InheritanceSpecifier",
									"src": "773:8:4"
								},
								{
									"baseName": {
										"id": 663,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"783:19:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1870,
										"src": "783:19:4"
									},
									"id": 664,
									"nodeType": "InheritanceSpecifier",
									"src": "783:19:4"
								},
								{
									"baseName": {
										"id": 665,
										"name": "IERC1155Errors",
										"nameLocations": [
											"804:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 638,
										"src": "804:14:4"
									},
									"id": 666,
									"nodeType": "InheritanceSpecifier",
									"src": "804:14:4"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 656,
								"nodeType": "StructuredDocumentation",
								"src": "542:184:4",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1689,
							"linearizedBaseContracts": [
								1689,
								638,
								1870,
								1812,
								2209,
								2221,
								2075
							],
							"name": "ERC1155",
							"nameLocation": "745:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 670,
									"libraryName": {
										"id": 667,
										"name": "Arrays",
										"nameLocations": [
											"831:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2053,
										"src": "831:6:4"
									},
									"nodeType": "UsingForDirective",
									"src": "825:27:4",
									"typeName": {
										"baseType": {
											"id": 668,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 669,
										"nodeType": "ArrayTypeName",
										"src": "842:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 674,
									"libraryName": {
										"id": 671,
										"name": "Arrays",
										"nameLocations": [
											"863:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2053,
										"src": "863:6:4"
									},
									"nodeType": "UsingForDirective",
									"src": "857:27:4",
									"typeName": {
										"baseType": {
											"id": 672,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 673,
										"nodeType": "ArrayTypeName",
										"src": "874:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 680,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "957:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1689,
									"src": "890:76:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 679,
										"keyName": "id",
										"keyNameLocation": "906:2:4",
										"keyType": {
											"id": 675,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "890:58:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 678,
											"keyName": "account",
											"keyNameLocation": "928:7:4",
											"keyType": {
												"id": 676,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "912:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 677,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 686,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1043:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1689,
									"src": "973:88:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 685,
										"keyName": "account",
										"keyNameLocation": "989:7:4",
										"keyType": {
											"id": 681,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "973:61:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 684,
											"keyName": "operator",
											"keyNameLocation": "1016:8:4",
											"keyType": {
												"id": 682,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1000:33:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 683,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1028:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 688,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1197:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1689,
									"src": "1182:19:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 687,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1182:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "1283:30:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 695,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "1301:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 694,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "1293:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "1293:13:4"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "1208:38:4",
										"text": " @dev See {_setURI}."
									},
									"id": 699,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1277:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "1263:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 690,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:4"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:4"
									},
									"scope": 1689,
									"src": "1251:62:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2208,
										2220
									],
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "1488:197:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 710,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "1517:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 712,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1812,
																			"src": "1537:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1812_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1812_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 711,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1532:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1532:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1812",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1547:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1532:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1517:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 716,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "1574:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 718,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1870,
																			"src": "1594:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1870_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1870_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 717,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1589:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1589:25:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1870",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1615:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1589:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1574:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1517:109:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 725,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "1666:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 723,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1642:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1689_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1648:17:4",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2208,
															"src": "1642:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:161:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 709,
												"id": 728,
												"nodeType": "Return",
												"src": "1498:180:4"
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "1319:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1389:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 706,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 704,
												"name": "ERC165",
												"nameLocations": [
													"1456:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2209,
												"src": "1456:6:4"
											},
											{
												"id": 705,
												"name": "IERC165",
												"nameLocations": [
													"1464:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2221,
												"src": "1464:7:4"
											}
										],
										"src": "1447:25:4"
									},
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1414:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "1407:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 701,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1407:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:20:4"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "1482:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 707,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:6:4"
									},
									"scope": 1689,
									"src": "1380:305:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1869
									],
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "2159:28:4",
										"statements": [
											{
												"expression": {
													"id": 738,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 688,
													"src": "2176:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 737,
												"id": 739,
												"nodeType": "Return",
												"src": "2169:11:4"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "1691:388:4",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2093:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2097:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:4"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2144:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 735,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:4"
									},
									"scope": 1689,
									"src": "2084:103:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1750
									],
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "2333:46:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 751,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "2350:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 753,
														"indexExpression": {
															"id": 752,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "2360:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2350:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 755,
													"indexExpression": {
														"id": 754,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "2364:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2350:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 750,
												"id": 756,
												"nodeType": "Return",
												"src": "2343:29:4"
											}
										]
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "2193:49:4",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "2266:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2291:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "2283:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:29:4"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "2324:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:4"
									},
									"scope": 1689,
									"src": "2247:132:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1763
									],
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "2678:410:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 771,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "2692:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2701:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2692:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 773,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "2711:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2715:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2711:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 784,
												"nodeType": "IfStatement",
												"src": "2688:121:4",
												"trueBody": {
													"id": 783,
													"nodeType": "Block",
													"src": "2723:86:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 777,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "2770:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2774:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2770:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 779,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 762,
																			"src": "2782:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2791:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2782:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 776,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "2744:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:54:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 782,
															"nodeType": "RevertStatement",
															"src": "2737:61:4"
														}
													]
												}
											},
											{
												"assignments": [
													789
												],
												"declarations": [
													{
														"constant": false,
														"id": 789,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2836:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 827,
														"src": "2819:30:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 787,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2819:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 788,
															"nodeType": "ArrayTypeName",
															"src": "2819:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 793,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "2866:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2875:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2866:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2852:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 790,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2856:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 791,
															"nodeType": "ArrayTypeName",
															"src": "2856:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2819:63:4"
											},
											{
												"body": {
													"id": 823,
													"nodeType": "Block",
													"src": "2939:112:4",
													"statements": [
														{
															"expression": {
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 808,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "2953:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 810,
																	"indexExpression": {
																		"id": 809,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "2967:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2953:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 814,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "3010:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 812,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 762,
																					"src": "2982:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2991:18:4",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2052,
																				"src": "2982:27:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2982:30:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 818,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "3037:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 816,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 765,
																					"src": "3014:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3018:18:4",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2039,
																				"src": "3014:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3014:25:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 811,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "2972:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2972:68:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:87:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 822,
															"nodeType": "ExpressionStatement",
															"src": "2953:87:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 801,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "2913:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 802,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "2917:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2917:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2913:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"initializationExpression": {
													"assignments": [
														798
													],
													"declarations": [
														{
															"constant": false,
															"id": 798,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2906:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 824,
															"src": "2898:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 797,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2898:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 800,
													"initialValue": {
														"hexValue": "30",
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2910:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2898:13:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2934:3:4",
														"subExpression": {
															"id": 805,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "2936:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 807,
													"nodeType": "ExpressionStatement",
													"src": "2934:3:4"
												},
												"nodeType": "ForStatement",
												"src": "2893:158:4"
											},
											{
												"expression": {
													"id": 825,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 789,
													"src": "3068:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 770,
												"id": 826,
												"nodeType": "Return",
												"src": "3061:20:4"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "2385:146:4",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2545:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2586:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "2569:25:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 760,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2569:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 761,
													"nodeType": "ArrayTypeName",
													"src": "2569:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2621:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "2604:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 763,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2604:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 764,
													"nodeType": "ArrayTypeName",
													"src": "2604:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2559:71:4"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "2660:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 767,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 768,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:18:4"
									},
									"scope": 1689,
									"src": "2536:552:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1771
									],
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "3231:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 837,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2065,
																"src": "3260:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 839,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "3274:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 840,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "3284:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 836,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "3241:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "3241:52:4"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "3094:57:4",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3165:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3191:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "3183:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3206:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "3201:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 832,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3201:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:33:4"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:4"
									},
									"scope": 1689,
									"src": "3156:144:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1781
									],
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "3463:61:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 854,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "3480:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 856,
														"indexExpression": {
															"id": 855,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "3499:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3480:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 858,
													"indexExpression": {
														"id": 857,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "3508:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3480:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 853,
												"id": 859,
												"nodeType": "Return",
												"src": "3473:44:4"
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "3306:56:4",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3376:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3401:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "3393:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3418:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "3410:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:35:4"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "3457:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3457:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:6:4"
									},
									"scope": 1689,
									"src": "3367:157:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1795
									],
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "3704:238:4",
										"statements": [
											{
												"assignments": [
													876
												],
												"declarations": [
													{
														"constant": false,
														"id": 876,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3722:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "3714:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 875,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3714:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 879,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 877,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2065,
														"src": "3731:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3714:29:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 880,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "3757:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 881,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "3765:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3757:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3775:31:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 884,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 864,
																	"src": "3793:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 885,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "3799:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 883,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 861,
																"src": "3776:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3776:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3757:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 895,
												"nodeType": "IfStatement",
												"src": "3753:129:4",
												"trueBody": {
													"id": 894,
													"nodeType": "Block",
													"src": "3808:74:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 890,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "3858:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 891,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 864,
																		"src": "3866:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 889,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "3829:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3829:42:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 893,
															"nodeType": "RevertStatement",
															"src": "3822:49:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 897,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "3909:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "3915:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "3919:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 900,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "3923:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 901,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "3930:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 896,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "3891:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "3891:44:4"
											}
										]
									},
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "3530:56:4",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3600:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3625:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "3617:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3639:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "3631:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3651:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "3643:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3663:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "3655:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "3670:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 871,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3670:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:72:4"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:4"
									},
									"scope": 1689,
									"src": "3591:351:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1811
									],
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "4198:245:4",
										"statements": [
											{
												"assignments": [
													922
												],
												"declarations": [
													{
														"constant": false,
														"id": 922,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4216:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 950,
														"src": "4208:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 921,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4208:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 925,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 923,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2065,
														"src": "4225:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:29:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 926,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "4251:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 927,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "4259:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4251:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4269:31:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 930,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "4287:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 931,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "4293:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 929,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 861,
																"src": "4270:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4270:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4251:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 941,
												"nodeType": "IfStatement",
												"src": "4247:129:4",
												"trueBody": {
													"id": 940,
													"nodeType": "Block",
													"src": "4302:74:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 936,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 922,
																		"src": "4352:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 937,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "4360:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 935,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "4323:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:42:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 939,
															"nodeType": "RevertStatement",
															"src": "4316:49:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 943,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "4408:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "4414:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "4418:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 946,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "4423:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 947,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "4431:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 942,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "4385:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4385:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "4385:51:4"
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "3948:61:4",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4023:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4062:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "4054:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4084:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "4076:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4113:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "4096:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 911,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4096:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 912,
													"nodeType": "ArrayTypeName",
													"src": "4096:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4143:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "4126:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 914,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4126:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 915,
													"nodeType": "ArrayTypeName",
													"src": "4126:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4172:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "4159:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4159:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:138:4"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:0:4"
									},
									"scope": 1689,
									"src": "4014:429:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "5251:1174:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 965,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "5265:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5265:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 967,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "5279:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5279:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5265:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 978,
												"nodeType": "IfStatement",
												"src": "5261:117:4",
												"trueBody": {
													"id": 977,
													"nodeType": "Block",
													"src": "5294:84:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 971,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "5341:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5345:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5341:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 973,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 962,
																			"src": "5353:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5360:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5353:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 970,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "5315:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:52:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 976,
															"nodeType": "RevertStatement",
															"src": "5308:59:4"
														}
													]
												}
											},
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5396:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 1103,
														"src": "5388:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 979,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5388:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 983,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 981,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2065,
														"src": "5407:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5388:31:4"
											},
											{
												"body": {
													"id": 1064,
													"nodeType": "Block",
													"src": "5471:650:4",
													"statements": [
														{
															"assignments": [
																996
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 996,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5493:2:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1064,
																	"src": "5485:10:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 995,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5485:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1001,
															"initialValue": {
																"arguments": [
																	{
																		"id": 999,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "5521:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 997,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "5498:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5502:18:4",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2039,
																	"src": "5498:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:25:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5485:38:4"
														},
														{
															"assignments": [
																1003
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1003,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5545:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1064,
																	"src": "5537:13:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1002,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5537:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1008,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1006,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "5579:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1004,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "5553:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5560:18:4",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2039,
																	"src": "5553:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5553:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5537:44:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1009,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "5600:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5616:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5608:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1010,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5608:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5608:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5600:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1047,
															"nodeType": "IfStatement",
															"src": "5596:420:4",
															"trueBody": {
																"id": 1046,
																"nodeType": "Block",
																"src": "5620:396:4",
																"statements": [
																	{
																		"assignments": [
																			1016
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1016,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5646:11:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1046,
																				"src": "5638:19:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1015,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5638:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1022,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1017,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 680,
																					"src": "5660:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1019,
																				"indexExpression": {
																					"id": 1018,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "5670:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5660:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1021,
																			"indexExpression": {
																				"id": 1020,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 954,
																				"src": "5674:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5660:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5638:41:4"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1023,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1016,
																				"src": "5701:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1024,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1003,
																				"src": "5715:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5701:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1034,
																		"nodeType": "IfStatement",
																		"src": "5697:129:4",
																		"trueBody": {
																			"id": 1033,
																			"nodeType": "Block",
																			"src": "5722:104:4",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 1027,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 954,
																								"src": "5778:4:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1028,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1016,
																								"src": "5784:11:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1029,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1003,
																								"src": "5797:5:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1030,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 996,
																								"src": "5804:2:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1026,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 603,
																							"src": "5751:26:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 1031,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5751:56:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1032,
																					"nodeType": "RevertStatement",
																					"src": "5744:63:4"
																				}
																			]
																		}
																	},
																	{
																		"id": 1045,
																		"nodeType": "UncheckedBlock",
																		"src": "5843:159:4",
																		"statements": [
																			{
																				"expression": {
																					"id": 1043,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 1035,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 680,
																								"src": "5942:9:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 1038,
																							"indexExpression": {
																								"id": 1036,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 996,
																								"src": "5952:2:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5942:13:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 1039,
																						"indexExpression": {
																							"id": 1037,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 954,
																							"src": "5956:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5942:19:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1042,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1040,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1016,
																							"src": "5964:11:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 1041,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1003,
																							"src": "5978:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5964:19:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5942:41:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1044,
																				"nodeType": "ExpressionStatement",
																				"src": "5942:41:4"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1048,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "6034:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6048:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6040:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1049,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6040:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6040:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6034:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1063,
															"nodeType": "IfStatement",
															"src": "6030:81:4",
															"trueBody": {
																"id": 1062,
																"nodeType": "Block",
																"src": "6052:59:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 1054,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 680,
																						"src": "6070:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 1057,
																					"indexExpression": {
																						"id": 1055,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 996,
																						"src": "6080:2:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6070:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1058,
																				"indexExpression": {
																					"id": 1056,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 956,
																					"src": "6084:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6070:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1059,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1003,
																				"src": "6091:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6070:26:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1061,
																		"nodeType": "ExpressionStatement",
																		"src": "6070:26:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 988,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "5450:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 989,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "5454:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5458:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5454:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5450:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1065,
												"initializationExpression": {
													"assignments": [
														985
													],
													"declarations": [
														{
															"constant": false,
															"id": 985,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5443:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1065,
															"src": "5435:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 984,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5435:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 987,
													"initialValue": {
														"hexValue": "30",
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5447:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5435:13:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5466:3:4",
														"subExpression": {
															"id": 992,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "5468:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 994,
													"nodeType": "ExpressionStatement",
													"src": "5466:3:4"
												},
												"nodeType": "ForStatement",
												"src": "5430:691:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1066,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "6135:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6139:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6135:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6149:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6135:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1101,
													"nodeType": "Block",
													"src": "6343:76:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1094,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "6376:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1095,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "6386:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1096,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 956,
																		"src": "6392:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1097,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "6396:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1098,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "6401:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 1093,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1724,
																	"src": "6362:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6362:46:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1100,
															"nodeType": "EmitStatement",
															"src": "6357:51:4"
														}
													]
												},
												"id": 1102,
												"nodeType": "IfStatement",
												"src": "6131:288:4",
												"trueBody": {
													"id": 1092,
													"nodeType": "Block",
													"src": "6152:185:4",
													"statements": [
														{
															"assignments": [
																1071
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1071,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6174:2:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1092,
																	"src": "6166:10:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1070,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6166:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1076,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6202:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 1072,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "6179:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6183:18:4",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2039,
																	"src": "6179:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:25:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6166:38:4"
														},
														{
															"assignments": [
																1078
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1078,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6226:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1092,
																	"src": "6218:13:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1077,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1083,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6260:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 1079,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "6234:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6241:18:4",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2039,
																	"src": "6234:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6234:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6218:44:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1085,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "6296:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1086,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "6306:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1087,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 956,
																		"src": "6312:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1088,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1071,
																		"src": "6316:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1089,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1078,
																		"src": "6320:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1084,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1709,
																	"src": "6281:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6281:45:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1091,
															"nodeType": "EmitStatement",
															"src": "6276:50:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "4449:690:4",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5153:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5169:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "5161:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5183:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "5175:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5204:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "5187:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 957,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5187:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 958,
													"nodeType": "ArrayTypeName",
													"src": "5187:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5226:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "5209:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 960,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5209:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 961,
													"nodeType": "ArrayTypeName",
													"src": "5209:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:73:4"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5251:0:4"
									},
									"scope": 1689,
									"src": "5144:1281:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "7195:499:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "7213:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "7219:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1123,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "7223:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1124,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "7228:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1120,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "7205:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7205:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "7205:30:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1127,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "7249:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7263:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7255:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1128,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7255:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7255:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7249:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1178,
												"nodeType": "IfStatement",
												"src": "7245:443:4",
												"trueBody": {
													"id": 1177,
													"nodeType": "Block",
													"src": "7267:421:4",
													"statements": [
														{
															"assignments": [
																1134
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1134,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7289:8:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1177,
																	"src": "7281:16:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1133,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1137,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1135,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2065,
																	"src": "7300:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7300:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7281:31:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1138,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1112,
																		"src": "7330:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7334:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7330:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7344:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7330:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1175,
																"nodeType": "Block",
																"src": "7571:107:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1167,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1134,
																					"src": "7625:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1168,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1107,
																					"src": "7635:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1169,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1109,
																					"src": "7641:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1170,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "7645:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 1171,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1115,
																					"src": "7650:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 1172,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "7658:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 1166,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1672,
																				"src": "7589:35:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7589:74:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1174,
																		"nodeType": "ExpressionStatement",
																		"src": "7589:74:4"
																	}
																]
															},
															"id": 1176,
															"nodeType": "IfStatement",
															"src": "7326:352:4",
															"trueBody": {
																"id": 1165,
																"nodeType": "Block",
																"src": "7347:218:4",
																"statements": [
																	{
																		"assignments": [
																			1143
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1143,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7373:2:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1165,
																				"src": "7365:10:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1142,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7365:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1148,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1146,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7401:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 1144,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "7378:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7382:18:4",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2039,
																				"src": "7378:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7378:25:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7365:38:4"
																	},
																	{
																		"assignments": [
																			1150
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1150,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7429:5:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1165,
																				"src": "7421:13:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1149,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7421:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1155,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1153,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7463:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 1151,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1115,
																					"src": "7437:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1152,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7444:18:4",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2039,
																				"src": "7437:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7437:28:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7421:44:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1157,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1134,
																					"src": "7514:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1158,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1107,
																					"src": "7524:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1159,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1109,
																					"src": "7530:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1160,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1143,
																					"src": "7534:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1161,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1150,
																					"src": "7538:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1162,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "7545:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 1156,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1602,
																				"src": "7483:30:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 1163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7483:67:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1164,
																		"nodeType": "ExpressionStatement",
																		"src": "7483:67:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "6431:568:4",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7013:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7057:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "7049:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7079:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "7071:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7071:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7108:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "7091:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1110,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7091:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1111,
													"nodeType": "ArrayTypeName",
													"src": "7091:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7138:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "7121:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1113,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7121:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1114,
													"nodeType": "ArrayTypeName",
													"src": "7121:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7167:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "7154:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7154:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:138:4"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:0:4"
									},
									"scope": 1689,
									"src": "7004:690:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "8259:355:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1194,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "8273:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8287:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1195,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8273:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1208,
												"nodeType": "IfStatement",
												"src": "8269:88:4",
												"trueBody": {
													"id": 1207,
													"nodeType": "Block",
													"src": "8291:66:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8343:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8335:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1201,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8335:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8335:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1200,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "8312:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:34:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1206,
															"nodeType": "RevertStatement",
															"src": "8305:41:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1209,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "8370:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8386:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8378:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1210,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8378:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8378:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8370:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "IfStatement",
												"src": "8366:88:4",
												"trueBody": {
													"id": 1222,
													"nodeType": "Block",
													"src": "8390:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1218,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8440:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8432:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1216,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8432:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8432:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1215,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "8411:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8411:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1221,
															"nodeType": "RevertStatement",
															"src": "8404:39:4"
														}
													]
												}
											},
											{
												"assignments": [
													1228,
													1231
												],
												"declarations": [
													{
														"constant": false,
														"id": 1228,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8481:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 1245,
														"src": "8464:20:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1226,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8464:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1227,
															"nodeType": "ArrayTypeName",
															"src": "8464:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1231,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8503:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1245,
														"src": "8486:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1229,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8486:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1230,
															"nodeType": "ArrayTypeName",
															"src": "8486:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1236,
												"initialValue": {
													"arguments": [
														{
															"id": 1233,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "8532:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1234,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "8536:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1232,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1688,
														"src": "8513:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8463:79:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1238,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "8579:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1239,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "8585:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1240,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "8589:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1241,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "8594:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1242,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "8602:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1237,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "8552:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8552:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "8552:55:4"
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "7700:446:4",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8160:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8186:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "8178:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8200:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "8192:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8212:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "8204:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8204:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8224:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "8216:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8244:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "8231:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1190,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8231:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:72:4"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8259:0:4"
									},
									"scope": 1689,
									"src": "8151:463:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "9194:266:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1262,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "9208:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9222:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9214:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1263,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9214:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9214:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9208:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1276,
												"nodeType": "IfStatement",
												"src": "9204:88:4",
												"trueBody": {
													"id": 1275,
													"nodeType": "Block",
													"src": "9226:66:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9278:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9270:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1269,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9270:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9270:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1268,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "9247:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9247:34:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1274,
															"nodeType": "RevertStatement",
															"src": "9240:41:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1277,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "9305:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9321:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9313:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1278,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9313:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9313:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9305:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1291,
												"nodeType": "IfStatement",
												"src": "9301:88:4",
												"trueBody": {
													"id": 1290,
													"nodeType": "Block",
													"src": "9325:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9375:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9367:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1284,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9367:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9367:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1283,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "9346:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1289,
															"nodeType": "RevertStatement",
															"src": "9339:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1293,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "9425:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1294,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "9431:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1295,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "9435:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1296,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "9440:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1297,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "9448:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1292,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "9398:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9398:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "9398:55:4"
											}
										]
									},
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "8620:390:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9024:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9064:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "9056:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9086:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "9078:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9078:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9115:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "9098:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1252,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1253,
													"nodeType": "ArrayTypeName",
													"src": "9098:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9145:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "9128:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1255,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9128:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1256,
													"nodeType": "ArrayTypeName",
													"src": "9128:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9174:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "9161:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9161:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9046:138:4"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9194:0:4"
									},
									"scope": 1689,
									"src": "9015:445:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "10338:30:4",
										"statements": [
											{
												"expression": {
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1307,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "10348:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1308,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1304,
														"src": "10355:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10348:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "10348:13:4"
											}
										]
									},
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "9466:811:4",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10291:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10313:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "10299:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1303,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10299:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10298:22:4"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:4"
									},
									"scope": 1689,
									"src": "10282:86:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "10828:264:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1324,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "10842:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10856:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10848:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1325,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10848:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10848:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10842:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1338,
												"nodeType": "IfStatement",
												"src": "10838:88:4",
												"trueBody": {
													"id": 1337,
													"nodeType": "Block",
													"src": "10860:66:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1333,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10912:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10904:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1331,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10904:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10904:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1330,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10881:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10881:34:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1336,
															"nodeType": "RevertStatement",
															"src": "10874:41:4"
														}
													]
												}
											},
											{
												"assignments": [
													1343,
													1346
												],
												"declarations": [
													{
														"constant": false,
														"id": 1343,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10953:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 1363,
														"src": "10936:20:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1341,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10936:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1342,
															"nodeType": "ArrayTypeName",
															"src": "10936:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1346,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10975:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1363,
														"src": "10958:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1344,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10958:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1345,
															"nodeType": "ArrayTypeName",
															"src": "10958:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1351,
												"initialValue": {
													"arguments": [
														{
															"id": 1348,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "11004:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1349,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "11008:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1347,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1688,
														"src": "10985:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10985:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10935:79:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11059:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11051:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1353,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11051:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11051:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1357,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "11063:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1358,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "11067:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1359,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "11072:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1360,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "11080:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1352,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "11024:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11024:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1362,
												"nodeType": "ExpressionStatement",
												"src": "11024:61:4"
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "10374:367:4",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10755:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10769:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "10761:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10781:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "10773:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10773:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10793:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "10785:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10785:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10813:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "10800:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1320,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10800:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:58:4"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10828:0:4"
									},
									"scope": 1689,
									"src": "10746:346:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "11630:175:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1378,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "11644:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11658:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11650:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1379,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11650:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11650:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11644:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1392,
												"nodeType": "IfStatement",
												"src": "11640:88:4",
												"trueBody": {
													"id": 1391,
													"nodeType": "Block",
													"src": "11662:66:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11714:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11706:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1385,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11706:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11706:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1384,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "11683:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:34:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1390,
															"nodeType": "RevertStatement",
															"src": "11676:41:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11764:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1394,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11764:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11764:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1398,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "11776:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1399,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "11780:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1400,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "11785:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1401,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "11793:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1393,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "11737:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11737:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "11737:61:4"
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "11098:420:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11532:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11551:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "11543:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11543:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11572:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "11555:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1368,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11555:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1369,
													"nodeType": "ArrayTypeName",
													"src": "11555:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11594:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "11577:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1371,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11577:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1372,
													"nodeType": "ArrayTypeName",
													"src": "11577:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11615:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "11602:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11602:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11542:78:4"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:4"
									},
									"scope": 1689,
									"src": "11523:282:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1454,
										"nodeType": "Block",
										"src": "12164:264:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1415,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "12178:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12194:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12186:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1416,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12186:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12186:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12178:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1429,
												"nodeType": "IfStatement",
												"src": "12174:88:4",
												"trueBody": {
													"id": 1428,
													"nodeType": "Block",
													"src": "12198:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12248:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12240:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1422,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12240:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12240:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1421,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "12219:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12219:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1427,
															"nodeType": "RevertStatement",
															"src": "12212:39:4"
														}
													]
												}
											},
											{
												"assignments": [
													1434,
													1437
												],
												"declarations": [
													{
														"constant": false,
														"id": 1434,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12289:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 1454,
														"src": "12272:20:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1432,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12272:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1433,
															"nodeType": "ArrayTypeName",
															"src": "12272:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1437,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12311:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1454,
														"src": "12294:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1435,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1436,
															"nodeType": "ArrayTypeName",
															"src": "12294:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1442,
												"initialValue": {
													"arguments": [
														{
															"id": 1439,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "12340:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1440,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "12344:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1438,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1688,
														"src": "12321:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12321:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12271:79:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1444,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "12387:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12401:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12393:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1445,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12393:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12393:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1449,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "12405:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1450,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "12410:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12418:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1443,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "12360:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "12360:61:4"
											}
										]
									},
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "11811:283:4",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 1455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12108:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12122:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "12114:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12114:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12136:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "12128:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12128:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12148:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "12140:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12113:41:4"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12164:0:4"
									},
									"scope": 1689,
									"src": "12099:329:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "12874:175:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1467,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "12888:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12904:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12896:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1468,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12896:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12896:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12888:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1481,
												"nodeType": "IfStatement",
												"src": "12884:88:4",
												"trueBody": {
													"id": 1480,
													"nodeType": "Block",
													"src": "12908:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1476,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12950:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1474,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12950:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12950:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1473,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "12929:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12929:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1479,
															"nodeType": "RevertStatement",
															"src": "12922:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1483,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "13008:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13022:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13014:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1484,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13014:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13014:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1488,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "13026:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1489,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "13031:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13039:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1482,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "12981:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12981:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "12981:61:4"
											}
										]
									},
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "12434:345:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12793:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12812:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "12804:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12804:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12835:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "12818:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1459,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12818:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1460,
													"nodeType": "ArrayTypeName",
													"src": "12818:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12857:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "12840:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1462,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12840:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1463,
													"nodeType": "ArrayTypeName",
													"src": "12840:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12803:61:4"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12874:0:4"
									},
									"scope": 1689,
									"src": "12784:265:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "13361:222:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1504,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1499,
														"src": "13375:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13395:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13387:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1505,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13387:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13387:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13375:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1518,
												"nodeType": "IfStatement",
												"src": "13371:94:4",
												"trueBody": {
													"id": 1517,
													"nodeType": "Block",
													"src": "13399:66:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1513,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13451:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13443:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1511,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13443:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13443:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1510,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "13420:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:34:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1516,
															"nodeType": "RevertStatement",
															"src": "13413:41:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1519,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "13474:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1522,
															"indexExpression": {
																"id": 1520,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1497,
																"src": "13493:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13474:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1523,
														"indexExpression": {
															"id": 1521,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "13500:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13474:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1524,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "13512:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13474:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "13474:46:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1528,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "13550:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1529,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "13557:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1530,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "13567:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1527,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "13535:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13535:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1532,
												"nodeType": "EmitStatement",
												"src": "13530:46:4"
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "13055:208:4",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13277:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13304:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "13296:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13296:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13319:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "13311:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13311:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13334:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "13329:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13329:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13295:48:4"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13361:0:4"
									},
									"scope": 1689,
									"src": "13268:315:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "13953:783:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1550,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1541,
																"src": "13967:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13970:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13967:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13975:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13967:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13984:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13967:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1600,
												"nodeType": "IfStatement",
												"src": "13963:767:4",
												"trueBody": {
													"id": 1599,
													"nodeType": "Block",
													"src": "13987:743:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1579,
																		"nodeType": "Block",
																		"src": "14103:206:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1572,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1568,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1566,
																						"src": "14125:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1569,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1854,
																								"src": "14137:16:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1854_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1570,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14154:17:4",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1835,
																							"src": "14137:34:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1571,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14172:8:4",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14137:43:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14125:55:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1578,
																				"nodeType": "IfStatement",
																				"src": "14121:174:4",
																				"trueBody": {
																					"id": 1577,
																					"nodeType": "Block",
																					"src": "14182:113:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1574,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1541,
																										"src": "14273:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1573,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 613,
																									"src": "14250:22:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1575,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14250:26:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1576,
																							"nodeType": "RevertStatement",
																							"src": "14243:33:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1580,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1567,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1566,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14093:8:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1580,
																				"src": "14086:15:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1565,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14086:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14085:17:4"
																	},
																	"src": "14077:232:4"
																},
																{
																	"block": {
																		"id": 1596,
																		"nodeType": "Block",
																		"src": "14338:382:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1587,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1584,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1582,
																							"src": "14360:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1585,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14367:6:4",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14360:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1586,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14377:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14360:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1594,
																					"nodeType": "Block",
																					"src": "14516:190:4",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14602:86:4",
																								"nodeType": "YulBlock",
																								"src": "14602:86:4",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14639:2:4",
																															"nodeType": "YulLiteral",
																															"src": "14639:2:4",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14643:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "14643:6:4"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14635:3:4",
																														"nodeType": "YulIdentifier",
																														"src": "14635:3:4"
																													},
																													"nativeSrc": "14635:15:4",
																													"nodeType": "YulFunctionCall",
																													"src": "14635:15:4"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14658:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "14658:6:4"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14652:5:4",
																														"nodeType": "YulIdentifier",
																														"src": "14652:5:4"
																													},
																													"nativeSrc": "14652:13:4",
																													"nodeType": "YulFunctionCall",
																													"src": "14652:13:4"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14628:6:4",
																												"nodeType": "YulIdentifier",
																												"src": "14628:6:4"
																											},
																											"nativeSrc": "14628:38:4",
																											"nodeType": "YulFunctionCall",
																											"src": "14628:38:4"
																										},
																										"nativeSrc": "14628:38:4",
																										"nodeType": "YulExpressionStatement",
																										"src": "14628:38:4"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1582,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14643:6:4",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1582,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14658:6:4",
																									"valueSize": 1
																								}
																							],
																							"id": 1593,
																							"nodeType": "InlineAssembly",
																							"src": "14593:95:4"
																						}
																					]
																				},
																				"id": 1595,
																				"nodeType": "IfStatement",
																				"src": "14356:350:4",
																				"trueBody": {
																					"id": 1592,
																					"nodeType": "Block",
																					"src": "14380:130:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1589,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1541,
																										"src": "14488:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1588,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 613,
																									"src": "14465:22:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1590,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14465:26:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1591,
																							"nodeType": "RevertStatement",
																							"src": "14458:33:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1597,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1583,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1582,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14330:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1597,
																				"src": "14317:19:4",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1581,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14317:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14316:21:4"
																	},
																	"src": "14310:410:4"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1559,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1537,
																		"src": "14044:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1560,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1539,
																		"src": "14054:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1561,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1543,
																		"src": "14060:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1562,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1545,
																		"src": "14064:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1563,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1547,
																		"src": "14071:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1556,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1541,
																				"src": "14022:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1555,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1854,
																			"src": "14005:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1854_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14005:20:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1854",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14026:17:4",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1835,
																	"src": "14005:38:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14005:71:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1598,
															"nodeType": "TryStatement",
															"src": "14001:719:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1535,
										"nodeType": "StructuredDocumentation",
										"src": "13589:167:4",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13770:30:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13818:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "13810:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13844:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "13836:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13836:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13866:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "13858:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13886:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "13878:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13878:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13906:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "13898:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13934:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "13921:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1546,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13921:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:144:4"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13953:0:4"
									},
									"scope": 1689,
									"src": "13761:975:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "15141:825:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1620,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "15155:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15158:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15155:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15163:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15155:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15172:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15155:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1670,
												"nodeType": "IfStatement",
												"src": "15151:809:4",
												"trueBody": {
													"id": 1669,
													"nodeType": "Block",
													"src": "15175:785:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1649,
																		"nodeType": "Block",
																		"src": "15328:211:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1642,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1638,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1636,
																						"src": "15350:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1639,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1854,
																								"src": "15362:16:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1854_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1640,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15379:22:4",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1853,
																							"src": "15362:39:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1641,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15402:8:4",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15362:48:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15350:60:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1648,
																				"nodeType": "IfStatement",
																				"src": "15346:179:4",
																				"trueBody": {
																					"id": 1647,
																					"nodeType": "Block",
																					"src": "15412:113:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1644,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1609,
																										"src": "15503:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1643,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 613,
																									"src": "15480:22:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1645,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15480:26:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1646,
																							"nodeType": "RevertStatement",
																							"src": "15473:33:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1650,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1637,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1636,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15305:8:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1650,
																				"src": "15298:15:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1635,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15298:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15280:47:4"
																	},
																	"src": "15272:267:4"
																},
																{
																	"block": {
																		"id": 1666,
																		"nodeType": "Block",
																		"src": "15568:382:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1657,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1654,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1652,
																							"src": "15590:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1655,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15597:6:4",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15590:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1656,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15607:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15590:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1664,
																					"nodeType": "Block",
																					"src": "15746:190:4",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "15832:86:4",
																								"nodeType": "YulBlock",
																								"src": "15832:86:4",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "15869:2:4",
																															"nodeType": "YulLiteral",
																															"src": "15869:2:4",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "15873:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "15873:6:4"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "15865:3:4",
																														"nodeType": "YulIdentifier",
																														"src": "15865:3:4"
																													},
																													"nativeSrc": "15865:15:4",
																													"nodeType": "YulFunctionCall",
																													"src": "15865:15:4"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "15888:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "15888:6:4"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "15882:5:4",
																														"nodeType": "YulIdentifier",
																														"src": "15882:5:4"
																													},
																													"nativeSrc": "15882:13:4",
																													"nodeType": "YulFunctionCall",
																													"src": "15882:13:4"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "15858:6:4",
																												"nodeType": "YulIdentifier",
																												"src": "15858:6:4"
																											},
																											"nativeSrc": "15858:38:4",
																											"nodeType": "YulFunctionCall",
																											"src": "15858:38:4"
																										},
																										"nativeSrc": "15858:38:4",
																										"nodeType": "YulExpressionStatement",
																										"src": "15858:38:4"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1652,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15873:6:4",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1652,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15888:6:4",
																									"valueSize": 1
																								}
																							],
																							"id": 1663,
																							"nodeType": "InlineAssembly",
																							"src": "15823:95:4"
																						}
																					]
																				},
																				"id": 1665,
																				"nodeType": "IfStatement",
																				"src": "15586:350:4",
																				"trueBody": {
																					"id": 1662,
																					"nodeType": "Block",
																					"src": "15610:130:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1659,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1609,
																										"src": "15718:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1658,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 613,
																									"src": "15695:22:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1660,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15695:26:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1661,
																							"nodeType": "RevertStatement",
																							"src": "15688:33:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1667,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1653,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1652,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15560:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1667,
																				"src": "15547:19:4",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1651,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15547:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15546:21:4"
																	},
																	"src": "15540:410:4"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1629,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1605,
																		"src": "15237:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1630,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1607,
																		"src": "15247:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1631,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1612,
																		"src": "15253:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1632,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "15258:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1633,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1617,
																		"src": "15266:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1626,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1609,
																				"src": "15210:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1625,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1854,
																			"src": "15193:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1854_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15193:20:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1854",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15214:22:4",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1853,
																	"src": "15193:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15193:78:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1668,
															"nodeType": "TryStatement",
															"src": "15189:761:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "14742:177:4",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14933:35:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14986:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "14978:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14978:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15012:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "15004:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15034:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "15026:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15026:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15063:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "15046:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1610,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15046:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1611,
													"nodeType": "ArrayTypeName",
													"src": "15046:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15093:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "15076:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1613,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15076:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1614,
													"nodeType": "ArrayTypeName",
													"src": "15076:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15122:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "15109:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1616,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15109:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14968:164:4"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15141:0:4"
									},
									"scope": 1689,
									"src": "14924:1042:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "16240:691:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16302:623:4",
													"nodeType": "YulBlock",
													"src": "16302:623:4",
													"statements": [
														{
															"nativeSrc": "16360:21:4",
															"nodeType": "YulAssignment",
															"src": "16360:21:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16376:4:4",
																		"nodeType": "YulLiteral",
																		"src": "16376:4:4",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16370:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "16370:5:4"
																},
																"nativeSrc": "16370:11:4",
																"nodeType": "YulFunctionCall",
																"src": "16370:11:4"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nativeSrc": "16360:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "16360:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16438:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "16438:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16446:1:4",
																		"nodeType": "YulLiteral",
																		"src": "16446:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16431:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "16431:6:4"
																},
																"nativeSrc": "16431:17:4",
																"nodeType": "YulFunctionCall",
																"src": "16431:17:4"
															},
															"nativeSrc": "16431:17:4",
															"nodeType": "YulExpressionStatement",
															"src": "16431:17:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nativeSrc": "16569:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "16569:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16577:4:4",
																				"nodeType": "YulLiteral",
																				"src": "16577:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16565:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "16565:3:4"
																		},
																		"nativeSrc": "16565:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "16565:17:4"
																	},
																	{
																		"name": "element1",
																		"nativeSrc": "16584:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "16584:8:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16558:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "16558:6:4"
																},
																"nativeSrc": "16558:35:4",
																"nodeType": "YulFunctionCall",
																"src": "16558:35:4"
															},
															"nativeSrc": "16558:35:4",
															"nodeType": "YulExpressionStatement",
															"src": "16558:35:4"
														},
														{
															"nativeSrc": "16684:27:4",
															"nodeType": "YulAssignment",
															"src": "16684:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16698:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "16698:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16706:4:4",
																		"nodeType": "YulLiteral",
																		"src": "16706:4:4",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16694:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "16694:3:4"
																},
																"nativeSrc": "16694:17:4",
																"nodeType": "YulFunctionCall",
																"src": "16694:17:4"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nativeSrc": "16684:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "16684:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nativeSrc": "16731:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "16731:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16739:1:4",
																		"nodeType": "YulLiteral",
																		"src": "16739:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16724:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "16724:6:4"
																},
																"nativeSrc": "16724:17:4",
																"nodeType": "YulFunctionCall",
																"src": "16724:17:4"
															},
															"nativeSrc": "16724:17:4",
															"nodeType": "YulExpressionStatement",
															"src": "16724:17:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16765:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "16765:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16773:4:4",
																				"nodeType": "YulLiteral",
																				"src": "16773:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16761:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "16761:3:4"
																		},
																		"nativeSrc": "16761:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "16761:17:4"
																	},
																	{
																		"name": "element2",
																		"nativeSrc": "16780:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "16780:8:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16754:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "16754:6:4"
																},
																"nativeSrc": "16754:35:4",
																"nodeType": "YulFunctionCall",
																"src": "16754:35:4"
															},
															"nativeSrc": "16754:35:4",
															"nodeType": "YulExpressionStatement",
															"src": "16754:35:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16891:4:4",
																		"nodeType": "YulLiteral",
																		"src": "16891:4:4",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16901:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "16901:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16909:4:4",
																				"nodeType": "YulLiteral",
																				"src": "16909:4:4",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16897:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "16897:3:4"
																		},
																		"nativeSrc": "16897:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "16897:17:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16884:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "16884:6:4"
																},
																"nativeSrc": "16884:31:4",
																"nodeType": "YulFunctionCall",
																"src": "16884:31:4"
															},
															"nativeSrc": "16884:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "16884:31:4"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1681,
														"isOffset": false,
														"isSlot": false,
														"src": "16360:6:4",
														"valueSize": 1
													},
													{
														"declaration": 1681,
														"isOffset": false,
														"isSlot": false,
														"src": "16438:6:4",
														"valueSize": 1
													},
													{
														"declaration": 1681,
														"isOffset": false,
														"isSlot": false,
														"src": "16569:6:4",
														"valueSize": 1
													},
													{
														"declaration": 1681,
														"isOffset": false,
														"isSlot": false,
														"src": "16698:6:4",
														"valueSize": 1
													},
													{
														"declaration": 1684,
														"isOffset": false,
														"isSlot": false,
														"src": "16684:6:4",
														"valueSize": 1
													},
													{
														"declaration": 1684,
														"isOffset": false,
														"isSlot": false,
														"src": "16731:6:4",
														"valueSize": 1
													},
													{
														"declaration": 1684,
														"isOffset": false,
														"isSlot": false,
														"src": "16765:6:4",
														"valueSize": 1
													},
													{
														"declaration": 1684,
														"isOffset": false,
														"isSlot": false,
														"src": "16901:6:4",
														"valueSize": 1
													},
													{
														"declaration": 1675,
														"isOffset": false,
														"isSlot": false,
														"src": "16584:8:4",
														"valueSize": 1
													},
													{
														"declaration": 1677,
														"isOffset": false,
														"isSlot": false,
														"src": "16780:8:4",
														"valueSize": 1
													}
												],
												"id": 1686,
												"nodeType": "InlineAssembly",
												"src": "16293:632:4"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "15972:105:4",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "16091:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "16127:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "16119:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16119:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "16153:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "16145:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16145:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16109:58:4"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "16207:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "16190:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1679,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16190:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1680,
													"nodeType": "ArrayTypeName",
													"src": "16190:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "16232:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "16215:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1682,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16215:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1683,
													"nodeType": "ArrayTypeName",
													"src": "16215:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16189:50:4"
									},
									"scope": 1689,
									"src": "16082:849:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1690,
							"src": "727:16206:4",
							"usedErrors": [
								603,
								608,
								613,
								620,
								625,
								630,
								637
							],
							"usedEvents": [
								1709,
								1724,
								1733,
								1740
							]
						}
					],
					"src": "109:16825:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1812
						],
						"IERC165": [
							2221
						]
					},
					"id": 1813,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1691,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1693,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 2222,
							"src": "136:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1692,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2221,
										"src": "144:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1695,
										"name": "IERC165",
										"nameLocations": [
											"359:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2221,
										"src": "359:7:5"
									},
									"id": 1696,
									"nodeType": "InheritanceSpecifier",
									"src": "359:7:5"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1694,
								"nodeType": "StructuredDocumentation",
								"src": "200:136:5",
								"text": " @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."
							},
							"fullyImplemented": false,
							"id": 1812,
							"linearizedBaseContracts": [
								1812,
								2221
							],
							"name": "IERC1155",
							"nameLocation": "347:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "373:125:5",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1709,
									"name": "TransferSingle",
									"nameLocation": "509:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "540:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "524:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "566:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "550:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "588:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "572:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "600:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "592:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "612:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "604:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "523:95:5"
									},
									"src": "503:116:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "625:144:5",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1724,
									"name": "TransferBatch",
									"nameLocation": "780:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "819:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "803:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "853:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "837:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "883:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "867:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "905:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "895:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1717,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "895:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1718,
													"nodeType": "ArrayTypeName",
													"src": "895:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "928:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "918:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1720,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "918:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1721,
													"nodeType": "ArrayTypeName",
													"src": "918:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:147:5"
									},
									"src": "774:167:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "947:147:5",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1733,
									"name": "ApprovalForAll",
									"nameLocation": "1105:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1136:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "1120:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1161:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "1145:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1176:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "1171:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1730,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:66:5"
									},
									"src": "1099:87:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "1192:343:5",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1740,
									"name": "URI",
									"nameLocation": "1546:3:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1557:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "1550:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1735,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1550:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1580:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "1564:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:34:5"
									},
									"src": "1540:44:5"
								},
								{
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "1590:172:5",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1750,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1776:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1794:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1786:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1811:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1803:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1785:29:5"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1838:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1837:9:5"
									},
									"scope": 1812,
									"src": "1767:80:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "1853:188:5",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2055:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2098:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "2079:27:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1752,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2079:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1753,
													"nodeType": "ArrayTypeName",
													"src": "2079:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2135:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "2116:22:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1755,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2116:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1756,
													"nodeType": "ArrayTypeName",
													"src": "2116:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:75:5"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "2168:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1759,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2168:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1760,
													"nodeType": "ArrayTypeName",
													"src": "2168:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2167:18:5"
									},
									"scope": 1812,
									"src": "2046:140:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "2192:248:5",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2454:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2480:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "2472:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2495:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "2490:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1767,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2490:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2471:33:5"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2513:0:5"
									},
									"scope": 1812,
									"src": "2445:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1772,
										"nodeType": "StructuredDocumentation",
										"src": "2520:135:5",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2669:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2694:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "2686:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2711:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "2703:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2685:35:5"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "2744:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1778,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2744:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:6:5"
									},
									"scope": 1812,
									"src": "2660:90:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1782,
										"nodeType": "StructuredDocumentation",
										"src": "2756:910:5",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3680:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3705:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "3697:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3697:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3719:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "3711:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3731:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "3723:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3743:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "3735:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3735:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3765:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "3750:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1791,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3696:74:5"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3779:0:5"
									},
									"scope": 1812,
									"src": "3671:109:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1796,
										"nodeType": "StructuredDocumentation",
										"src": "3786:814:5",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1811,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4614:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4653:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "4645:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4645:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4675:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "4667:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4667:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4706:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "4687:22:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1801,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4687:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1802,
													"nodeType": "ArrayTypeName",
													"src": "4687:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4738:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "4719:25:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1804,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4719:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1805,
													"nodeType": "ArrayTypeName",
													"src": "4719:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4769:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "4754:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4754:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4635:144:5"
									},
									"returnParameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4788:0:5"
									},
									"scope": 1812,
									"src": "4605:184:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1813,
							"src": "337:4454:5",
							"usedErrors": [],
							"usedEvents": [
								1709,
								1724,
								1733,
								1740
							]
						}
					],
					"src": "110:4682:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1854
						],
						"IERC165": [
							2221
						]
					},
					"id": 1855,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1814,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1816,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1855,
							"sourceUnit": 2222,
							"src": "144:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1815,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2221,
										"src": "152:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1818,
										"name": "IERC165",
										"nameLocations": [
											"357:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2221,
										"src": "357:7:6"
									},
									"id": 1819,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:6"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1817,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:6",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1854,
							"linearizedBaseContracts": [
								1854,
								2221
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "371:827:6",
										"text": " @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1835,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1212:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1247:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "1239:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1273:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "1265:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1295:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "1287:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1315:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "1307:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1345:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "1330:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1330:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:126:6"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "1374:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1832,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1374:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:8:6"
									},
									"scope": 1854,
									"src": "1203:179:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "1388:995:6",
										"text": " @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2397:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2437:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "2429:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2463:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "2455:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2455:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2496:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "2477:22:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1841,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2477:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1842,
													"nodeType": "ArrayTypeName",
													"src": "2477:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2528:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "2509:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1844,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2509:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1845,
													"nodeType": "ArrayTypeName",
													"src": "2509:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "2544:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1847,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2544:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2419:150:6"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "2588:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1850,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2588:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2587:8:6"
									},
									"scope": 1854,
									"src": "2388:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1855,
							"src": "327:2271:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2481:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1812
						],
						"IERC1155MetadataURI": [
							1870
						]
					},
					"id": 1871,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1856,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:7"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1858,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1871,
							"sourceUnit": 1813,
							"src": "158:41:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1857,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1812,
										"src": "166:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1860,
										"name": "IERC1155",
										"nameLocations": [
											"399:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1812,
										"src": "399:8:7"
									},
									"id": 1861,
									"nodeType": "InheritanceSpecifier",
									"src": "399:8:7"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1859,
								"nodeType": "StructuredDocumentation",
								"src": "201:164:7",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."
							},
							"fullyImplemented": false,
							"id": 1870,
							"linearizedBaseContracts": [
								1870,
								1812,
								2221
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "376:19:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "414:192:7",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1869,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "620:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "624:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:12:7"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "659:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1866,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "659:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:15:7"
									},
									"scope": 1870,
									"src": "611:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1871,
							"src": "366:310:7",
							"usedErrors": [],
							"usedEvents": [
								1709,
								1724,
								1733,
								1740
							]
						}
					],
					"src": "132:545:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							2053
						],
						"Math": [
							3276
						],
						"StorageSlot": [
							2185
						]
					},
					"id": 2054,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1872,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:8"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1874,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2054,
							"sourceUnit": 2186,
							"src": "126:46:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1873,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2185,
										"src": "134:11:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1876,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2054,
							"sourceUnit": 3277,
							"src": "173:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1875,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3276,
										"src": "181:4:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1877,
								"nodeType": "StructuredDocumentation",
								"src": "212:63:8",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 2053,
							"linearizedBaseContracts": [
								2053
							],
							"name": "Arrays",
							"nameLocation": "284:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1880,
									"libraryName": {
										"id": 1878,
										"name": "StorageSlot",
										"nameLocations": [
											"303:11:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2185,
										"src": "303:11:8"
									},
									"nodeType": "UsingForDirective",
									"src": "297:30:8",
									"typeName": {
										"id": 1879,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1962,
										"nodeType": "Block",
										"src": "843:834:8",
										"statements": [
											{
												"assignments": [
													1892
												],
												"declarations": [
													{
														"constant": false,
														"id": 1892,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "861:3:8",
														"nodeType": "VariableDeclaration",
														"scope": 1962,
														"src": "853:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1891,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1894,
												"initialValue": {
													"hexValue": "30",
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "867:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "853:15:8"
											},
											{
												"assignments": [
													1896
												],
												"declarations": [
													{
														"constant": false,
														"id": 1896,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "886:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1962,
														"src": "878:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1895,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "878:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1899,
												"initialValue": {
													"expression": {
														"id": 1897,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "893:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "899:6:8",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "893:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:27:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1900,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "920:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "928:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "920:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1906,
												"nodeType": "IfStatement",
												"src": "916:48:8",
												"trueBody": {
													"id": 1905,
													"nodeType": "Block",
													"src": "931:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "952:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1890,
															"id": 1904,
															"nodeType": "Return",
															"src": "945:8:8"
														}
													]
												}
											},
											{
												"body": {
													"id": 1938,
													"nodeType": "Block",
													"src": "993:423:8",
													"statements": [
														{
															"assignments": [
																1911
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1911,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "1015:3:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1938,
																	"src": "1007:11:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1910,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1007:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1917,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1914,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1892,
																		"src": "1034:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1915,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1896,
																		"src": "1039:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1912,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3276,
																		"src": "1021:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3276_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1026:7:8",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2449,
																	"src": "1021:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:23:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1007:37:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1919,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1884,
																				"src": "1282:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1920,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1911,
																				"src": "1289:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1918,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1984,
																				2005,
																				2026
																			],
																			"referencedDeclaration": 2026,
																			"src": "1269:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2090_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:24:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$2090_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1294:5:8",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2089,
																	"src": "1269:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1923,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1886,
																	"src": "1302:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1269:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1936,
																"nodeType": "Block",
																"src": "1360:46:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1930,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1892,
																				"src": "1378:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1933,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1931,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1911,
																					"src": "1384:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1932,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1390:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1384:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1378:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1935,
																		"nodeType": "ExpressionStatement",
																		"src": "1378:13:8"
																	}
																]
															},
															"id": 1937,
															"nodeType": "IfStatement",
															"src": "1265:141:8",
															"trueBody": {
																"id": 1929,
																"nodeType": "Block",
																"src": "1311:43:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1925,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1896,
																				"src": "1329:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1926,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1911,
																				"src": "1336:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1329:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1928,
																		"nodeType": "ExpressionStatement",
																		"src": "1329:10:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1907,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1892,
														"src": "981:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1908,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "987:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "981:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1939,
												"nodeType": "WhileStatement",
												"src": "974:442:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1940,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "1533:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1533:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1944,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1884,
																		"src": "1557:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1945,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1892,
																			"src": "1564:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1570:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1564:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1943,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1984,
																		2005,
																		2026
																	],
																	"referencedDeclaration": 2026,
																	"src": "1544:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2090_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1544:28:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$2090_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:5:8",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2089,
															"src": "1544:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1950,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "1582:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1544:45:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1533:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1960,
													"nodeType": "Block",
													"src": "1636:35:8",
													"statements": [
														{
															"expression": {
																"id": 1958,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1892,
																"src": "1657:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1890,
															"id": 1959,
															"nodeType": "Return",
															"src": "1650:10:8"
														}
													]
												},
												"id": 1961,
												"nodeType": "IfStatement",
												"src": "1529:142:8",
												"trueBody": {
													"id": 1957,
													"nodeType": "Block",
													"src": "1591:39:8",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1953,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1892,
																	"src": "1612:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1612:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1890,
															"id": 1956,
															"nodeType": "Return",
															"src": "1605:14:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1881,
										"nodeType": "StructuredDocumentation",
										"src": "333:407:8",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "754:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "787:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "769:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1882,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1883,
													"nodeType": "ArrayTypeName",
													"src": "769:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "802:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "794:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:42:8"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "834:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:9:8"
									},
									"scope": 2053,
									"src": "745:932:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "1993:459:8",
										"statements": [
											{
												"assignments": [
													1976
												],
												"declarations": [
													{
														"constant": false,
														"id": 1976,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2011:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1983,
														"src": "2003:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1975,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1977,
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:12:8"
											},
											{
												"AST": {
													"nativeSrc": "2316:92:8",
													"nodeType": "YulBlock",
													"src": "2316:92:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2337:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2337:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "2340:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "2340:8:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2330:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:8"
																},
																"nativeSrc": "2330:19:8",
																"nodeType": "YulFunctionCall",
																"src": "2330:19:8"
															},
															"nativeSrc": "2330:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "2330:19:8"
														},
														{
															"nativeSrc": "2362:36:8",
															"nodeType": "YulAssignment",
															"src": "2362:36:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2384:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2384:1:8",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2387:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "2374:9:8",
																			"nodeType": "YulIdentifier",
																			"src": "2374:9:8"
																		},
																		"nativeSrc": "2374:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:18:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2394:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2394:3:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2370:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:8"
																},
																"nativeSrc": "2370:28:8",
																"nodeType": "YulFunctionCall",
																"src": "2370:28:8"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "2362:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1967,
														"isOffset": false,
														"isSlot": true,
														"src": "2340:8:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1969,
														"isOffset": false,
														"isSlot": false,
														"src": "2394:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1976,
														"isOffset": false,
														"isSlot": false,
														"src": "2362:4:8",
														"valueSize": 1
													}
												],
												"id": 1978,
												"nodeType": "InlineAssembly",
												"src": "2307:101:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1979,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "2424:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2429:14:8",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2107,
														"src": "2424:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2081_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2081_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1974,
												"id": 1982,
												"nodeType": "Return",
												"src": "2417:28:8"
											}
										]
									},
									"documentation": {
										"id": 1964,
										"nodeType": "StructuredDocumentation",
										"src": "1683:191:8",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1888:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1919:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "1901:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1965,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1901:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1966,
													"nodeType": "ArrayTypeName",
													"src": "1901:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1932:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "1924:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:36:8"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "1960:31:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2081_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1972,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1971,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1960:11:8",
															"1972:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "1960:23:8"
													},
													"referencedDeclaration": 2081,
													"src": "1960:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2081_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:33:8"
									},
									"scope": 2053,
									"src": "1879:573:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "2768:459:8",
										"statements": [
											{
												"assignments": [
													1997
												],
												"declarations": [
													{
														"constant": false,
														"id": 1997,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2786:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 2004,
														"src": "2778:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1996,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2778:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1998,
												"nodeType": "VariableDeclarationStatement",
												"src": "2778:12:8"
											},
											{
												"AST": {
													"nativeSrc": "3091:92:8",
													"nodeType": "YulBlock",
													"src": "3091:92:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3112:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3112:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3115:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3115:8:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3105:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:8"
																},
																"nativeSrc": "3105:19:8",
																"nodeType": "YulFunctionCall",
																"src": "3105:19:8"
															},
															"nativeSrc": "3105:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "3105:19:8"
														},
														{
															"nativeSrc": "3137:36:8",
															"nodeType": "YulAssignment",
															"src": "3137:36:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3159:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3159:1:8",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3162:4:8",
																				"nodeType": "YulLiteral",
																				"src": "3162:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3149:9:8",
																			"nodeType": "YulIdentifier",
																			"src": "3149:9:8"
																		},
																		"nativeSrc": "3149:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3169:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3169:3:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3145:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:8"
																},
																"nativeSrc": "3145:28:8",
																"nodeType": "YulFunctionCall",
																"src": "3145:28:8"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3137:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3137:4:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1988,
														"isOffset": false,
														"isSlot": true,
														"src": "3115:8:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1990,
														"isOffset": false,
														"isSlot": false,
														"src": "3169:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1997,
														"isOffset": false,
														"isSlot": false,
														"src": "3137:4:8",
														"valueSize": 1
													}
												],
												"id": 1999,
												"nodeType": "InlineAssembly",
												"src": "3082:101:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2000,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "3199:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 2001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3204:14:8",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2129,
														"src": "3199:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$2087_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2087_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1995,
												"id": 2003,
												"nodeType": "Return",
												"src": "3192:28:8"
											}
										]
									},
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "2458:191:8",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 2005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2663:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2694:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "2676:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1986,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2676:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1987,
													"nodeType": "ArrayTypeName",
													"src": "2676:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2707:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "2699:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:36:8"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "2735:31:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2087_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1993,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1992,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2735:11:8",
															"2747:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2087,
														"src": "2735:23:8"
													},
													"referencedDeclaration": 2087,
													"src": "2735:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2087_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:33:8"
									},
									"scope": 2053,
									"src": "2654:573:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2025,
										"nodeType": "Block",
										"src": "3543:459:8",
										"statements": [
											{
												"assignments": [
													2018
												],
												"declarations": [
													{
														"constant": false,
														"id": 2018,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3561:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 2025,
														"src": "3553:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2017,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2019,
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:12:8"
											},
											{
												"AST": {
													"nativeSrc": "3866:92:8",
													"nodeType": "YulBlock",
													"src": "3866:92:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3887:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3887:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3890:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3890:8:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3880:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:8"
																},
																"nativeSrc": "3880:19:8",
																"nodeType": "YulFunctionCall",
																"src": "3880:19:8"
															},
															"nativeSrc": "3880:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "3880:19:8"
														},
														{
															"nativeSrc": "3912:36:8",
															"nodeType": "YulAssignment",
															"src": "3912:36:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3934:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:8",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3937:4:8",
																				"nodeType": "YulLiteral",
																				"src": "3937:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3924:9:8",
																			"nodeType": "YulIdentifier",
																			"src": "3924:9:8"
																		},
																		"nativeSrc": "3924:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3944:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:8"
																},
																"nativeSrc": "3920:28:8",
																"nodeType": "YulFunctionCall",
																"src": "3920:28:8"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3912:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2009,
														"isOffset": false,
														"isSlot": true,
														"src": "3890:8:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2011,
														"isOffset": false,
														"isSlot": false,
														"src": "3944:3:8",
														"valueSize": 1
													},
													{
														"declaration": 2018,
														"isOffset": false,
														"isSlot": false,
														"src": "3912:4:8",
														"valueSize": 1
													}
												],
												"id": 2020,
												"nodeType": "InlineAssembly",
												"src": "3857:101:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2021,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "3974:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 2022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:14:8",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2140,
														"src": "3974:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$2090_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2090_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 2016,
												"id": 2024,
												"nodeType": "Return",
												"src": "3967:28:8"
											}
										]
									},
									"documentation": {
										"id": 2006,
										"nodeType": "StructuredDocumentation",
										"src": "3233:191:8",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 2026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3438:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3469:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "3451:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2007,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3451:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2008,
													"nodeType": "ArrayTypeName",
													"src": "3451:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3482:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "3474:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:36:8"
									},
									"returnParameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "3510:31:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2090_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2014,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2013,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3510:11:8",
															"3522:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2090,
														"src": "3510:23:8"
													},
													"referencedDeclaration": 2090,
													"src": "3510:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2090_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:33:8"
									},
									"scope": 2053,
									"src": "3429:573:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2038,
										"nodeType": "Block",
										"src": "4303:98:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4322:73:8",
													"nodeType": "YulBlock",
													"src": "4322:73:8",
													"statements": [
														{
															"nativeSrc": "4336:49:8",
															"nodeType": "YulAssignment",
															"src": "4336:49:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4357:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4357:3:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4362:4:8",
																						"nodeType": "YulLiteral",
																						"src": "4362:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4353:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4353:3:8"
																				},
																				"nativeSrc": "4353:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4353:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4373:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4373:3:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4378:4:8",
																						"nodeType": "YulLiteral",
																						"src": "4378:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4369:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4369:3:8"
																				},
																				"nativeSrc": "4369:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4369:14:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:8"
																		},
																		"nativeSrc": "4349:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:35:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4343:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4343:5:8"
																},
																"nativeSrc": "4343:42:8",
																"nodeType": "YulFunctionCall",
																"src": "4343:42:8"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4336:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:8"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2030,
														"isOffset": false,
														"isSlot": false,
														"src": "4357:3:8",
														"valueSize": 1
													},
													{
														"declaration": 2032,
														"isOffset": false,
														"isSlot": false,
														"src": "4373:3:8",
														"valueSize": 1
													},
													{
														"declaration": 2035,
														"isOffset": false,
														"isSlot": false,
														"src": "4336:3:8",
														"valueSize": 1
													}
												],
												"id": 2037,
												"nodeType": "InlineAssembly",
												"src": "4313:82:8"
											}
										]
									},
									"documentation": {
										"id": 2027,
										"nodeType": "StructuredDocumentation",
										"src": "4008:191:8",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 2039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4213:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4249:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "4232:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2028,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4232:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2029,
													"nodeType": "ArrayTypeName",
													"src": "4232:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4262:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "4254:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:35:8"
									},
									"returnParameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4298:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "4290:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:13:8"
									},
									"scope": 2053,
									"src": "4204:197:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2051,
										"nodeType": "Block",
										"src": "4702:98:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4721:73:8",
													"nodeType": "YulBlock",
													"src": "4721:73:8",
													"statements": [
														{
															"nativeSrc": "4735:49:8",
															"nodeType": "YulAssignment",
															"src": "4735:49:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4756:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4761:4:8",
																						"nodeType": "YulLiteral",
																						"src": "4761:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4752:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4752:3:8"
																				},
																				"nativeSrc": "4752:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4752:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4772:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4772:3:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4777:4:8",
																						"nodeType": "YulLiteral",
																						"src": "4777:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4768:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4768:3:8"
																				},
																				"nativeSrc": "4768:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4768:14:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4748:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:8"
																		},
																		"nativeSrc": "4748:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4748:35:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4742:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4742:5:8"
																},
																"nativeSrc": "4742:42:8",
																"nodeType": "YulFunctionCall",
																"src": "4742:42:8"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4735:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:8"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2043,
														"isOffset": false,
														"isSlot": false,
														"src": "4756:3:8",
														"valueSize": 1
													},
													{
														"declaration": 2045,
														"isOffset": false,
														"isSlot": false,
														"src": "4772:3:8",
														"valueSize": 1
													},
													{
														"declaration": 2048,
														"isOffset": false,
														"isSlot": false,
														"src": "4735:3:8",
														"valueSize": 1
													}
												],
												"id": 2050,
												"nodeType": "InlineAssembly",
												"src": "4712:82:8"
											}
										]
									},
									"documentation": {
										"id": 2040,
										"nodeType": "StructuredDocumentation",
										"src": "4407:191:8",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 2052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4612:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4648:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "4631:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2041,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4631:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2042,
													"nodeType": "ArrayTypeName",
													"src": "4631:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4661:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "4653:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:35:8"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4697:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "4689:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:13:8"
									},
									"scope": 2053,
									"src": "4603:197:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2054,
							"src": "276:4526:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:4703:8"
				},
				"id": 8
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2075
						]
					},
					"id": 2076,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2055,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2056,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2075,
							"linearizedBaseContracts": [
								2075
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2064,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2061,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2060,
												"id": 2063,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 2065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2065,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 2075,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2073,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2070,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2069,
												"id": 2072,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 2074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2067,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 2075,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2076,
							"src": "624:235:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:9"
				},
				"id": 9
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2185
						]
					},
					"id": 2186,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2077,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2078,
								"nodeType": "StructuredDocumentation",
								"src": "219:1026:10",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2185,
							"linearizedBaseContracts": [
								2185
							],
							"name": "StorageSlot",
							"nameLocation": "1254:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2081,
									"members": [
										{
											"constant": false,
											"id": 2080,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1309:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 2081,
											"src": "1301:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2079,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1301:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1279:11:10",
									"nodeType": "StructDefinition",
									"scope": 2185,
									"src": "1272:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2084,
									"members": [
										{
											"constant": false,
											"id": 2083,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1361:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 2084,
											"src": "1356:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2082,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1356:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1334:11:10",
									"nodeType": "StructDefinition",
									"scope": 2185,
									"src": "1327:46:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2087,
									"members": [
										{
											"constant": false,
											"id": 2086,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1416:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 2087,
											"src": "1408:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2085,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1408:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1386:11:10",
									"nodeType": "StructDefinition",
									"scope": 2185,
									"src": "1379:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2090,
									"members": [
										{
											"constant": false,
											"id": 2089,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1471:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 2090,
											"src": "1463:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2088,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1463:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1441:11:10",
									"nodeType": "StructDefinition",
									"scope": 2185,
									"src": "1434:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2093,
									"members": [
										{
											"constant": false,
											"id": 2092,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1524:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 2093,
											"src": "1517:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2091,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1517:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1496:10:10",
									"nodeType": "StructDefinition",
									"scope": 2185,
									"src": "1489:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2096,
									"members": [
										{
											"constant": false,
											"id": 2095,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1575:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 2096,
											"src": "1569:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2094,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1569:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1549:9:10",
									"nodeType": "StructDefinition",
									"scope": 2185,
									"src": "1542:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2106,
										"nodeType": "Block",
										"src": "1769:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1831:38:10",
													"nodeType": "YulBlock",
													"src": "1831:38:10",
													"statements": [
														{
															"nativeSrc": "1845:14:10",
															"nodeType": "YulAssignment",
															"src": "1845:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "1855:4:10",
																"nodeType": "YulIdentifier",
																"src": "1855:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1845:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1845:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2103,
														"isOffset": false,
														"isSlot": true,
														"src": "1845:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2099,
														"isOffset": false,
														"isSlot": false,
														"src": "1855:4:10",
														"valueSize": 1
													}
												],
												"id": 2105,
												"nodeType": "InlineAssembly",
												"src": "1822:47:10"
											}
										]
									},
									"documentation": {
										"id": 2097,
										"nodeType": "StructuredDocumentation",
										"src": "1593:87:10",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1694:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1717:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "1709:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2098,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:14:10"
									},
									"returnParameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1766:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "1746:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2081_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2102,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2101,
														"name": "AddressSlot",
														"nameLocations": [
															"1746:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "1746:11:10"
													},
													"referencedDeclaration": 2081,
													"src": "1746:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2081_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1745:23:10"
									},
									"scope": 2185,
									"src": "1685:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2117,
										"nodeType": "Block",
										"src": "2057:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2119:38:10",
													"nodeType": "YulBlock",
													"src": "2119:38:10",
													"statements": [
														{
															"nativeSrc": "2133:14:10",
															"nodeType": "YulAssignment",
															"src": "2133:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2143:4:10",
																"nodeType": "YulIdentifier",
																"src": "2143:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2133:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2114,
														"isOffset": false,
														"isSlot": true,
														"src": "2133:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2110,
														"isOffset": false,
														"isSlot": false,
														"src": "2143:4:10",
														"valueSize": 1
													}
												],
												"id": 2116,
												"nodeType": "InlineAssembly",
												"src": "2110:47:10"
											}
										]
									},
									"documentation": {
										"id": 2108,
										"nodeType": "StructuredDocumentation",
										"src": "1881:87:10",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1982:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2005:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "1997:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:14:10"
									},
									"returnParameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2054:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "2034:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2084_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2113,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2112,
														"name": "BooleanSlot",
														"nameLocations": [
															"2034:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2084,
														"src": "2034:11:10"
													},
													"referencedDeclaration": 2084,
													"src": "2034:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2084_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2033:23:10"
									},
									"scope": 2185,
									"src": "1973:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2128,
										"nodeType": "Block",
										"src": "2345:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2407:38:10",
													"nodeType": "YulBlock",
													"src": "2407:38:10",
													"statements": [
														{
															"nativeSrc": "2421:14:10",
															"nodeType": "YulAssignment",
															"src": "2421:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2431:4:10",
																"nodeType": "YulIdentifier",
																"src": "2431:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2421:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2125,
														"isOffset": false,
														"isSlot": true,
														"src": "2421:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2121,
														"isOffset": false,
														"isSlot": false,
														"src": "2431:4:10",
														"valueSize": 1
													}
												],
												"id": 2127,
												"nodeType": "InlineAssembly",
												"src": "2398:47:10"
											}
										]
									},
									"documentation": {
										"id": 2119,
										"nodeType": "StructuredDocumentation",
										"src": "2169:87:10",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2270:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2293:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "2285:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:14:10"
									},
									"returnParameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2342:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "2322:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2087_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2123,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2322:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2087,
														"src": "2322:11:10"
													},
													"referencedDeclaration": 2087,
													"src": "2322:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2087_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2321:23:10"
									},
									"scope": 2185,
									"src": "2261:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2139,
										"nodeType": "Block",
										"src": "2633:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2695:38:10",
													"nodeType": "YulBlock",
													"src": "2695:38:10",
													"statements": [
														{
															"nativeSrc": "2709:14:10",
															"nodeType": "YulAssignment",
															"src": "2709:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2719:4:10",
																"nodeType": "YulIdentifier",
																"src": "2719:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2709:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2136,
														"isOffset": false,
														"isSlot": true,
														"src": "2709:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2132,
														"isOffset": false,
														"isSlot": false,
														"src": "2719:4:10",
														"valueSize": 1
													}
												],
												"id": 2138,
												"nodeType": "InlineAssembly",
												"src": "2686:47:10"
											}
										]
									},
									"documentation": {
										"id": 2130,
										"nodeType": "StructuredDocumentation",
										"src": "2457:87:10",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2558:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2581:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "2573:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2573:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2572:14:10"
									},
									"returnParameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2630:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "2610:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2090_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2135,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2134,
														"name": "Uint256Slot",
														"nameLocations": [
															"2610:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2090,
														"src": "2610:11:10"
													},
													"referencedDeclaration": 2090,
													"src": "2610:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2090_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2609:23:10"
									},
									"scope": 2185,
									"src": "2549:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "2918:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2980:38:10",
													"nodeType": "YulBlock",
													"src": "2980:38:10",
													"statements": [
														{
															"nativeSrc": "2994:14:10",
															"nodeType": "YulAssignment",
															"src": "2994:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3004:4:10",
																"nodeType": "YulIdentifier",
																"src": "3004:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2994:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2994:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2147,
														"isOffset": false,
														"isSlot": true,
														"src": "2994:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2143,
														"isOffset": false,
														"isSlot": false,
														"src": "3004:4:10",
														"valueSize": 1
													}
												],
												"id": 2149,
												"nodeType": "InlineAssembly",
												"src": "2971:47:10"
											}
										]
									},
									"documentation": {
										"id": 2141,
										"nodeType": "StructuredDocumentation",
										"src": "2745:86:10",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2845:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2867:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "2859:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2142,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2859:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2858:14:10"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2915:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "2896:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2093_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2146,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2145,
														"name": "StringSlot",
														"nameLocations": [
															"2896:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2093,
														"src": "2896:10:10"
													},
													"referencedDeclaration": 2093,
													"src": "2896:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2093_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2895:22:10"
									},
									"scope": 2185,
									"src": "2836:188:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2161,
										"nodeType": "Block",
										"src": "3226:112:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3288:44:10",
													"nodeType": "YulBlock",
													"src": "3288:44:10",
													"statements": [
														{
															"nativeSrc": "3302:20:10",
															"nodeType": "YulAssignment",
															"src": "3302:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3312:10:10",
																"nodeType": "YulIdentifier",
																"src": "3312:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3302:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3302:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2158,
														"isOffset": false,
														"isSlot": true,
														"src": "3302:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2154,
														"isOffset": false,
														"isSlot": true,
														"src": "3312:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2160,
												"nodeType": "InlineAssembly",
												"src": "3279:53:10"
											}
										]
									},
									"documentation": {
										"id": 2152,
										"nodeType": "StructuredDocumentation",
										"src": "3030:101:10",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3145:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3174:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "3159:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2153,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3159:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3158:22:10"
									},
									"returnParameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3223:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "3204:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2093_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2157,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2156,
														"name": "StringSlot",
														"nameLocations": [
															"3204:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2093,
														"src": "3204:10:10"
													},
													"referencedDeclaration": 2093,
													"src": "3204:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2093_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3203:22:10"
									},
									"scope": 2185,
									"src": "3136:202:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2172,
										"nodeType": "Block",
										"src": "3514:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3576:38:10",
													"nodeType": "YulBlock",
													"src": "3576:38:10",
													"statements": [
														{
															"nativeSrc": "3590:14:10",
															"nodeType": "YulAssignment",
															"src": "3590:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3600:4:10",
																"nodeType": "YulIdentifier",
																"src": "3600:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3590:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3590:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2169,
														"isOffset": false,
														"isSlot": true,
														"src": "3590:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2165,
														"isOffset": false,
														"isSlot": false,
														"src": "3600:4:10",
														"valueSize": 1
													}
												],
												"id": 2171,
												"nodeType": "InlineAssembly",
												"src": "3567:47:10"
											}
										]
									},
									"documentation": {
										"id": 2163,
										"nodeType": "StructuredDocumentation",
										"src": "3344:85:10",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3443:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3464:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "3456:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2164,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3456:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3455:14:10"
									},
									"returnParameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3511:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "3493:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2096_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2168,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2167,
														"name": "BytesSlot",
														"nameLocations": [
															"3493:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2096,
														"src": "3493:9:10"
													},
													"referencedDeclaration": 2096,
													"src": "3493:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2096_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:21:10"
									},
									"scope": 2185,
									"src": "3434:186:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "3817:112:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3879:44:10",
													"nodeType": "YulBlock",
													"src": "3879:44:10",
													"statements": [
														{
															"nativeSrc": "3893:20:10",
															"nodeType": "YulAssignment",
															"src": "3893:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3903:10:10",
																"nodeType": "YulIdentifier",
																"src": "3903:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3893:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3893:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2180,
														"isOffset": false,
														"isSlot": true,
														"src": "3893:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2176,
														"isOffset": false,
														"isSlot": true,
														"src": "3903:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2182,
												"nodeType": "InlineAssembly",
												"src": "3870:53:10"
											}
										]
									},
									"documentation": {
										"id": 2174,
										"nodeType": "StructuredDocumentation",
										"src": "3626:99:10",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3739:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3766:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "3752:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2175,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3752:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3751:21:10"
									},
									"returnParameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3814:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "3796:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2096_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2179,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2178,
														"name": "BytesSlot",
														"nameLocations": [
															"3796:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2096,
														"src": "3796:9:10"
													},
													"referencedDeclaration": 2096,
													"src": "3796:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2096_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3795:21:10"
									},
									"scope": 2185,
									"src": "3730:199:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2186,
							"src": "1246:2685:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3739:10"
				},
				"id": 10
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2209
						],
						"IERC165": [
							2221
						]
					},
					"id": 2210,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2187,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2189,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2210,
							"sourceUnit": 2222,
							"src": "140:38:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2188,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2221,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2191,
										"name": "IERC165",
										"nameLocations": [
											"688:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2221,
										"src": "688:7:11"
									},
									"id": 2192,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2190,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2209,
							"linearizedBaseContracts": [
								2209,
								2221
							],
							"name": "ERC165",
							"nameLocation": "678:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2220
									],
									"body": {
										"id": 2207,
										"nodeType": "Block",
										"src": "845:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2200,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "862:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2202,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2221,
																	"src": "882:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2221_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2221_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2201,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2221",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2199,
												"id": 2206,
												"nodeType": "Return",
												"src": "855:47:11"
											}
										]
									},
									"documentation": {
										"id": 2193,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "790:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2194,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:11"
									},
									"returnParameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "839:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2197,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:11"
									},
									"scope": 2209,
									"src": "763:146:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2210,
							"src": "660:251:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:11"
				},
				"id": 11
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2221
						]
					},
					"id": 2222,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2211,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2212,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:12",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2221,
							"linearizedBaseContracts": [
								2221
							],
							"name": "IERC165",
							"nameLocation": "432:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2213,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2220,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "818:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2214,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:12"
									},
									"returnParameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "861:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:12"
									},
									"scope": 2221,
									"src": "791:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2222,
							"src": "422:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:12"
				},
				"id": 12
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3276
						]
					},
					"id": 3277,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2223,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2224,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:13",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3276,
							"linearizedBaseContracts": [
								3276
							],
							"name": "Math",
							"nameLocation": "211:4:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2225,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:13",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2227,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:13"
									},
									"src": "277:29:13"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2232,
									"members": [
										{
											"id": 2228,
											"name": "Floor",
											"nameLocation": "336:5:13",
											"nodeType": "EnumValue",
											"src": "336:5:13"
										},
										{
											"id": 2229,
											"name": "Ceil",
											"nameLocation": "379:4:13",
											"nodeType": "EnumValue",
											"src": "379:4:13"
										},
										{
											"id": 2230,
											"name": "Trunc",
											"nameLocation": "421:5:13",
											"nodeType": "EnumValue",
											"src": "421:5:13"
										},
										{
											"id": 2231,
											"name": "Expand",
											"nameLocation": "451:6:13",
											"nodeType": "EnumValue",
											"src": "451:6:13"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:13",
									"nodeType": "EnumDefinition",
									"src": "312:169:13"
								},
								{
									"body": {
										"id": 2263,
										"nodeType": "Block",
										"src": "661:140:13",
										"statements": [
											{
												"id": 2262,
												"nodeType": "UncheckedBlock",
												"src": "671:124:13",
												"statements": [
													{
														"assignments": [
															2245
														],
														"declarations": [
															{
																"constant": false,
																"id": 2245,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2262,
																"src": "695:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2244,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2249,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2246,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2235,
																"src": "707:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2247,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2237,
																"src": "711:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2250,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "730:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2251,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2235,
																"src": "734:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2257,
														"nodeType": "IfStatement",
														"src": "726:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2255,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2243,
															"id": 2256,
															"nodeType": "Return",
															"src": "737:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2259,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2245,
																	"src": "782:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2260,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2243,
														"id": 2261,
														"nodeType": "Return",
														"src": "768:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2233,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:13",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "612:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:13"
									},
									"returnParameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "646:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "652:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:13"
									},
									"scope": 3276,
									"src": "585:216:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2291,
										"nodeType": "Block",
										"src": "984:113:13",
										"statements": [
											{
												"id": 2290,
												"nodeType": "UncheckedBlock",
												"src": "994:97:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2276,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "1022:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2277,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "1026:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2283,
														"nodeType": "IfStatement",
														"src": "1018:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2281,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2275,
															"id": 2282,
															"nodeType": "Return",
															"src": "1029:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2285,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2267,
																		"src": "1074:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2286,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2269,
																		"src": "1078:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2288,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2275,
														"id": 2289,
														"nodeType": "Return",
														"src": "1060:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2265,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:13",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "924:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "935:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:13"
									},
									"returnParameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "969:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "975:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:13"
									},
									"scope": 3276,
									"src": "908:189:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2333,
										"nodeType": "Block",
										"src": "1283:417:13",
										"statements": [
											{
												"id": 2332,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "1551:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2311,
														"nodeType": "IfStatement",
														"src": "1547:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2309,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2303,
															"id": 2310,
															"nodeType": "Return",
															"src": "1559:16:13"
														}
													},
													{
														"assignments": [
															2313
														],
														"declarations": [
															{
																"constant": false,
																"id": 2313,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2332,
																"src": "1589:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2312,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2317,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2314,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "1601:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2315,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2297,
																"src": "1605:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2318,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2313,
																	"src": "1624:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2319,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "1628:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2321,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2297,
																"src": "1633:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2327,
														"nodeType": "IfStatement",
														"src": "1620:33:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2325,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2303,
															"id": 2326,
															"nodeType": "Return",
															"src": "1636:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2329,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2313,
																	"src": "1681:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2330,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2303,
														"id": 2331,
														"nodeType": "Return",
														"src": "1667:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2293,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:13",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "1223:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "1234:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:13"
									},
									"returnParameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "1268:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "1274:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:13"
									},
									"scope": 3276,
									"src": "1207:493:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2361,
										"nodeType": "Block",
										"src": "1887:114:13",
										"statements": [
											{
												"id": 2360,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2346,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2339,
																"src": "1925:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2353,
														"nodeType": "IfStatement",
														"src": "1921:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2351,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2345,
															"id": 2352,
															"nodeType": "Return",
															"src": "1933:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2355,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2337,
																		"src": "1978:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2356,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "1982:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2358,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2345,
														"id": 2359,
														"nodeType": "Return",
														"src": "1964:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2335,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:13",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "1827:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "1838:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:13"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "1872:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2341,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "1878:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:13"
									},
									"scope": 3276,
									"src": "1811:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2389,
										"nodeType": "Block",
										"src": "2198:114:13",
										"statements": [
											{
												"id": 2388,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2374,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "2236:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2381,
														"nodeType": "IfStatement",
														"src": "2232:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2379,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2373,
															"id": 2380,
															"nodeType": "Return",
															"src": "2244:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2383,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2365,
																		"src": "2289:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2384,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2367,
																		"src": "2293:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2386,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2373,
														"id": 2387,
														"nodeType": "Return",
														"src": "2275:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2363,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "2138:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "2149:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:13"
									},
									"returnParameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "2183:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2369,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "2189:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:13"
									},
									"scope": 3276,
									"src": "2122:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2407,
										"nodeType": "Block",
										"src": "2449:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2400,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2393,
															"src": "2466:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2401,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2395,
															"src": "2470:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2404,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2395,
														"src": "2478:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:13",
													"trueExpression": {
														"id": 2403,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2393,
														"src": "2474:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2399,
												"id": 2406,
												"nodeType": "Return",
												"src": "2459:20:13"
											}
										]
									},
									"documentation": {
										"id": 2391,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:13",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "2395:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "2406:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:13"
									},
									"returnParameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "2440:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:13"
									},
									"scope": 3276,
									"src": "2382:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2425,
										"nodeType": "Block",
										"src": "2624:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2418,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2411,
															"src": "2641:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2419,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2413,
															"src": "2645:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2422,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2413,
														"src": "2653:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:13",
													"trueExpression": {
														"id": 2421,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2411,
														"src": "2649:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2417,
												"id": 2424,
												"nodeType": "Return",
												"src": "2634:20:13"
											}
										]
									},
									"documentation": {
										"id": 2409,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:13",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "2570:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "2581:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:13"
									},
									"returnParameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "2615:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:13"
									},
									"scope": 3276,
									"src": "2557:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2448,
										"nodeType": "Block",
										"src": "2845:82:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2436,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2429,
																	"src": "2900:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2437,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2431,
																	"src": "2904:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2439,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2440,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2429,
																		"src": "2910:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2441,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2431,
																		"src": "2914:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2443,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2435,
												"id": 2447,
												"nodeType": "Return",
												"src": "2892:28:13"
											}
										]
									},
									"documentation": {
										"id": 2427,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:13",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2449,
												"src": "2791:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2449,
												"src": "2802:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:13"
									},
									"returnParameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2449,
												"src": "2836:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:13"
									},
									"scope": 3276,
									"src": "2774:153:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2483,
										"nodeType": "Block",
										"src": "3219:596:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2459,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2454,
														"src": "3233:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2467,
												"nodeType": "IfStatement",
												"src": "3229:127:13",
												"trueBody": {
													"id": 2466,
													"nodeType": "Block",
													"src": "3241:115:13",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2462,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2452,
																	"src": "3340:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2463,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "3344:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2458,
															"id": 2465,
															"nodeType": "Return",
															"src": "3333:12:13"
														}
													]
												}
											},
											{
												"id": 2482,
												"nodeType": "UncheckedBlock",
												"src": "3739:70:13",
												"statements": [
													{
														"expression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2468,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2452,
																	"src": "3770:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3775:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3770:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2474,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2472,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2452,
																					"src": "3784:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2473,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3788:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "3784:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2475,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3783:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2476,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2454,
																		"src": "3793:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3783:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3797:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3783:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "3770:28:13",
															"trueExpression": {
																"hexValue": "30",
																"id": 2471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3779:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2458,
														"id": 2481,
														"nodeType": "Return",
														"src": "3763:35:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2450,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:13",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "3165:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "3176:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:13"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "3210:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:13"
									},
									"scope": 3276,
									"src": "3148:667:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2609,
										"nodeType": "Block",
										"src": "4237:4018:13",
										"statements": [
											{
												"id": 2608,
												"nodeType": "UncheckedBlock",
												"src": "4247:4002:13",
												"statements": [
													{
														"assignments": [
															2497
														],
														"declarations": [
															{
																"constant": false,
																"id": 2497,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4576:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2608,
																"src": "4568:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2496,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4568:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2501,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2498,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2487,
																"src": "4584:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2499,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2489,
																"src": "4588:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4584:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4568:21:13"
													},
													{
														"assignments": [
															2503
														],
														"declarations": [
															{
																"constant": false,
																"id": 2503,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4656:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2608,
																"src": "4648:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2502,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4648:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2504,
														"nodeType": "VariableDeclarationStatement",
														"src": "4648:13:13"
													},
													{
														"AST": {
															"nativeSrc": "4728:122:13",
															"nodeType": "YulBlock",
															"src": "4728:122:13",
															"statements": [
																{
																	"nativeSrc": "4746:30:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4746:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4763:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4763:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4766:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4766:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4773:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4773:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4769:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4769:3:13"
																				},
																				"nativeSrc": "4769:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4769:6:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4756:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4756:6:13"
																		},
																		"nativeSrc": "4756:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4756:20:13"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4750:2:13",
																			"nodeType": "YulTypedName",
																			"src": "4750:2:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4793:43:13",
																	"nodeType": "YulAssignment",
																	"src": "4793:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4810:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4810:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4814:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4814:5:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4806:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4806:3:13"
																				},
																				"nativeSrc": "4806:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4806:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4825:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4825:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4829:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4829:5:13"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4822:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "4822:2:13"
																				},
																				"nativeSrc": "4822:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4822:13:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4802:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4802:3:13"
																		},
																		"nativeSrc": "4802:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4802:34:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4793:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4793:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2497,
																"isOffset": false,
																"isSlot": false,
																"src": "4814:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2497,
																"isOffset": false,
																"isSlot": false,
																"src": "4829:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2503,
																"isOffset": false,
																"isSlot": false,
																"src": "4793:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2487,
																"isOffset": false,
																"isSlot": false,
																"src": "4763:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2489,
																"isOffset": false,
																"isSlot": false,
																"src": "4766:1:13",
																"valueSize": 1
															}
														],
														"id": 2505,
														"nodeType": "InlineAssembly",
														"src": "4719:131:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2506,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2503,
																"src": "4931:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4940:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4931:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2514,
														"nodeType": "IfStatement",
														"src": "4927:368:13",
														"trueBody": {
															"id": 2513,
															"nodeType": "Block",
															"src": "4943:352:13",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2509,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2497,
																			"src": "5261:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2510,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2491,
																			"src": "5269:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5261:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2495,
																	"id": 2512,
																	"nodeType": "Return",
																	"src": "5254:26:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2515,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2491,
																"src": "5401:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2516,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2503,
																"src": "5416:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5401:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2522,
														"nodeType": "IfStatement",
														"src": "5397:88:13",
														"trueBody": {
															"id": 2521,
															"nodeType": "Block",
															"src": "5423:62:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2518,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2227,
																			"src": "5448:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5448:22:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2520,
																	"nodeType": "RevertStatement",
																	"src": "5441:29:13"
																}
															]
														}
													},
													{
														"assignments": [
															2524
														],
														"declarations": [
															{
																"constant": false,
																"id": 2524,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5748:9:13",
																"nodeType": "VariableDeclaration",
																"scope": 2608,
																"src": "5740:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2523,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5740:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2525,
														"nodeType": "VariableDeclarationStatement",
														"src": "5740:17:13"
													},
													{
														"AST": {
															"nativeSrc": "5780:291:13",
															"nodeType": "YulBlock",
															"src": "5780:291:13",
															"statements": [
																{
																	"nativeSrc": "5849:38:13",
																	"nodeType": "YulAssignment",
																	"src": "5849:38:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5869:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5869:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5872:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5872:1:13"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5875:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "5875:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5862:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5862:6:13"
																		},
																		"nativeSrc": "5862:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5862:25:13"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5849:9:13",
																			"nodeType": "YulIdentifier",
																			"src": "5849:9:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5969:41:13",
																	"nodeType": "YulAssignment",
																	"src": "5969:41:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5982:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5982:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5992:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5992:9:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "6003:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6003:5:13"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5989:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5989:2:13"
																				},
																				"nativeSrc": "5989:20:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5989:20:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5978:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5978:3:13"
																		},
																		"nativeSrc": "5978:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5978:32:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5969:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5969:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6027:30:13",
																	"nodeType": "YulAssignment",
																	"src": "6027:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6040:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6040:5:13"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "6047:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6047:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6036:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6036:3:13"
																		},
																		"nativeSrc": "6036:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6036:21:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6027:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "6027:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2491,
																"isOffset": false,
																"isSlot": false,
																"src": "5875:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2497,
																"isOffset": false,
																"isSlot": false,
																"src": "6003:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2497,
																"isOffset": false,
																"isSlot": false,
																"src": "6027:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2497,
																"isOffset": false,
																"isSlot": false,
																"src": "6040:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2503,
																"isOffset": false,
																"isSlot": false,
																"src": "5969:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2503,
																"isOffset": false,
																"isSlot": false,
																"src": "5982:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2524,
																"isOffset": false,
																"isSlot": false,
																"src": "5849:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2524,
																"isOffset": false,
																"isSlot": false,
																"src": "5992:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2524,
																"isOffset": false,
																"isSlot": false,
																"src": "6047:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2487,
																"isOffset": false,
																"isSlot": false,
																"src": "5869:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2489,
																"isOffset": false,
																"isSlot": false,
																"src": "5872:1:13",
																"valueSize": 1
															}
														],
														"id": 2526,
														"nodeType": "InlineAssembly",
														"src": "5771:300:13"
													},
													{
														"assignments": [
															2528
														],
														"declarations": [
															{
																"constant": false,
																"id": 2528,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "6283:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 2608,
																"src": "6275:12:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2527,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6275:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2535,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2529,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2491,
																"src": "6290:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6305:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2531,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2491,
																			"src": "6309:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6305:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2533,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6304:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6290:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6275:46:13"
													},
													{
														"AST": {
															"nativeSrc": "6344:362:13",
															"nodeType": "YulBlock",
															"src": "6344:362:13",
															"statements": [
																{
																	"nativeSrc": "6409:37:13",
																	"nodeType": "YulAssignment",
																	"src": "6409:37:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6428:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "6428:11:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6441:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6441:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6424:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6424:3:13"
																		},
																		"nativeSrc": "6424:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6424:22:13"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6409:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "6409:11:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6513:25:13",
																	"nodeType": "YulAssignment",
																	"src": "6513:25:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6526:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6526:5:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6533:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6533:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6522:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6522:3:13"
																		},
																		"nativeSrc": "6522:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6522:16:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6513:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "6513:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6653:39:13",
																	"nodeType": "YulAssignment",
																	"src": "6653:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6673:1:13",
																								"nodeType": "YulLiteral",
																								"src": "6673:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6676:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "6676:4:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6669:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6669:3:13"
																						},
																						"nativeSrc": "6669:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6669:12:13"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6683:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "6683:4:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6665:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6665:3:13"
																				},
																				"nativeSrc": "6665:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6665:23:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6690:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6690:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6661:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6661:3:13"
																		},
																		"nativeSrc": "6661:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6661:31:13"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6653:4:13",
																			"nodeType": "YulIdentifier",
																			"src": "6653:4:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2491,
																"isOffset": false,
																"isSlot": false,
																"src": "6409:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2491,
																"isOffset": false,
																"isSlot": false,
																"src": "6428:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2497,
																"isOffset": false,
																"isSlot": false,
																"src": "6513:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2497,
																"isOffset": false,
																"isSlot": false,
																"src": "6526:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2528,
																"isOffset": false,
																"isSlot": false,
																"src": "6441:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2528,
																"isOffset": false,
																"isSlot": false,
																"src": "6533:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2528,
																"isOffset": false,
																"isSlot": false,
																"src": "6653:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2528,
																"isOffset": false,
																"isSlot": false,
																"src": "6676:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2528,
																"isOffset": false,
																"isSlot": false,
																"src": "6683:4:13",
																"valueSize": 1
															}
														],
														"id": 2536,
														"nodeType": "InlineAssembly",
														"src": "6335:371:13"
													},
													{
														"expression": {
															"id": 2541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2537,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2497,
																"src": "6772:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2538,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2503,
																	"src": "6781:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2539,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "6789:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6781:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6772:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2542,
														"nodeType": "ExpressionStatement",
														"src": "6772:21:13"
													},
													{
														"assignments": [
															2544
														],
														"declarations": [
															{
																"constant": false,
																"id": 2544,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "7119:7:13",
																"nodeType": "VariableDeclaration",
																"scope": 2608,
																"src": "7111:15:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2543,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7111:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2551,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7130:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2546,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2491,
																			"src": "7134:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7130:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2548,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7129:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7149:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "7129:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7111:39:13"
													},
													{
														"expression": {
															"id": 2558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2552,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2544,
																"src": "7367:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7378:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2554,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2491,
																		"src": "7382:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2555,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2544,
																		"src": "7396:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7382:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7378:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7367:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2559,
														"nodeType": "ExpressionStatement",
														"src": "7367:36:13"
													},
													{
														"expression": {
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2560,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2544,
																"src": "7436:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7447:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2562,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2491,
																		"src": "7451:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2563,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2544,
																		"src": "7465:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7451:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7447:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7436:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2567,
														"nodeType": "ExpressionStatement",
														"src": "7436:36:13"
													},
													{
														"expression": {
															"id": 2574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2568,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2544,
																"src": "7506:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7517:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2570,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2491,
																		"src": "7521:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2571,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2544,
																		"src": "7535:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7521:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7517:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7506:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2575,
														"nodeType": "ExpressionStatement",
														"src": "7506:36:13"
													},
													{
														"expression": {
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2576,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2544,
																"src": "7576:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7587:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2578,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2491,
																		"src": "7591:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2579,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2544,
																		"src": "7605:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7591:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7587:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7576:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2583,
														"nodeType": "ExpressionStatement",
														"src": "7576:36:13"
													},
													{
														"expression": {
															"id": 2590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2584,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2544,
																"src": "7646:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7657:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2586,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2491,
																		"src": "7661:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2587,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2544,
																		"src": "7675:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7661:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7657:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7646:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2591,
														"nodeType": "ExpressionStatement",
														"src": "7646:36:13"
													},
													{
														"expression": {
															"id": 2598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2592,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2544,
																"src": "7717:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7728:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2594,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2491,
																		"src": "7732:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2595,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2544,
																		"src": "7746:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7732:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7728:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7717:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2599,
														"nodeType": "ExpressionStatement",
														"src": "7717:36:13"
													},
													{
														"expression": {
															"id": 2604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2600,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2494,
																"src": "8187:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2601,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2497,
																	"src": "8196:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2602,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2544,
																	"src": "8204:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8196:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8187:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2605,
														"nodeType": "ExpressionStatement",
														"src": "8187:24:13"
													},
													{
														"expression": {
															"id": 2606,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2494,
															"src": "8232:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2495,
														"id": 2607,
														"nodeType": "Return",
														"src": "8225:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2485,
										"nodeType": "StructuredDocumentation",
										"src": "3821:313:13",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "4148:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4163:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2610,
												"src": "4155:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4155:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4174:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2610,
												"src": "4166:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4166:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "4185:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2610,
												"src": "4177:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4177:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4154:43:13"
									},
									"returnParameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4229:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2610,
												"src": "4221:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:16:13"
									},
									"scope": 3276,
									"src": "4139:4116:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2652,
										"nodeType": "Block",
										"src": "8497:192:13",
										"statements": [
											{
												"assignments": [
													2626
												],
												"declarations": [
													{
														"constant": false,
														"id": 2626,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8515:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2652,
														"src": "8507:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8507:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2632,
												"initialValue": {
													"arguments": [
														{
															"id": 2628,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2613,
															"src": "8531:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2629,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2615,
															"src": "8534:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2630,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2617,
															"src": "8537:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2627,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2610,
															2653
														],
														"referencedDeclaration": 2610,
														"src": "8524:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8524:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8507:42:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2634,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2620,
																"src": "8580:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2232",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2232",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2633,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3275,
															"src": "8563:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2232_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8563:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2637,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "8600:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2638,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2615,
																	"src": "8603:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2639,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2617,
																	"src": "8606:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2636,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8593:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8593:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8621:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8593:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8563:59:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2649,
												"nodeType": "IfStatement",
												"src": "8559:101:13",
												"trueBody": {
													"id": 2648,
													"nodeType": "Block",
													"src": "8624:36:13",
													"statements": [
														{
															"expression": {
																"id": 2646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2644,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2626,
																	"src": "8638:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8648:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8638:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2647,
															"nodeType": "ExpressionStatement",
															"src": "8638:11:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2650,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2626,
													"src": "8676:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2624,
												"id": 2651,
												"nodeType": "Return",
												"src": "8669:13:13"
											}
										]
									},
									"documentation": {
										"id": 2611,
										"nodeType": "StructuredDocumentation",
										"src": "8261:121:13",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8396:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8411:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2653,
												"src": "8403:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8403:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8422:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2653,
												"src": "8414:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8414:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8433:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2653,
												"src": "8425:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8425:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8455:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2653,
												"src": "8446:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2232",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2619,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2618,
														"name": "Rounding",
														"nameLocations": [
															"8446:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2232,
														"src": "8446:8:13"
													},
													"referencedDeclaration": 2232,
													"src": "8446:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2232",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8402:62:13"
									},
									"returnParameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2653,
												"src": "8488:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8488:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8487:9:13"
									},
									"scope": 3276,
									"src": "8387:302:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2764,
										"nodeType": "Block",
										"src": "8980:1585:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2661,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2656,
														"src": "8994:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8999:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8994:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2667,
												"nodeType": "IfStatement",
												"src": "8990:45:13",
												"trueBody": {
													"id": 2666,
													"nodeType": "Block",
													"src": "9002:33:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9023:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2660,
															"id": 2665,
															"nodeType": "Return",
															"src": "9016:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													2669
												],
												"declarations": [
													{
														"constant": false,
														"id": 2669,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9722:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2764,
														"src": "9714:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9714:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2678,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9731:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2672,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2656,
																			"src": "9742:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2671,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2932,
																			2967
																		],
																		"referencedDeclaration": 2932,
																		"src": "9737:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9737:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9748:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9737:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2676,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9736:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9731:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9714:36:13"
											},
											{
												"id": 2763,
												"nodeType": "UncheckedBlock",
												"src": "10151:408:13",
												"statements": [
													{
														"expression": {
															"id": 2688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2679,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2669,
																"src": "10175:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2680,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2669,
																				"src": "10185:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2681,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2656,
																					"src": "10194:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2682,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2669,
																					"src": "10198:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10194:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10185:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2685,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10184:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10209:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10184:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10175:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2689,
														"nodeType": "ExpressionStatement",
														"src": "10175:35:13"
													},
													{
														"expression": {
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2690,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2669,
																"src": "10224:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2691,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2669,
																				"src": "10234:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2694,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2692,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2656,
																					"src": "10243:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2693,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2669,
																					"src": "10247:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10243:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10234:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2696,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10233:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10258:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10233:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10224:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2700,
														"nodeType": "ExpressionStatement",
														"src": "10224:35:13"
													},
													{
														"expression": {
															"id": 2710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2701,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2669,
																"src": "10273:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2702,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2669,
																				"src": "10283:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2705,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2703,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2656,
																					"src": "10292:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2704,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2669,
																					"src": "10296:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10292:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10283:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2707,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10282:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10307:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10282:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10273:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2711,
														"nodeType": "ExpressionStatement",
														"src": "10273:35:13"
													},
													{
														"expression": {
															"id": 2721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2712,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2669,
																"src": "10322:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2713,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2669,
																				"src": "10332:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2714,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2656,
																					"src": "10341:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2715,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2669,
																					"src": "10345:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10341:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10332:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2718,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10331:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10356:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10331:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10322:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2722,
														"nodeType": "ExpressionStatement",
														"src": "10322:35:13"
													},
													{
														"expression": {
															"id": 2732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2723,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2669,
																"src": "10371:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2724,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2669,
																				"src": "10381:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2727,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2725,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2656,
																					"src": "10390:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2726,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2669,
																					"src": "10394:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10390:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10381:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2729,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10380:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10405:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10380:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10371:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2733,
														"nodeType": "ExpressionStatement",
														"src": "10371:35:13"
													},
													{
														"expression": {
															"id": 2743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2734,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2669,
																"src": "10420:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2735,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2669,
																				"src": "10430:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2738,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2736,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2656,
																					"src": "10439:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2737,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2669,
																					"src": "10443:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10439:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10430:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2740,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10429:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10454:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10429:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10420:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2744,
														"nodeType": "ExpressionStatement",
														"src": "10420:35:13"
													},
													{
														"expression": {
															"id": 2754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2745,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2669,
																"src": "10469:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2746,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2669,
																				"src": "10479:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2747,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2656,
																					"src": "10488:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2748,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2669,
																					"src": "10492:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10488:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10479:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2751,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10478:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10503:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10478:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10469:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2755,
														"nodeType": "ExpressionStatement",
														"src": "10469:35:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2757,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2669,
																	"src": "10529:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2758,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2656,
																		"src": "10537:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2759,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2669,
																		"src": "10541:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10537:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2756,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2426,
																"src": "10525:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10525:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2660,
														"id": 2762,
														"nodeType": "Return",
														"src": "10518:30:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2654,
										"nodeType": "StructuredDocumentation",
										"src": "8695:223:13",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8932:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8945:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2765,
												"src": "8937:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8937:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8936:11:13"
									},
									"returnParameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2765,
												"src": "8971:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8971:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8970:9:13"
									},
									"scope": 3276,
									"src": "8923:1642:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2799,
										"nodeType": "Block",
										"src": "10741:164:13",
										"statements": [
											{
												"id": 2798,
												"nodeType": "UncheckedBlock",
												"src": "10751:148:13",
												"statements": [
													{
														"assignments": [
															2777
														],
														"declarations": [
															{
																"constant": false,
																"id": 2777,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10783:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2798,
																"src": "10775:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2776,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10775:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2781,
														"initialValue": {
															"arguments": [
																{
																	"id": 2779,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2768,
																	"src": "10797:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2778,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2765,
																	2800
																],
																"referencedDeclaration": 2765,
																"src": "10792:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10792:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10775:24:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2782,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2777,
																"src": "10820:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2784,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2771,
																						"src": "10847:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2232",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2232",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2783,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3275,
																					"src": "10830:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2232_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10830:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2788,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2786,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2777,
																						"src": "10860:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2787,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2777,
																						"src": "10869:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10860:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2789,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2768,
																					"src": "10878:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10860:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10830:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10886:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10830:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10882:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2795,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10829:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10820:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2775,
														"id": 2797,
														"nodeType": "Return",
														"src": "10813:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2766,
										"nodeType": "StructuredDocumentation",
										"src": "10571:89:13",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10674:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10687:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "10679:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10679:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2771,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10699:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "10690:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2232",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2770,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2769,
														"name": "Rounding",
														"nameLocations": [
															"10690:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2232,
														"src": "10690:8:13"
													},
													"referencedDeclaration": 2232,
													"src": "10690:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2232",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10678:30:13"
									},
									"returnParameters": {
										"id": 2775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "10732:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10732:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10731:9:13"
									},
									"scope": 3276,
									"src": "10665:240:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2931,
										"nodeType": "Block",
										"src": "11096:922:13",
										"statements": [
											{
												"assignments": [
													2809
												],
												"declarations": [
													{
														"constant": false,
														"id": 2809,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11114:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2931,
														"src": "11106:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2808,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11106:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2811,
												"initialValue": {
													"hexValue": "30",
													"id": 2810,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11123:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11106:18:13"
											},
											{
												"id": 2928,
												"nodeType": "UncheckedBlock",
												"src": "11134:855:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2812,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2803,
																	"src": "11162:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11171:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11162:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11177:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11162:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2826,
														"nodeType": "IfStatement",
														"src": "11158:99:13",
														"trueBody": {
															"id": 2825,
															"nodeType": "Block",
															"src": "11180:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2817,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2803,
																			"src": "11198:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11208:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11198:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2820,
																	"nodeType": "ExpressionStatement",
																	"src": "11198:13:13"
																},
																{
																	"expression": {
																		"id": 2823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2821,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2809,
																			"src": "11229:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11239:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11229:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2824,
																	"nodeType": "ExpressionStatement",
																	"src": "11229:13:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2827,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2803,
																	"src": "11274:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11283:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11274:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11288:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11274:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2841,
														"nodeType": "IfStatement",
														"src": "11270:96:13",
														"trueBody": {
															"id": 2840,
															"nodeType": "Block",
															"src": "11291:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2832,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2803,
																			"src": "11309:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11319:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11309:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2835,
																	"nodeType": "ExpressionStatement",
																	"src": "11309:12:13"
																},
																{
																	"expression": {
																		"id": 2838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2836,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2809,
																			"src": "11339:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11349:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11339:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2839,
																	"nodeType": "ExpressionStatement",
																	"src": "11339:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2842,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2803,
																	"src": "11383:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11392:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11383:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11397:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11383:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2856,
														"nodeType": "IfStatement",
														"src": "11379:96:13",
														"trueBody": {
															"id": 2855,
															"nodeType": "Block",
															"src": "11400:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2847,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2803,
																			"src": "11418:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11428:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11418:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2850,
																	"nodeType": "ExpressionStatement",
																	"src": "11418:12:13"
																},
																{
																	"expression": {
																		"id": 2853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2851,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2809,
																			"src": "11448:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11458:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11448:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2854,
																	"nodeType": "ExpressionStatement",
																	"src": "11448:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2857,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2803,
																	"src": "11492:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11501:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11492:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11506:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11492:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2871,
														"nodeType": "IfStatement",
														"src": "11488:96:13",
														"trueBody": {
															"id": 2870,
															"nodeType": "Block",
															"src": "11509:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2862,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2803,
																			"src": "11527:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11537:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11527:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2865,
																	"nodeType": "ExpressionStatement",
																	"src": "11527:12:13"
																},
																{
																	"expression": {
																		"id": 2868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2866,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2809,
																			"src": "11557:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11567:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11557:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2869,
																	"nodeType": "ExpressionStatement",
																	"src": "11557:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2872,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2803,
																	"src": "11601:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11610:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11601:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11614:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11601:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2886,
														"nodeType": "IfStatement",
														"src": "11597:93:13",
														"trueBody": {
															"id": 2885,
															"nodeType": "Block",
															"src": "11617:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2877,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2803,
																			"src": "11635:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11645:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11635:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2880,
																	"nodeType": "ExpressionStatement",
																	"src": "11635:11:13"
																},
																{
																	"expression": {
																		"id": 2883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2881,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2809,
																			"src": "11664:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11674:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11664:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2884,
																	"nodeType": "ExpressionStatement",
																	"src": "11664:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2887,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2803,
																	"src": "11707:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11716:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11707:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11720:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11707:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2901,
														"nodeType": "IfStatement",
														"src": "11703:93:13",
														"trueBody": {
															"id": 2900,
															"nodeType": "Block",
															"src": "11723:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2892,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2803,
																			"src": "11741:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11751:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11741:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2895,
																	"nodeType": "ExpressionStatement",
																	"src": "11741:11:13"
																},
																{
																	"expression": {
																		"id": 2898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2896,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2809,
																			"src": "11770:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11780:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11770:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2899,
																	"nodeType": "ExpressionStatement",
																	"src": "11770:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2902,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2803,
																	"src": "11813:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11822:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11813:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11826:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11813:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2916,
														"nodeType": "IfStatement",
														"src": "11809:93:13",
														"trueBody": {
															"id": 2915,
															"nodeType": "Block",
															"src": "11829:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2907,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2803,
																			"src": "11847:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11857:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11847:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2910,
																	"nodeType": "ExpressionStatement",
																	"src": "11847:11:13"
																},
																{
																	"expression": {
																		"id": 2913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2911,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2809,
																			"src": "11876:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11886:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11876:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2914,
																	"nodeType": "ExpressionStatement",
																	"src": "11876:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2917,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2803,
																	"src": "11919:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11928:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11919:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11932:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11919:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2927,
														"nodeType": "IfStatement",
														"src": "11915:64:13",
														"trueBody": {
															"id": 2926,
															"nodeType": "Block",
															"src": "11935:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2922,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2809,
																			"src": "11953:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11963:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11953:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2925,
																	"nodeType": "ExpressionStatement",
																	"src": "11953:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2929,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2809,
													"src": "12005:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2807,
												"id": 2930,
												"nodeType": "Return",
												"src": "11998:13:13"
											}
										]
									},
									"documentation": {
										"id": 2801,
										"nodeType": "StructuredDocumentation",
										"src": "10911:119:13",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11044:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11057:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2932,
												"src": "11049:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11049:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11048:15:13"
									},
									"returnParameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2932,
												"src": "11087:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11087:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11086:9:13"
									},
									"scope": 3276,
									"src": "11035:983:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2966,
										"nodeType": "Block",
										"src": "12251:168:13",
										"statements": [
											{
												"id": 2965,
												"nodeType": "UncheckedBlock",
												"src": "12261:152:13",
												"statements": [
													{
														"assignments": [
															2944
														],
														"declarations": [
															{
																"constant": false,
																"id": 2944,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12293:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2965,
																"src": "12285:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2943,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12285:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2948,
														"initialValue": {
															"arguments": [
																{
																	"id": 2946,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2935,
																	"src": "12307:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2945,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2932,
																	2967
																],
																"referencedDeclaration": 2932,
																"src": "12302:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12302:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12285:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2949,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2944,
																"src": "12334:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2951,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2938,
																						"src": "12361:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2232",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2232",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2950,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3275,
																					"src": "12344:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2232_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12344:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2955,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2953,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12374:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2954,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2944,
																						"src": "12379:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12374:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2956,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2935,
																					"src": "12388:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12374:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12344:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12400:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12344:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12396:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2962,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12343:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12334:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2942,
														"id": 2964,
														"nodeType": "Return",
														"src": "12327:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2933,
										"nodeType": "StructuredDocumentation",
										"src": "12024:142:13",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "12180:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2935,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12193:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2967,
												"src": "12185:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12185:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2938,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12209:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2967,
												"src": "12200:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2232",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2937,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2936,
														"name": "Rounding",
														"nameLocations": [
															"12200:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2232,
														"src": "12200:8:13"
													},
													"referencedDeclaration": 2232,
													"src": "12200:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2232",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12184:34:13"
									},
									"returnParameters": {
										"id": 2942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2941,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2967,
												"src": "12242:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12242:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12241:9:13"
									},
									"scope": 3276,
									"src": "12171:248:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3095,
										"nodeType": "Block",
										"src": "12612:854:13",
										"statements": [
											{
												"assignments": [
													2976
												],
												"declarations": [
													{
														"constant": false,
														"id": 2976,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12630:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3095,
														"src": "12622:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2975,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12622:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2978,
												"initialValue": {
													"hexValue": "30",
													"id": 2977,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12639:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12622:18:13"
											},
											{
												"id": 3092,
												"nodeType": "UncheckedBlock",
												"src": "12650:787:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2979,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2970,
																"src": "12678:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12687:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12693:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12687:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12678:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2995,
														"nodeType": "IfStatement",
														"src": "12674:103:13",
														"trueBody": {
															"id": 2994,
															"nodeType": "Block",
															"src": "12697:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2984,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2970,
																			"src": "12715:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2985,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12724:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2986,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12730:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12724:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12715:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2989,
																	"nodeType": "ExpressionStatement",
																	"src": "12715:17:13"
																},
																{
																	"expression": {
																		"id": 2992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2990,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2976,
																			"src": "12750:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12760:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12750:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2993,
																	"nodeType": "ExpressionStatement",
																	"src": "12750:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2996,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2970,
																"src": "12794:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12803:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12809:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12803:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12794:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3012,
														"nodeType": "IfStatement",
														"src": "12790:103:13",
														"trueBody": {
															"id": 3011,
															"nodeType": "Block",
															"src": "12813:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 3005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3001,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2970,
																			"src": "12831:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12840:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3003,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12846:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12840:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12831:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3006,
																	"nodeType": "ExpressionStatement",
																	"src": "12831:17:13"
																},
																{
																	"expression": {
																		"id": 3009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3007,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2976,
																			"src": "12866:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12876:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12866:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3010,
																	"nodeType": "ExpressionStatement",
																	"src": "12866:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3013,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2970,
																"src": "12910:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12919:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12919:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12910:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3029,
														"nodeType": "IfStatement",
														"src": "12906:103:13",
														"trueBody": {
															"id": 3028,
															"nodeType": "Block",
															"src": "12929:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 3022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3018,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2970,
																			"src": "12947:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12956:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12962:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12956:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12947:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3023,
																	"nodeType": "ExpressionStatement",
																	"src": "12947:17:13"
																},
																{
																	"expression": {
																		"id": 3026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3024,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2976,
																			"src": "12982:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12992:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12982:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3027,
																	"nodeType": "ExpressionStatement",
																	"src": "12982:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3030,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2970,
																"src": "13026:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13035:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13041:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "13035:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "13026:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3046,
														"nodeType": "IfStatement",
														"src": "13022:100:13",
														"trueBody": {
															"id": 3045,
															"nodeType": "Block",
															"src": "13044:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 3039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3035,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2970,
																			"src": "13062:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13071:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3037,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13077:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "13071:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "13062:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3040,
																	"nodeType": "ExpressionStatement",
																	"src": "13062:16:13"
																},
																{
																	"expression": {
																		"id": 3043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3041,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2976,
																			"src": "13096:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13106:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "13096:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3044,
																	"nodeType": "ExpressionStatement",
																	"src": "13096:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3047,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2970,
																"src": "13139:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13148:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13154:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "13148:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "13139:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3063,
														"nodeType": "IfStatement",
														"src": "13135:100:13",
														"trueBody": {
															"id": 3062,
															"nodeType": "Block",
															"src": "13157:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 3056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3052,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2970,
																			"src": "13175:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13184:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13190:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "13184:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "13175:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3057,
																	"nodeType": "ExpressionStatement",
																	"src": "13175:16:13"
																},
																{
																	"expression": {
																		"id": 3060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3058,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2976,
																			"src": "13209:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13219:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "13209:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3061,
																	"nodeType": "ExpressionStatement",
																	"src": "13209:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3064,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2970,
																"src": "13252:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13261:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13267:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "13261:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "13252:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3080,
														"nodeType": "IfStatement",
														"src": "13248:100:13",
														"trueBody": {
															"id": 3079,
															"nodeType": "Block",
															"src": "13270:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 3073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3069,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2970,
																			"src": "13288:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13297:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13303:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "13297:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "13288:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3074,
																	"nodeType": "ExpressionStatement",
																	"src": "13288:16:13"
																},
																{
																	"expression": {
																		"id": 3077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3075,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2976,
																			"src": "13322:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13332:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "13322:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3078,
																	"nodeType": "ExpressionStatement",
																	"src": "13322:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3081,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2970,
																"src": "13365:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13374:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13380:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13374:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13365:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3091,
														"nodeType": "IfStatement",
														"src": "13361:66:13",
														"trueBody": {
															"id": 3090,
															"nodeType": "Block",
															"src": "13383:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 3088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3086,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2976,
																			"src": "13401:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13411:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13401:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3089,
																	"nodeType": "ExpressionStatement",
																	"src": "13401:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3093,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2976,
													"src": "13453:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2974,
												"id": 3094,
												"nodeType": "Return",
												"src": "13446:13:13"
											}
										]
									},
									"documentation": {
										"id": 2968,
										"nodeType": "StructuredDocumentation",
										"src": "12425:120:13",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12559:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2970,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12573:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "12565:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12565:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12564:15:13"
									},
									"returnParameters": {
										"id": 2974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "12603:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12603:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12602:9:13"
									},
									"scope": 3276,
									"src": "12550:916:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3130,
										"nodeType": "Block",
										"src": "13701:170:13",
										"statements": [
											{
												"id": 3129,
												"nodeType": "UncheckedBlock",
												"src": "13711:154:13",
												"statements": [
													{
														"assignments": [
															3108
														],
														"declarations": [
															{
																"constant": false,
																"id": 3108,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13743:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3129,
																"src": "13735:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3107,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13735:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3112,
														"initialValue": {
															"arguments": [
																{
																	"id": 3110,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3099,
																	"src": "13758:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3109,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3096,
																	3131
																],
																"referencedDeclaration": 3096,
																"src": "13752:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13752:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13735:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3113,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3108,
																"src": "13785:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3115,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3102,
																						"src": "13812:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2232",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2232",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3114,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3275,
																					"src": "13795:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2232_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13795:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3119,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3117,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13825:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3118,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3108,
																						"src": "13831:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13825:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3120,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3099,
																					"src": "13840:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13825:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13795:50:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13852:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13795:58:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13848:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3126,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13794:60:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13785:69:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3106,
														"id": 3128,
														"nodeType": "Return",
														"src": "13778:76:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3097,
										"nodeType": "StructuredDocumentation",
										"src": "13472:143:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13629:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3099,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13643:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3131,
												"src": "13635:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13635:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3102,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13659:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3131,
												"src": "13650:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2232",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3101,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3100,
														"name": "Rounding",
														"nameLocations": [
															"13650:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2232,
														"src": "13650:8:13"
													},
													"referencedDeclaration": 2232,
													"src": "13650:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2232",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13634:34:13"
									},
									"returnParameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3131,
												"src": "13692:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13692:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13691:9:13"
									},
									"scope": 3276,
									"src": "13620:251:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3217,
										"nodeType": "Block",
										"src": "14191:600:13",
										"statements": [
											{
												"assignments": [
													3140
												],
												"declarations": [
													{
														"constant": false,
														"id": 3140,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "14209:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3217,
														"src": "14201:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14201:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3142,
												"initialValue": {
													"hexValue": "30",
													"id": 3141,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14218:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14201:18:13"
											},
											{
												"id": 3214,
												"nodeType": "UncheckedBlock",
												"src": "14229:533:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3143,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3134,
																	"src": "14257:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14266:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "14257:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14272:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14257:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3157,
														"nodeType": "IfStatement",
														"src": "14253:98:13",
														"trueBody": {
															"id": 3156,
															"nodeType": "Block",
															"src": "14275:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 3150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3148,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3134,
																			"src": "14293:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14303:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "14293:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3151,
																	"nodeType": "ExpressionStatement",
																	"src": "14293:13:13"
																},
																{
																	"expression": {
																		"id": 3154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3152,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3140,
																			"src": "14324:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14334:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14324:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3155,
																	"nodeType": "ExpressionStatement",
																	"src": "14324:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3158,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3134,
																	"src": "14368:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14377:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14368:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14382:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14368:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3172,
														"nodeType": "IfStatement",
														"src": "14364:95:13",
														"trueBody": {
															"id": 3171,
															"nodeType": "Block",
															"src": "14385:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3163,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3134,
																			"src": "14403:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14413:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14403:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3166,
																	"nodeType": "ExpressionStatement",
																	"src": "14403:12:13"
																},
																{
																	"expression": {
																		"id": 3169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3167,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3140,
																			"src": "14433:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14443:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14433:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3170,
																	"nodeType": "ExpressionStatement",
																	"src": "14433:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3173,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3134,
																	"src": "14476:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14485:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14476:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14490:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14476:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3187,
														"nodeType": "IfStatement",
														"src": "14472:95:13",
														"trueBody": {
															"id": 3186,
															"nodeType": "Block",
															"src": "14493:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3178,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3134,
																			"src": "14511:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14521:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14511:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3181,
																	"nodeType": "ExpressionStatement",
																	"src": "14511:12:13"
																},
																{
																	"expression": {
																		"id": 3184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3182,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3140,
																			"src": "14541:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14551:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14541:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3185,
																	"nodeType": "ExpressionStatement",
																	"src": "14541:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3188,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3134,
																	"src": "14584:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14593:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14584:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14598:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14584:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3202,
														"nodeType": "IfStatement",
														"src": "14580:95:13",
														"trueBody": {
															"id": 3201,
															"nodeType": "Block",
															"src": "14601:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3193,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3134,
																			"src": "14619:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14629:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14619:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3196,
																	"nodeType": "ExpressionStatement",
																	"src": "14619:12:13"
																},
																{
																	"expression": {
																		"id": 3199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3197,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3140,
																			"src": "14649:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14659:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14649:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3200,
																	"nodeType": "ExpressionStatement",
																	"src": "14649:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3203,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3134,
																	"src": "14692:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14701:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14692:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14705:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14692:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3213,
														"nodeType": "IfStatement",
														"src": "14688:64:13",
														"trueBody": {
															"id": 3212,
															"nodeType": "Block",
															"src": "14708:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 3210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3208,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3140,
																			"src": "14726:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14736:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14726:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3211,
																	"nodeType": "ExpressionStatement",
																	"src": "14726:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3215,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3140,
													"src": "14778:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3138,
												"id": 3216,
												"nodeType": "Return",
												"src": "14771:13:13"
											}
										]
									},
									"documentation": {
										"id": 3132,
										"nodeType": "StructuredDocumentation",
										"src": "13877:246:13",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14137:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3134,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14152:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3218,
												"src": "14144:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14144:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14143:15:13"
									},
									"returnParameters": {
										"id": 3138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3218,
												"src": "14182:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14182:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14181:9:13"
									},
									"scope": 3276,
									"src": "14128:663:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3255,
										"nodeType": "Block",
										"src": "15028:177:13",
										"statements": [
											{
												"id": 3254,
												"nodeType": "UncheckedBlock",
												"src": "15038:161:13",
												"statements": [
													{
														"assignments": [
															3230
														],
														"declarations": [
															{
																"constant": false,
																"id": 3230,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "15070:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3254,
																"src": "15062:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3229,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15062:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3234,
														"initialValue": {
															"arguments": [
																{
																	"id": 3232,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3221,
																	"src": "15086:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3231,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3218,
																	3256
																],
																"referencedDeclaration": 3218,
																"src": "15079:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15079:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15062:30:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3235,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3230,
																"src": "15113:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3237,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3224,
																						"src": "15140:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2232",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2232",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3236,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3275,
																					"src": "15123:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2232_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15123:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3244,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3239,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15153:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3242,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3240,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3230,
																									"src": "15159:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3241,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15169:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "15159:11:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3243,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "15158:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15153:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3245,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3221,
																					"src": "15174:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15153:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "15123:56:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15186:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "15123:64:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15182:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3251,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15122:66:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "15113:75:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3228,
														"id": 3253,
														"nodeType": "Return",
														"src": "15106:82:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3219,
										"nodeType": "StructuredDocumentation",
										"src": "14797:144:13",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14955:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14970:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3256,
												"src": "14962:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14962:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3224,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14986:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3256,
												"src": "14977:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2232",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3223,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3222,
														"name": "Rounding",
														"nameLocations": [
															"14977:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2232,
														"src": "14977:8:13"
													},
													"referencedDeclaration": 2232,
													"src": "14977:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2232",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14961:34:13"
									},
									"returnParameters": {
										"id": 3228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3256,
												"src": "15019:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15019:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:9:13"
									},
									"scope": 3276,
									"src": "14946:259:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3274,
										"nodeType": "Block",
										"src": "15403:48:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3267,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3260,
																	"src": "15426:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2232",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2232",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15420:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3265,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15420:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15420:15:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15438:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15420:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15443:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15420:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3264,
												"id": 3273,
												"nodeType": "Return",
												"src": "15413:31:13"
											}
										]
									},
									"documentation": {
										"id": 3257,
										"nodeType": "StructuredDocumentation",
										"src": "15211:113:13",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15338:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3260,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15364:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3275,
												"src": "15355:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2232",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3259,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3258,
														"name": "Rounding",
														"nameLocations": [
															"15355:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2232,
														"src": "15355:8:13"
													},
													"referencedDeclaration": 2232,
													"src": "15355:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2232",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15354:19:13"
									},
									"returnParameters": {
										"id": 3264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3275,
												"src": "15397:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15397:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15396:6:13"
									},
									"scope": 3276,
									"src": "15329:122:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3277,
							"src": "203:15250:13",
							"usedErrors": [
								2227
							],
							"usedEvents": []
						}
					],
					"src": "103:15351:13"
				},
				"id": 13
			}
		}
	}
}