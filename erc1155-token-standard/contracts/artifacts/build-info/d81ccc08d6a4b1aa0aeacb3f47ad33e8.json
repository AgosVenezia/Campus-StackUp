{
	"id": "d81ccc08d6a4b1aa0aeacb3f47ad33e8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SimpleERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\";\r\n\r\ncontract MyERC1155Token is ERC1155 {\r\n    constructor() ERC1155(\"https://myapi.com/api/token/{id}.json\") {}\r\n\r\n    function mint(address account, uint256 id, uint256 amount, bytes memory data) public {\r\n        _mint(account, id, amount, data);\r\n    }\r\n    \r\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public {\r\n        _mintBatch(to, ids, amounts, data);\r\n    }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return a == 0 ? 0 : (a - 1) / b + 1;\n        }\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SimpleERC1155.sol": {
				"MyERC1155Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleERC1155.sol\":177:601  contract MyERC1155Token is ERC1155 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SimpleERC1155.sol\":219:284  constructor() ERC1155(\"https://myapi.com/api/token/{id}.json\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x25\n  dup2\n  mstore\n  0x20\n  add\n  data_be7838470a3c26528d43bae23565234ed295a39bde7b6c68ac16c023b38bf94f\n  0x25\n  swap2\n  codecopy\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  tag_5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1301:1305  uri_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1293:1300  _setURI */\n  shl(0x20, tag_6)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  pop\n    /* \"contracts/SimpleERC1155.sol\":177:601  contract MyERC1155Token is ERC1155 {... */\n  jump(tag_8)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\ntag_6:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  0x02\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_12:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_13:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_14:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_15:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_37:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_39\n  tag_14\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":714:798   */\ntag_38:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_16:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_17:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_18:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_19:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_44\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_18\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1429:1468   */\n  tag_45\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_18\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_20:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_21:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_22:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_49\n    /* \"#utility.yul\":1818:1852   */\n  tag_50\n    /* \"#utility.yul\":1827:1851   */\n  tag_51\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_20\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1818:1852   */\n  tag_21\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1800:1853   */\n  tag_20\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_23:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_24:\n    /* \"#utility.yul\":2056:2095   */\n  tag_54\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_22\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2117:2208   */\n  tag_55\n    /* \"#utility.yul\":2166:2207   */\n  tag_56\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_23\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_19\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_25:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_26:\n    /* \"#utility.yul\":2377:2409   */\n  tag_59\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2418:2483   */\n  tag_60\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_24\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_27:\n    /* \"#utility.yul\":2555:2675   */\ntag_62:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_65\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_26\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_28:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_68\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_16\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2906:2935   */\n  tag_69\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_17\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_70:\n    /* \"#utility.yul\":3133:3213   */\n  tag_71\n    /* \"#utility.yul\":3189:3211   */\n  tag_72\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_17\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_27\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_67:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_29:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_30:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_75\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_29\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_31:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_77\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_30\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_11:\n    /* \"#utility.yul\":3950:3987   */\n  tag_79\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_81\n  tag_13\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4038:4094   */\ntag_80:\n    /* \"#utility.yul\":4118:4156   */\n  tag_82\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_15\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4203:4270   */\n  tag_83\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_28\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_85\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_86:\n    /* \"#utility.yul\":5144:5211   */\n  tag_87\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_31\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_84)\n    /* \"#utility.yul\":4365:4983   */\ntag_85:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_88\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_16\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_89:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_89)\ntag_91:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_93\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_30\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_92:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_84:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SimpleERC1155.sol\":177:601  contract MyERC1155Token is ERC1155 {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_be7838470a3c26528d43bae23565234ed295a39bde7b6c68ac16c023b38bf94f 68747470733a2f2f6d796170692e636f6d2f6170692f746f6b656e2f7b69647d2e6a736f6e\n\nsub_0: assembly {\n        /* \"contracts/SimpleERC1155.sol\":177:601  contract MyERC1155Token is ERC1155 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x731133e9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1f7fdffa\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_5:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleERC1155.sol\":440:598  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_7:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleERC1155.sol\":292:428  function mint(address account, uint256 id, uint256 amount, bytes memory data) public {... */\n    tag_9:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_10:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_11:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_17:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2324:2331  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2350:2359  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2360:2362  id */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2364:2371  account */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2343:2372  return _balances[id][account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_23:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1482:1486  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1532:1558  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1517:1528  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_65\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1589:1626  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1574:1585  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_65:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_66\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1666:1677  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1642:1665  super.supportsInterface */\n      tag_68\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1498:1678  return... */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_29:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2144:2157  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2176:2180  _uri */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2169:2180  return _uri */\n      dup1\n      sload\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_72\n      swap1\n      tag_71\n      jump\t// in\n    tag_72:\n      dup1\n      iszero\n      tag_73\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_74\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_73)\n    tag_74:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_75:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_75\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SimpleERC1155.sol\":440:598  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public {... */\n    tag_35:\n        /* \"contracts/SimpleERC1155.sol\":556:590  _mintBatch(to, ids, amounts, data) */\n      tag_77\n        /* \"contracts/SimpleERC1155.sol\":567:569  to */\n      dup5\n        /* \"contracts/SimpleERC1155.sol\":571:574  ids */\n      dup5\n        /* \"contracts/SimpleERC1155.sol\":576:583  amounts */\n      dup5\n        /* \"contracts/SimpleERC1155.sol\":585:589  data */\n      dup5\n        /* \"contracts/SimpleERC1155.sol\":556:566  _mintBatch */\n      tag_78\n        /* \"contracts/SimpleERC1155.sol\":556:590  _mintBatch(to, ids, amounts, data) */\n      jump\t// in\n    tag_77:\n        /* \"contracts/SimpleERC1155.sol\":440:598  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4208:4222  address sender */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      tag_80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4225:4235  _msgSender */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      jump\t// in\n    tag_80:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4208:4237  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4259:4265  sender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4251:4255  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_82\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      tag_83\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4287:4291  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4293:4299  sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4270:4286  isApprovedForAll */\n      tag_57\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_83:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4269:4300  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n    tag_82:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_84\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4352:4358  sender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4360:4364  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_84:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4408:4412  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4414:4416  to */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4418:4421  ids */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4423:4429  values */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4431:4435  data */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4385:4407  _safeBatchTransferFrom */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4198:4443  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_43:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2660:2676  uint256[] memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2711:2714  ids */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2711:2721  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2692:2700  accounts */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2692:2707  accounts.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2692:2721  accounts.length != ids.length */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n      tag_90\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2770:2773  ids */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2770:2780  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2782:2790  accounts */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2782:2797  accounts.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n    tag_90:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2819:2849  uint256[] memory batchBalances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2866:2874  accounts */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2866:2881  accounts.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2852:2882  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_93\n      jumpi\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n    tag_93:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_96:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2819:2882  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2898:2907  uint256 i */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_97:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2917:2925  accounts */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2917:2932  accounts.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2913:2914  i */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2913:2932  i < accounts.length */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      tag_101\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3010:3011  i */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2982:2990  accounts */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2982:3009  accounts.unsafeMemoryAccess */\n      tag_102\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      tag_103\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3037:3038  i */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3014:3017  ids */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3014:3036  ids.unsafeMemoryAccess */\n      tag_104\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2972:2981  balanceOf */\n      tag_17\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      jump\t// in\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2953:2966  batchBalances */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2967:2968  i */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2953:2969  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_105\n      jumpi\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n    tag_105:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2953:3040  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2934:2937  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_97)\n    tag_98:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3068:3081  batchBalances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3061:3081  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleERC1155.sol\":292:428  function mint(address account, uint256 id, uint256 amount, bytes memory data) public {... */\n    tag_49:\n        /* \"contracts/SimpleERC1155.sol\":388:420  _mint(account, id, amount, data) */\n      tag_109\n        /* \"contracts/SimpleERC1155.sol\":394:401  account */\n      dup5\n        /* \"contracts/SimpleERC1155.sol\":403:405  id */\n      dup5\n        /* \"contracts/SimpleERC1155.sol\":407:413  amount */\n      dup5\n        /* \"contracts/SimpleERC1155.sol\":415:419  data */\n      dup5\n        /* \"contracts/SimpleERC1155.sol\":388:393  _mint */\n      tag_110\n        /* \"contracts/SimpleERC1155.sol\":388:420  _mint(account, id, amount, data) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/SimpleERC1155.sol\":292:428  function mint(address account, uint256 id, uint256 amount, bytes memory data) public {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_53:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_112\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3260:3270  _msgSender */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3274:3282  operator */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3284:3292  approved */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3241:3259  _setApprovalForAll */\n      tag_114\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_112:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3457:3461  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3480:3498  _operatorApprovals */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3499:3506  account */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3508:3516  operator */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3473:3517  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3714:3728  address sender */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3731:3741  _msgSender */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3714:3743  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3765:3771  sender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3757:3761  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_118\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      tag_119\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3793:3797  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3799:3805  sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3776:3792  isApprovedForAll */\n      tag_57\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_119:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3775:3806  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_120\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3858:3864  sender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3866:3870  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3909:3913  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3915:3917  to */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3919:3921  id */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3923:3928  value */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3930:3934  data */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3891:3908  _safeTransferFrom */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n    tag_122:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3704:3942  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11523:11805  function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {... */\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11658:11659  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11644:11660  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11644:11646  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11644:11660  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11640:11728  if (to == address(0)) {... */\n      tag_126\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11714:11715  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11683:11717  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11640:11728  if (to == address(0)) {... */\n    tag_126:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11737:11798  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_129\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11772:11773  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11776:11778  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11780:11783  ids */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11785:11791  values */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11793:11797  data */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11737:11763  _updateWithAcceptanceCheck */\n      tag_130\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11737:11798  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_129:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11523:11805  function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_81:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n    tag_88:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9222:9223  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9208:9210  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9278:9279  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n    tag_133:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9321:9322  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9305:9309  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n      tag_135\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9375:9376  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n    tag_135:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_137\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9425:9429  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9431:9433  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9435:9438  ids */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9440:9446  values */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9448:9452  data */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9398:9424  _updateWithAcceptanceCheck */\n      tag_130\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_137:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n    tag_102:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4689:4700  address res */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4772:4775  pos */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      mul\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4761:4765  0x20 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4756:4759  arr */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4752:4766  add(arr, 0x20) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4735:4784  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n    tag_104:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4290:4301  uint256 res */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4378:4382  0x20 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4373:4376  pos */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4369:4383  mul(pos, 0x20) */\n      mul\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4362:4366  0x20 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4357:4360  arr */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4353:4367  add(arr, 0x20) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4349:4384  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4343:4385  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4336:4385  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_110:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10856:10857  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10842:10844  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n      tag_141\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10912:10913  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n    tag_141:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10936:10956  uint256[] memory ids */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10958:10981  uint256[] memory values */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      tag_143\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11004:11006  id */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11008:11013  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10985:11003  _asSingletonArrays */\n      tag_144\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_143:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10935:11014  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_145\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11059:11060  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11063:11065  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11067:11070  ids */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11072:11078  values */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11080:11084  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11024:11050  _updateWithAcceptanceCheck */\n      tag_130\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_145:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10828:11092  {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_114:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13395:13396  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13375:13383  operator */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n      tag_147\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13451:13452  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      0xced3e10000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n    tag_147:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13512:13520  approved */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13474:13492  _operatorApprovals */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13493:13498  owner */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13500:13508  operator */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13474:13520  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13557:13565  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13550:13555  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13567:13575  approved */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_123:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8287:8288  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8273:8275  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n      tag_151\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8343:8344  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n    tag_151:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8386:8387  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8370:8374  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n      tag_153\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8440:8441  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n    tag_153:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8464:8484  uint256[] memory ids */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8486:8509  uint256[] memory values */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      tag_155\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8532:8534  id */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8536:8541  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8513:8531  _asSingletonArrays */\n      tag_144\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_155:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8463:8542  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_156\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8579:8583  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8585:8587  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8589:8592  ids */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8594:8600  values */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8602:8606  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8552:8578  _updateWithAcceptanceCheck */\n      tag_130\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_156:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8259:8614  {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n    tag_130:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      tag_158\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7213:7217  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7219:7221  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7228:7234  values */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n      tag_159\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      jump\t// in\n    tag_158:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7263:7264  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7249:7251  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n      tag_160\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7281:7297  address operator */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      tag_161\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7300:7310  _msgSender */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      jump\t// in\n    tag_161:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7281:7312  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7330:7333  ids */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      tag_162\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      tag_163\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7401:7402  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7378:7381  ids */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7378:7400  ids.unsafeMemoryAccess */\n      tag_104\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7365:7403  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      tag_164\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7463:7464  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7437:7443  values */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7437:7462  values.unsafeMemoryAccess */\n      tag_104\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_164:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7421:7465  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_165\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7524:7528  from */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7530:7532  to */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7534:7536  id */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7538:7543  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7545:7549  data */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n      tag_166\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_165:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      jump(tag_167)\n    tag_162:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_168\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7635:7639  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7641:7643  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7650:7656  values */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7658:7662  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n      tag_169\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n    tag_168:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n    tag_167:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7267:7688  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n    tag_160:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16082:16931  function _asSingletonArrays(... */\n    tag_144:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16190:16213  uint256[] memory array1 */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16215:16238  uint256[] memory array2 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16376:16380  0x40 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16370:16381  mload(0x40) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16360:16381  array1 := mload(0x40) */\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16446:16447  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16438:16444  array1 */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16431:16448  mstore(array1, 1) */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16584:16592  element1 */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16577:16581  0x20 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16569:16575  array1 */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16565:16582  add(array1, 0x20) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16558:16593  mstore(add(array1, 0x20), element1) */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16706:16710  0x40 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16698:16704  array1 */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16694:16711  add(array1, 0x40) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16684:16711  array2 := add(array1, 0x40) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16739:16740  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16731:16737  array2 */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16724:16741  mstore(array2, 1) */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16780:16788  element2 */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16773:16777  0x20 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16765:16771  array2 */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16761:16778  add(array2, 0x20) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16754:16789  mstore(add(array2, 0x20), element2) */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16909:16913  0x40 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16901:16907  array2 */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16897:16914  add(array2, 0x40) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16891:16895  0x40 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16884:16915  mstore(0x40, add(array2, 0x40)) */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":16082:16931  function _asSingletonArrays(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_159:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5279:5285  values */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n      tag_172\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5341:5344  ids */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5353:5359  values */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n    tag_172:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      tag_174\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5407:5417  _msgSender */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5388:5419  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5435:5444  uint256 i */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_175:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5450:5451  i */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5485:5495  uint256 id */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      tag_178\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5521:5522  i */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5498:5501  ids */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5498:5520  ids.unsafeMemoryAccess */\n      tag_104\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5485:5523  uint256 id = ids.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5537:5550  uint256 value */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      tag_179\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5579:5580  i */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5553:5559  values */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5553:5578  values.unsafeMemoryAccess */\n      tag_104\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5537:5581  uint256 value = values.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5616:5617  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5600:5604  from */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n      tag_180\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5670:5672  id */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5674:5678  from */\n      dup11\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5638:5679  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5715:5720  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5701:5712  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5778:5782  from */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5784:5795  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5797:5802  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5804:5806  id */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      0x03dee4c500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n    tag_181:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5978:5983  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5964:5975  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5952:5954  id */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5956:5960  from */\n      dup12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5620:6016  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n    tag_180:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6048:6049  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6034:6036  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n      tag_184\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6080:6082  id */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6084:6086  to */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      dup3\n      dup3\n      sload\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n    tag_184:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5471:6121  {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_175)\n    tag_176:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      tag_187\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      tag_188\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6202:6203  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6179:6182  ids */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6179:6201  ids.unsafeMemoryAccess */\n      tag_104\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_188:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      tag_189\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6260:6261  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6234:6240  values */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6234:6259  values.unsafeMemoryAccess */\n      tag_104\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6218:6262  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6312:6314  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6306:6310  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6316:6318  id */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6320:6325  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_190\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      jump(tag_191)\n    tag_187:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6392:6394  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6386:6390  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6401:6407  values */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_192\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n    tag_191:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13761:14736  function _doSafeTransferAcceptanceCheck(... */\n    tag_166:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13984:13985  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13967:13969  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13963:14730  if (to.code.length > 0) {... */\n      iszero\n      tag_195\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14022:14024  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14054:14058  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14060:14062  id */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14064:14069  value */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14071:14075  data */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_198\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      0x01\n    tag_198:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14001:14720  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_201\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_206\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_205)\n    tag_206:\n      0x60\n      swap2\n      pop\n    tag_205:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14356:14706  if (reason.length == 0) {... */\n      tag_207\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14488:14490  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14465:14491  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14356:14706  if (reason.length == 0) {... */\n    tag_207:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14658:14664  reason */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14652:14665  mload(reason) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14643:14649  reason */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14639:14641  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14635:14650  add(32, reason) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14628:14666  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14001:14720  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_201:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14137:14180  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14125:14133  response */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_211\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14273:14275  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_211:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14077:14309  returns (bytes4 response) {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13963:14730  if (to.code.length > 0) {... */\n    tag_195:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":13761:14736  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14924:15966  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_169:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15172:15173  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15155:15157  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15155:15169  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15155:15173  to.code.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15151:15960  if (to.code.length > 0) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15210:15212  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15193:15236  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15237:15245  operator */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15247:15251  from */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15253:15256  ids */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15258:15264  values */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15266:15270  data */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15193:15271  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_217\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_218\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_218:\n      0x01\n    tag_217:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15189:15950  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_219\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_224\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_223)\n    tag_224:\n      0x60\n      swap2\n      pop\n    tag_223:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15607:15608  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15590:15596  reason */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15590:15603  reason.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15590:15608  reason.length == 0 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15586:15936  if (reason.length == 0) {... */\n      tag_225\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15718:15720  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15695:15721  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15586:15936  if (reason.length == 0) {... */\n    tag_225:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15888:15894  reason */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15882:15895  mload(reason) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15873:15879  reason */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15869:15871  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15865:15880  add(32, reason) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15858:15896  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15189:15950  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n    tag_219:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15362:15410  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15350:15410  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15350:15358  response */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15350:15410  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15346:15525  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_229\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15503:15505  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15480:15506  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15346:15525  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_229:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15272:15539  returns (... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":15151:15960  if (to.code.length > 0) {... */\n    tag_214:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":14924:15966  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_231:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_232:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_233:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_234:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_235:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_289\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_234\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_236:\n        /* \"#utility.yul\":641:665   */\n      tag_291\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_235\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_292:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_237:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_294\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_236\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_238:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_239:\n        /* \"#utility.yul\":997:1021   */\n      tag_297\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_238\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_298:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_240:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_300\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_239\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_16:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_303\n      tag_232\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":1290:1409   */\n    tag_302:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_304\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_237\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_305\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_240\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_241:\n        /* \"#utility.yul\":1764:1788   */\n      tag_307\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_238\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_19:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_309\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_241\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_242:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_243:\n        /* \"#utility.yul\":2256:2279   */\n      tag_312\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_242\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_313:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_244:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_315\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_243\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_22:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_318\n      tag_232\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":2528:2647   */\n    tag_317:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_319\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_244\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_245:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_246:\n        /* \"#utility.yul\":2963:2984   */\n      tag_322\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_245\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_25:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_324\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_246\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_28:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_327\n      tag_232\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3289:3408   */\n    tag_326:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_328\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_240\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3647   */\n    tag_247:\n        /* \"#utility.yul\":3600:3606   */\n      0x00\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3640   */\n      mload\n        /* \"#utility.yul\":3618:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3822   */\n    tag_248:\n        /* \"#utility.yul\":3737:3748   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup3\n        /* \"#utility.yul\":3766:3769   */\n      dup3\n        /* \"#utility.yul\":3759:3778   */\n      mstore\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3806:3809   */\n      dup3\n        /* \"#utility.yul\":3802:3816   */\n      add\n        /* \"#utility.yul\":3787:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:4074   */\n    tag_249:\n        /* \"#utility.yul\":3909:3910   */\n      0x00\n        /* \"#utility.yul\":3919:4032   */\n    tag_332:\n        /* \"#utility.yul\":3933:3939   */\n      dup4\n        /* \"#utility.yul\":3930:3931   */\n      dup2\n        /* \"#utility.yul\":3927:3940   */\n      lt\n        /* \"#utility.yul\":3919:4032   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":4018:4019   */\n      dup1\n        /* \"#utility.yul\":4013:4016   */\n      dup3\n        /* \"#utility.yul\":4009:4020   */\n      add\n        /* \"#utility.yul\":4003:4021   */\n      mload\n        /* \"#utility.yul\":3999:4000   */\n      dup2\n        /* \"#utility.yul\":3994:3997   */\n      dup5\n        /* \"#utility.yul\":3990:4001   */\n      add\n        /* \"#utility.yul\":3983:4022   */\n      mstore\n        /* \"#utility.yul\":3955:3957   */\n      0x20\n        /* \"#utility.yul\":3952:3953   */\n      dup2\n        /* \"#utility.yul\":3948:3958   */\n      add\n        /* \"#utility.yul\":3943:3958   */\n      swap1\n      pop\n        /* \"#utility.yul\":3919:4032   */\n      jump(tag_332)\n    tag_334:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4057:4063   */\n      dup5\n        /* \"#utility.yul\":4052:4055   */\n      dup5\n        /* \"#utility.yul\":4048:4064   */\n      add\n        /* \"#utility.yul\":4041:4068   */\n      mstore\n        /* \"#utility.yul\":3890:4074   */\n      pop\n        /* \"#utility.yul\":3828:4074   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4080:4182   */\n    tag_250:\n        /* \"#utility.yul\":4121:4127   */\n      0x00\n        /* \"#utility.yul\":4172:4174   */\n      0x1f\n        /* \"#utility.yul\":4168:4175   */\n      not\n        /* \"#utility.yul\":4163:4165   */\n      0x1f\n        /* \"#utility.yul\":4156:4161   */\n      dup4\n        /* \"#utility.yul\":4152:4166   */\n      add\n        /* \"#utility.yul\":4148:4176   */\n      and\n        /* \"#utility.yul\":4138:4176   */\n      swap1\n      pop\n        /* \"#utility.yul\":4080:4182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4188:4565   */\n    tag_251:\n        /* \"#utility.yul\":4276:4279   */\n      0x00\n        /* \"#utility.yul\":4304:4343   */\n      tag_337\n        /* \"#utility.yul\":4337:4342   */\n      dup3\n        /* \"#utility.yul\":4304:4343   */\n      tag_247\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4359:4430   */\n      tag_338\n        /* \"#utility.yul\":4423:4429   */\n      dup2\n        /* \"#utility.yul\":4418:4421   */\n      dup6\n        /* \"#utility.yul\":4359:4430   */\n      tag_248\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4352:4430   */\n      swap4\n      pop\n        /* \"#utility.yul\":4439:4504   */\n      tag_339\n        /* \"#utility.yul\":4497:4503   */\n      dup2\n        /* \"#utility.yul\":4492:4495   */\n      dup6\n        /* \"#utility.yul\":4485:4489   */\n      0x20\n        /* \"#utility.yul\":4478:4483   */\n      dup7\n        /* \"#utility.yul\":4474:4490   */\n      add\n        /* \"#utility.yul\":4439:4504   */\n      tag_249\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4529:4558   */\n      tag_340\n        /* \"#utility.yul\":4551:4557   */\n      dup2\n        /* \"#utility.yul\":4529:4558   */\n      tag_250\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4524:4527   */\n      dup5\n        /* \"#utility.yul\":4520:4559   */\n      add\n        /* \"#utility.yul\":4513:4559   */\n      swap2\n      pop\n        /* \"#utility.yul\":4280:4565   */\n      pop\n        /* \"#utility.yul\":4188:4565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4571:4884   */\n    tag_31:\n        /* \"#utility.yul\":4684:4688   */\n      0x00\n        /* \"#utility.yul\":4722:4724   */\n      0x20\n        /* \"#utility.yul\":4711:4720   */\n      dup3\n        /* \"#utility.yul\":4707:4725   */\n      add\n        /* \"#utility.yul\":4699:4725   */\n      swap1\n      pop\n        /* \"#utility.yul\":4771:4780   */\n      dup2\n        /* \"#utility.yul\":4765:4769   */\n      dup2\n        /* \"#utility.yul\":4761:4781   */\n      sub\n        /* \"#utility.yul\":4757:4758   */\n      0x00\n        /* \"#utility.yul\":4746:4755   */\n      dup4\n        /* \"#utility.yul\":4742:4759   */\n      add\n        /* \"#utility.yul\":4735:4782   */\n      mstore\n        /* \"#utility.yul\":4799:4877   */\n      tag_342\n        /* \"#utility.yul\":4872:4876   */\n      dup2\n        /* \"#utility.yul\":4863:4869   */\n      dup5\n        /* \"#utility.yul\":4799:4877   */\n      tag_251\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":4791:4877   */\n      swap1\n      pop\n        /* \"#utility.yul\":4571:4884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5007   */\n    tag_252:\n        /* \"#utility.yul\":4999:5000   */\n      0x00\n        /* \"#utility.yul\":4996:4997   */\n      dup1\n        /* \"#utility.yul\":4989:5001   */\n      revert\n        /* \"#utility.yul\":5013:5193   */\n    tag_95:\n        /* \"#utility.yul\":5061:5138   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5058:5059   */\n      0x00\n        /* \"#utility.yul\":5051:5139   */\n      mstore\n        /* \"#utility.yul\":5158:5162   */\n      0x41\n        /* \"#utility.yul\":5155:5156   */\n      0x04\n        /* \"#utility.yul\":5148:5163   */\n      mstore\n        /* \"#utility.yul\":5182:5186   */\n      0x24\n        /* \"#utility.yul\":5179:5180   */\n      0x00\n        /* \"#utility.yul\":5172:5187   */\n      revert\n        /* \"#utility.yul\":5199:5480   */\n    tag_253:\n        /* \"#utility.yul\":5282:5309   */\n      tag_346\n        /* \"#utility.yul\":5304:5308   */\n      dup3\n        /* \"#utility.yul\":5282:5309   */\n      tag_250\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5274:5280   */\n      dup2\n        /* \"#utility.yul\":5270:5310   */\n      add\n        /* \"#utility.yul\":5412:5418   */\n      dup2\n        /* \"#utility.yul\":5400:5410   */\n      dup2\n        /* \"#utility.yul\":5397:5419   */\n      lt\n        /* \"#utility.yul\":5376:5394   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5364:5374   */\n      dup3\n        /* \"#utility.yul\":5361:5395   */\n      gt\n        /* \"#utility.yul\":5358:5420   */\n      or\n        /* \"#utility.yul\":5355:5443   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":5423:5441   */\n      tag_348\n      tag_95\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":5355:5443   */\n    tag_347:\n        /* \"#utility.yul\":5463:5473   */\n      dup1\n        /* \"#utility.yul\":5459:5461   */\n      0x40\n        /* \"#utility.yul\":5452:5474   */\n      mstore\n        /* \"#utility.yul\":5242:5480   */\n      pop\n        /* \"#utility.yul\":5199:5480   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5486:5615   */\n    tag_254:\n        /* \"#utility.yul\":5520:5526   */\n      0x00\n        /* \"#utility.yul\":5547:5567   */\n      tag_350\n      tag_231\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5537:5567   */\n      swap1\n      pop\n        /* \"#utility.yul\":5576:5609   */\n      tag_351\n        /* \"#utility.yul\":5604:5608   */\n      dup3\n        /* \"#utility.yul\":5596:5602   */\n      dup3\n        /* \"#utility.yul\":5576:5609   */\n      tag_253\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":5486:5615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5621:5932   */\n    tag_255:\n        /* \"#utility.yul\":5698:5702   */\n      0x00\n        /* \"#utility.yul\":5788:5806   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5780:5786   */\n      dup3\n        /* \"#utility.yul\":5777:5807   */\n      gt\n        /* \"#utility.yul\":5774:5830   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":5810:5828   */\n      tag_354\n      tag_95\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":5774:5830   */\n    tag_353:\n        /* \"#utility.yul\":5860:5864   */\n      0x20\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5848:5865   */\n      mul\n        /* \"#utility.yul\":5840:5865   */\n      swap1\n      pop\n        /* \"#utility.yul\":5920:5924   */\n      0x20\n        /* \"#utility.yul\":5914:5918   */\n      dup2\n        /* \"#utility.yul\":5910:5925   */\n      add\n        /* \"#utility.yul\":5902:5925   */\n      swap1\n      pop\n        /* \"#utility.yul\":5621:5932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5938:6055   */\n    tag_256:\n        /* \"#utility.yul\":6047:6048   */\n      0x00\n        /* \"#utility.yul\":6044:6045   */\n      dup1\n        /* \"#utility.yul\":6037:6049   */\n      revert\n        /* \"#utility.yul\":6078:6788   */\n    tag_257:\n        /* \"#utility.yul\":6174:6179   */\n      0x00\n        /* \"#utility.yul\":6199:6280   */\n      tag_357\n        /* \"#utility.yul\":6215:6279   */\n      tag_358\n        /* \"#utility.yul\":6272:6278   */\n      dup5\n        /* \"#utility.yul\":6215:6279   */\n      tag_255\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":6199:6280   */\n      tag_254\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":6190:6280   */\n      swap1\n      pop\n        /* \"#utility.yul\":6300:6305   */\n      dup1\n        /* \"#utility.yul\":6329:6335   */\n      dup4\n        /* \"#utility.yul\":6322:6327   */\n      dup3\n        /* \"#utility.yul\":6315:6336   */\n      mstore\n        /* \"#utility.yul\":6363:6367   */\n      0x20\n        /* \"#utility.yul\":6356:6361   */\n      dup3\n        /* \"#utility.yul\":6352:6368   */\n      add\n        /* \"#utility.yul\":6345:6368   */\n      swap1\n      pop\n        /* \"#utility.yul\":6416:6420   */\n      0x20\n        /* \"#utility.yul\":6408:6414   */\n      dup5\n        /* \"#utility.yul\":6404:6421   */\n      mul\n        /* \"#utility.yul\":6396:6402   */\n      dup4\n        /* \"#utility.yul\":6392:6422   */\n      add\n        /* \"#utility.yul\":6445:6448   */\n      dup6\n        /* \"#utility.yul\":6437:6443   */\n      dup2\n        /* \"#utility.yul\":6434:6449   */\n      gt\n        /* \"#utility.yul\":6431:6553   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":6464:6543   */\n      tag_360\n      tag_256\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":6431:6553   */\n    tag_359:\n        /* \"#utility.yul\":6579:6585   */\n      dup4\n        /* \"#utility.yul\":6562:6782   */\n    tag_361:\n        /* \"#utility.yul\":6596:6602   */\n      dup2\n        /* \"#utility.yul\":6591:6594   */\n      dup2\n        /* \"#utility.yul\":6588:6603   */\n      lt\n        /* \"#utility.yul\":6562:6782   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":6671:6674   */\n      dup1\n        /* \"#utility.yul\":6700:6737   */\n      tag_364\n        /* \"#utility.yul\":6733:6736   */\n      dup9\n        /* \"#utility.yul\":6721:6731   */\n      dup3\n        /* \"#utility.yul\":6700:6737   */\n      tag_240\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":6695:6698   */\n      dup5\n        /* \"#utility.yul\":6688:6738   */\n      mstore\n        /* \"#utility.yul\":6767:6771   */\n      0x20\n        /* \"#utility.yul\":6762:6765   */\n      dup5\n        /* \"#utility.yul\":6758:6772   */\n      add\n        /* \"#utility.yul\":6751:6772   */\n      swap4\n      pop\n        /* \"#utility.yul\":6638:6782   */\n      pop\n        /* \"#utility.yul\":6622:6626   */\n      0x20\n        /* \"#utility.yul\":6617:6620   */\n      dup2\n        /* \"#utility.yul\":6613:6627   */\n      add\n        /* \"#utility.yul\":6606:6627   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6782   */\n      jump(tag_361)\n    tag_363:\n        /* \"#utility.yul\":6566:6587   */\n      pop\n        /* \"#utility.yul\":6180:6788   */\n      pop\n      pop\n        /* \"#utility.yul\":6078:6788   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6811:7181   */\n    tag_258:\n        /* \"#utility.yul\":6882:6887   */\n      0x00\n        /* \"#utility.yul\":6931:6934   */\n      dup3\n        /* \"#utility.yul\":6924:6928   */\n      0x1f\n        /* \"#utility.yul\":6916:6922   */\n      dup4\n        /* \"#utility.yul\":6912:6929   */\n      add\n        /* \"#utility.yul\":6908:6935   */\n      slt\n        /* \"#utility.yul\":6898:7020   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":6939:7018   */\n      tag_367\n      tag_252\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":6898:7020   */\n    tag_366:\n        /* \"#utility.yul\":7056:7062   */\n      dup2\n        /* \"#utility.yul\":7043:7063   */\n      calldataload\n        /* \"#utility.yul\":7081:7175   */\n      tag_368\n        /* \"#utility.yul\":7171:7174   */\n      dup5\n        /* \"#utility.yul\":7163:7169   */\n      dup3\n        /* \"#utility.yul\":7156:7160   */\n      0x20\n        /* \"#utility.yul\":7148:7154   */\n      dup7\n        /* \"#utility.yul\":7144:7161   */\n      add\n        /* \"#utility.yul\":7081:7175   */\n      tag_257\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":7072:7175   */\n      swap2\n      pop\n        /* \"#utility.yul\":6888:7181   */\n      pop\n        /* \"#utility.yul\":6811:7181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7187:7304   */\n    tag_259:\n        /* \"#utility.yul\":7296:7297   */\n      0x00\n        /* \"#utility.yul\":7293:7294   */\n      dup1\n        /* \"#utility.yul\":7286:7298   */\n      revert\n        /* \"#utility.yul\":7310:7617   */\n    tag_260:\n        /* \"#utility.yul\":7371:7375   */\n      0x00\n        /* \"#utility.yul\":7461:7479   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7453:7459   */\n      dup3\n        /* \"#utility.yul\":7450:7480   */\n      gt\n        /* \"#utility.yul\":7447:7503   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":7483:7501   */\n      tag_372\n      tag_95\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":7447:7503   */\n    tag_371:\n        /* \"#utility.yul\":7521:7550   */\n      tag_373\n        /* \"#utility.yul\":7543:7549   */\n      dup3\n        /* \"#utility.yul\":7521:7550   */\n      tag_250\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":7513:7550   */\n      swap1\n      pop\n        /* \"#utility.yul\":7605:7609   */\n      0x20\n        /* \"#utility.yul\":7599:7603   */\n      dup2\n        /* \"#utility.yul\":7595:7610   */\n      add\n        /* \"#utility.yul\":7587:7610   */\n      swap1\n      pop\n        /* \"#utility.yul\":7310:7617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7623:7769   */\n    tag_261:\n        /* \"#utility.yul\":7720:7726   */\n      dup3\n        /* \"#utility.yul\":7715:7718   */\n      dup2\n        /* \"#utility.yul\":7710:7713   */\n      dup4\n        /* \"#utility.yul\":7697:7727   */\n      calldatacopy\n        /* \"#utility.yul\":7761:7762   */\n      0x00\n        /* \"#utility.yul\":7752:7758   */\n      dup4\n        /* \"#utility.yul\":7747:7750   */\n      dup4\n        /* \"#utility.yul\":7743:7759   */\n      add\n        /* \"#utility.yul\":7736:7763   */\n      mstore\n        /* \"#utility.yul\":7623:7769   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7775:8198   */\n    tag_262:\n        /* \"#utility.yul\":7852:7857   */\n      0x00\n        /* \"#utility.yul\":7877:7942   */\n      tag_376\n        /* \"#utility.yul\":7893:7941   */\n      tag_377\n        /* \"#utility.yul\":7934:7940   */\n      dup5\n        /* \"#utility.yul\":7893:7941   */\n      tag_260\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7877:7942   */\n      tag_254\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":7868:7942   */\n      swap1\n      pop\n        /* \"#utility.yul\":7965:7971   */\n      dup3\n        /* \"#utility.yul\":7958:7963   */\n      dup2\n        /* \"#utility.yul\":7951:7972   */\n      mstore\n        /* \"#utility.yul\":8003:8007   */\n      0x20\n        /* \"#utility.yul\":7996:8001   */\n      dup2\n        /* \"#utility.yul\":7992:8008   */\n      add\n        /* \"#utility.yul\":8041:8044   */\n      dup5\n        /* \"#utility.yul\":8032:8038   */\n      dup5\n        /* \"#utility.yul\":8027:8030   */\n      dup5\n        /* \"#utility.yul\":8023:8039   */\n      add\n        /* \"#utility.yul\":8020:8045   */\n      gt\n        /* \"#utility.yul\":8017:8129   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":8048:8127   */\n      tag_379\n      tag_259\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":8017:8129   */\n    tag_378:\n        /* \"#utility.yul\":8138:8192   */\n      tag_380\n        /* \"#utility.yul\":8185:8191   */\n      dup5\n        /* \"#utility.yul\":8180:8183   */\n      dup3\n        /* \"#utility.yul\":8175:8178   */\n      dup6\n        /* \"#utility.yul\":8138:8192   */\n      tag_261\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7858:8198   */\n      pop\n        /* \"#utility.yul\":7775:8198   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8217:8555   */\n    tag_263:\n        /* \"#utility.yul\":8272:8277   */\n      0x00\n        /* \"#utility.yul\":8321:8324   */\n      dup3\n        /* \"#utility.yul\":8314:8318   */\n      0x1f\n        /* \"#utility.yul\":8306:8312   */\n      dup4\n        /* \"#utility.yul\":8302:8319   */\n      add\n        /* \"#utility.yul\":8298:8325   */\n      slt\n        /* \"#utility.yul\":8288:8410   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":8329:8408   */\n      tag_383\n      tag_252\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":8288:8410   */\n    tag_382:\n        /* \"#utility.yul\":8446:8452   */\n      dup2\n        /* \"#utility.yul\":8433:8453   */\n      calldataload\n        /* \"#utility.yul\":8471:8549   */\n      tag_384\n        /* \"#utility.yul\":8545:8548   */\n      dup5\n        /* \"#utility.yul\":8537:8543   */\n      dup3\n        /* \"#utility.yul\":8530:8534   */\n      0x20\n        /* \"#utility.yul\":8522:8528   */\n      dup7\n        /* \"#utility.yul\":8518:8535   */\n      add\n        /* \"#utility.yul\":8471:8549   */\n      tag_262\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":8462:8549   */\n      swap2\n      pop\n        /* \"#utility.yul\":8278:8555   */\n      pop\n        /* \"#utility.yul\":8217:8555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8561:9924   */\n    tag_34:\n        /* \"#utility.yul\":8706:8712   */\n      0x00\n        /* \"#utility.yul\":8714:8720   */\n      dup1\n        /* \"#utility.yul\":8722:8728   */\n      0x00\n        /* \"#utility.yul\":8730:8736   */\n      dup1\n        /* \"#utility.yul\":8779:8782   */\n      0x80\n        /* \"#utility.yul\":8767:8776   */\n      dup6\n        /* \"#utility.yul\":8758:8765   */\n      dup8\n        /* \"#utility.yul\":8754:8777   */\n      sub\n        /* \"#utility.yul\":8750:8783   */\n      slt\n        /* \"#utility.yul\":8747:8867   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":8786:8865   */\n      tag_387\n      tag_232\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":8747:8867   */\n    tag_386:\n        /* \"#utility.yul\":8906:8907   */\n      0x00\n        /* \"#utility.yul\":8931:8984   */\n      tag_388\n        /* \"#utility.yul\":8976:8983   */\n      dup8\n        /* \"#utility.yul\":8967:8973   */\n      dup3\n        /* \"#utility.yul\":8956:8965   */\n      dup9\n        /* \"#utility.yul\":8952:8974   */\n      add\n        /* \"#utility.yul\":8931:8984   */\n      tag_237\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":8921:8984   */\n      swap5\n      pop\n        /* \"#utility.yul\":8877:8994   */\n      pop\n        /* \"#utility.yul\":9061:9063   */\n      0x20\n        /* \"#utility.yul\":9050:9059   */\n      dup6\n        /* \"#utility.yul\":9046:9064   */\n      add\n        /* \"#utility.yul\":9033:9065   */\n      calldataload\n        /* \"#utility.yul\":9092:9110   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9084:9090   */\n      dup2\n        /* \"#utility.yul\":9081:9111   */\n      gt\n        /* \"#utility.yul\":9078:9195   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":9114:9193   */\n      tag_390\n      tag_233\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":9078:9195   */\n    tag_389:\n        /* \"#utility.yul\":9219:9297   */\n      tag_391\n        /* \"#utility.yul\":9289:9296   */\n      dup8\n        /* \"#utility.yul\":9280:9286   */\n      dup3\n        /* \"#utility.yul\":9269:9278   */\n      dup9\n        /* \"#utility.yul\":9265:9287   */\n      add\n        /* \"#utility.yul\":9219:9297   */\n      tag_258\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":9209:9297   */\n      swap4\n      pop\n        /* \"#utility.yul\":9004:9307   */\n      pop\n        /* \"#utility.yul\":9374:9376   */\n      0x40\n        /* \"#utility.yul\":9363:9372   */\n      dup6\n        /* \"#utility.yul\":9359:9377   */\n      add\n        /* \"#utility.yul\":9346:9378   */\n      calldataload\n        /* \"#utility.yul\":9405:9423   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9397:9403   */\n      dup2\n        /* \"#utility.yul\":9394:9424   */\n      gt\n        /* \"#utility.yul\":9391:9508   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":9427:9506   */\n      tag_393\n      tag_233\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":9391:9508   */\n    tag_392:\n        /* \"#utility.yul\":9532:9610   */\n      tag_394\n        /* \"#utility.yul\":9602:9609   */\n      dup8\n        /* \"#utility.yul\":9593:9599   */\n      dup3\n        /* \"#utility.yul\":9582:9591   */\n      dup9\n        /* \"#utility.yul\":9578:9600   */\n      add\n        /* \"#utility.yul\":9532:9610   */\n      tag_258\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":9522:9610   */\n      swap3\n      pop\n        /* \"#utility.yul\":9317:9620   */\n      pop\n        /* \"#utility.yul\":9687:9689   */\n      0x60\n        /* \"#utility.yul\":9676:9685   */\n      dup6\n        /* \"#utility.yul\":9672:9690   */\n      add\n        /* \"#utility.yul\":9659:9691   */\n      calldataload\n        /* \"#utility.yul\":9718:9736   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9710:9716   */\n      dup2\n        /* \"#utility.yul\":9707:9737   */\n      gt\n        /* \"#utility.yul\":9704:9821   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":9740:9819   */\n      tag_396\n      tag_233\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":9704:9821   */\n    tag_395:\n        /* \"#utility.yul\":9845:9907   */\n      tag_397\n        /* \"#utility.yul\":9899:9906   */\n      dup8\n        /* \"#utility.yul\":9890:9896   */\n      dup3\n        /* \"#utility.yul\":9879:9888   */\n      dup9\n        /* \"#utility.yul\":9875:9897   */\n      add\n        /* \"#utility.yul\":9845:9907   */\n      tag_263\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9835:9907   */\n      swap2\n      pop\n        /* \"#utility.yul\":9630:9917   */\n      pop\n        /* \"#utility.yul\":8561:9924   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9930:11439   */\n    tag_38:\n        /* \"#utility.yul\":10084:10090   */\n      0x00\n        /* \"#utility.yul\":10092:10098   */\n      dup1\n        /* \"#utility.yul\":10100:10106   */\n      0x00\n        /* \"#utility.yul\":10108:10114   */\n      dup1\n        /* \"#utility.yul\":10116:10122   */\n      0x00\n        /* \"#utility.yul\":10165:10168   */\n      0xa0\n        /* \"#utility.yul\":10153:10162   */\n      dup7\n        /* \"#utility.yul\":10144:10151   */\n      dup9\n        /* \"#utility.yul\":10140:10163   */\n      sub\n        /* \"#utility.yul\":10136:10169   */\n      slt\n        /* \"#utility.yul\":10133:10253   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":10172:10251   */\n      tag_400\n      tag_232\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":10133:10253   */\n    tag_399:\n        /* \"#utility.yul\":10292:10293   */\n      0x00\n        /* \"#utility.yul\":10317:10370   */\n      tag_401\n        /* \"#utility.yul\":10362:10369   */\n      dup9\n        /* \"#utility.yul\":10353:10359   */\n      dup3\n        /* \"#utility.yul\":10342:10351   */\n      dup10\n        /* \"#utility.yul\":10338:10360   */\n      add\n        /* \"#utility.yul\":10317:10370   */\n      tag_237\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":10307:10370   */\n      swap6\n      pop\n        /* \"#utility.yul\":10263:10380   */\n      pop\n        /* \"#utility.yul\":10419:10421   */\n      0x20\n        /* \"#utility.yul\":10445:10498   */\n      tag_402\n        /* \"#utility.yul\":10490:10497   */\n      dup9\n        /* \"#utility.yul\":10481:10487   */\n      dup3\n        /* \"#utility.yul\":10470:10479   */\n      dup10\n        /* \"#utility.yul\":10466:10488   */\n      add\n        /* \"#utility.yul\":10445:10498   */\n      tag_237\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":10435:10498   */\n      swap5\n      pop\n        /* \"#utility.yul\":10390:10508   */\n      pop\n        /* \"#utility.yul\":10575:10577   */\n      0x40\n        /* \"#utility.yul\":10564:10573   */\n      dup7\n        /* \"#utility.yul\":10560:10578   */\n      add\n        /* \"#utility.yul\":10547:10579   */\n      calldataload\n        /* \"#utility.yul\":10606:10624   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10598:10604   */\n      dup2\n        /* \"#utility.yul\":10595:10625   */\n      gt\n        /* \"#utility.yul\":10592:10709   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":10628:10707   */\n      tag_404\n      tag_233\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":10592:10709   */\n    tag_403:\n        /* \"#utility.yul\":10733:10811   */\n      tag_405\n        /* \"#utility.yul\":10803:10810   */\n      dup9\n        /* \"#utility.yul\":10794:10800   */\n      dup3\n        /* \"#utility.yul\":10783:10792   */\n      dup10\n        /* \"#utility.yul\":10779:10801   */\n      add\n        /* \"#utility.yul\":10733:10811   */\n      tag_258\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":10723:10811   */\n      swap4\n      pop\n        /* \"#utility.yul\":10518:10821   */\n      pop\n        /* \"#utility.yul\":10888:10890   */\n      0x60\n        /* \"#utility.yul\":10877:10886   */\n      dup7\n        /* \"#utility.yul\":10873:10891   */\n      add\n        /* \"#utility.yul\":10860:10892   */\n      calldataload\n        /* \"#utility.yul\":10919:10937   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10911:10917   */\n      dup2\n        /* \"#utility.yul\":10908:10938   */\n      gt\n        /* \"#utility.yul\":10905:11022   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":10941:11020   */\n      tag_407\n      tag_233\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":10905:11022   */\n    tag_406:\n        /* \"#utility.yul\":11046:11124   */\n      tag_408\n        /* \"#utility.yul\":11116:11123   */\n      dup9\n        /* \"#utility.yul\":11107:11113   */\n      dup3\n        /* \"#utility.yul\":11096:11105   */\n      dup10\n        /* \"#utility.yul\":11092:11114   */\n      add\n        /* \"#utility.yul\":11046:11124   */\n      tag_258\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":11036:11124   */\n      swap3\n      pop\n        /* \"#utility.yul\":10831:11134   */\n      pop\n        /* \"#utility.yul\":11201:11204   */\n      0x80\n        /* \"#utility.yul\":11190:11199   */\n      dup7\n        /* \"#utility.yul\":11186:11205   */\n      add\n        /* \"#utility.yul\":11173:11206   */\n      calldataload\n        /* \"#utility.yul\":11233:11251   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11225:11231   */\n      dup2\n        /* \"#utility.yul\":11222:11252   */\n      gt\n        /* \"#utility.yul\":11219:11336   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":11255:11334   */\n      tag_410\n      tag_233\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":11219:11336   */\n    tag_409:\n        /* \"#utility.yul\":11360:11422   */\n      tag_411\n        /* \"#utility.yul\":11414:11421   */\n      dup9\n        /* \"#utility.yul\":11405:11411   */\n      dup3\n        /* \"#utility.yul\":11394:11403   */\n      dup10\n        /* \"#utility.yul\":11390:11412   */\n      add\n        /* \"#utility.yul\":11360:11422   */\n      tag_263\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":11350:11422   */\n      swap2\n      pop\n        /* \"#utility.yul\":11144:11432   */\n      pop\n        /* \"#utility.yul\":9930:11439   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11445:11756   */\n    tag_264:\n        /* \"#utility.yul\":11522:11526   */\n      0x00\n        /* \"#utility.yul\":11612:11630   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11604:11610   */\n      dup3\n        /* \"#utility.yul\":11601:11631   */\n      gt\n        /* \"#utility.yul\":11598:11654   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":11634:11652   */\n      tag_414\n      tag_95\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":11598:11654   */\n    tag_413:\n        /* \"#utility.yul\":11684:11688   */\n      0x20\n        /* \"#utility.yul\":11676:11682   */\n      dup3\n        /* \"#utility.yul\":11672:11689   */\n      mul\n        /* \"#utility.yul\":11664:11689   */\n      swap1\n      pop\n        /* \"#utility.yul\":11744:11748   */\n      0x20\n        /* \"#utility.yul\":11738:11742   */\n      dup2\n        /* \"#utility.yul\":11734:11749   */\n      add\n        /* \"#utility.yul\":11726:11749   */\n      swap1\n      pop\n        /* \"#utility.yul\":11445:11756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11779:12489   */\n    tag_265:\n        /* \"#utility.yul\":11875:11880   */\n      0x00\n        /* \"#utility.yul\":11900:11981   */\n      tag_416\n        /* \"#utility.yul\":11916:11980   */\n      tag_417\n        /* \"#utility.yul\":11973:11979   */\n      dup5\n        /* \"#utility.yul\":11916:11980   */\n      tag_264\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":11900:11981   */\n      tag_254\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":11891:11981   */\n      swap1\n      pop\n        /* \"#utility.yul\":12001:12006   */\n      dup1\n        /* \"#utility.yul\":12030:12036   */\n      dup4\n        /* \"#utility.yul\":12023:12028   */\n      dup3\n        /* \"#utility.yul\":12016:12037   */\n      mstore\n        /* \"#utility.yul\":12064:12068   */\n      0x20\n        /* \"#utility.yul\":12057:12062   */\n      dup3\n        /* \"#utility.yul\":12053:12069   */\n      add\n        /* \"#utility.yul\":12046:12069   */\n      swap1\n      pop\n        /* \"#utility.yul\":12117:12121   */\n      0x20\n        /* \"#utility.yul\":12109:12115   */\n      dup5\n        /* \"#utility.yul\":12105:12122   */\n      mul\n        /* \"#utility.yul\":12097:12103   */\n      dup4\n        /* \"#utility.yul\":12093:12123   */\n      add\n        /* \"#utility.yul\":12146:12149   */\n      dup6\n        /* \"#utility.yul\":12138:12144   */\n      dup2\n        /* \"#utility.yul\":12135:12150   */\n      gt\n        /* \"#utility.yul\":12132:12254   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":12165:12244   */\n      tag_419\n      tag_256\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":12132:12254   */\n    tag_418:\n        /* \"#utility.yul\":12280:12286   */\n      dup4\n        /* \"#utility.yul\":12263:12483   */\n    tag_420:\n        /* \"#utility.yul\":12297:12303   */\n      dup2\n        /* \"#utility.yul\":12292:12295   */\n      dup2\n        /* \"#utility.yul\":12289:12304   */\n      lt\n        /* \"#utility.yul\":12263:12483   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":12372:12375   */\n      dup1\n        /* \"#utility.yul\":12401:12438   */\n      tag_423\n        /* \"#utility.yul\":12434:12437   */\n      dup9\n        /* \"#utility.yul\":12422:12432   */\n      dup3\n        /* \"#utility.yul\":12401:12438   */\n      tag_237\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":12396:12399   */\n      dup5\n        /* \"#utility.yul\":12389:12439   */\n      mstore\n        /* \"#utility.yul\":12468:12472   */\n      0x20\n        /* \"#utility.yul\":12463:12466   */\n      dup5\n        /* \"#utility.yul\":12459:12473   */\n      add\n        /* \"#utility.yul\":12452:12473   */\n      swap4\n      pop\n        /* \"#utility.yul\":12339:12483   */\n      pop\n        /* \"#utility.yul\":12323:12327   */\n      0x20\n        /* \"#utility.yul\":12318:12321   */\n      dup2\n        /* \"#utility.yul\":12314:12328   */\n      add\n        /* \"#utility.yul\":12307:12328   */\n      swap1\n      pop\n        /* \"#utility.yul\":12263:12483   */\n      jump(tag_420)\n    tag_422:\n        /* \"#utility.yul\":12267:12288   */\n      pop\n        /* \"#utility.yul\":11881:12489   */\n      pop\n      pop\n        /* \"#utility.yul\":11779:12489   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12512:12882   */\n    tag_266:\n        /* \"#utility.yul\":12583:12588   */\n      0x00\n        /* \"#utility.yul\":12632:12635   */\n      dup3\n        /* \"#utility.yul\":12625:12629   */\n      0x1f\n        /* \"#utility.yul\":12617:12623   */\n      dup4\n        /* \"#utility.yul\":12613:12630   */\n      add\n        /* \"#utility.yul\":12609:12636   */\n      slt\n        /* \"#utility.yul\":12599:12721   */\n      tag_425\n      jumpi\n        /* \"#utility.yul\":12640:12719   */\n      tag_426\n      tag_252\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":12599:12721   */\n    tag_425:\n        /* \"#utility.yul\":12757:12763   */\n      dup2\n        /* \"#utility.yul\":12744:12764   */\n      calldataload\n        /* \"#utility.yul\":12782:12876   */\n      tag_427\n        /* \"#utility.yul\":12872:12875   */\n      dup5\n        /* \"#utility.yul\":12864:12870   */\n      dup3\n        /* \"#utility.yul\":12857:12861   */\n      0x20\n        /* \"#utility.yul\":12849:12855   */\n      dup7\n        /* \"#utility.yul\":12845:12862   */\n      add\n        /* \"#utility.yul\":12782:12876   */\n      tag_265\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":12773:12876   */\n      swap2\n      pop\n        /* \"#utility.yul\":12589:12882   */\n      pop\n        /* \"#utility.yul\":12512:12882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12888:13782   */\n    tag_42:\n        /* \"#utility.yul\":13006:13012   */\n      0x00\n        /* \"#utility.yul\":13014:13020   */\n      dup1\n        /* \"#utility.yul\":13063:13065   */\n      0x40\n        /* \"#utility.yul\":13051:13060   */\n      dup4\n        /* \"#utility.yul\":13042:13049   */\n      dup6\n        /* \"#utility.yul\":13038:13061   */\n      sub\n        /* \"#utility.yul\":13034:13066   */\n      slt\n        /* \"#utility.yul\":13031:13150   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":13069:13148   */\n      tag_430\n      tag_232\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":13031:13150   */\n    tag_429:\n        /* \"#utility.yul\":13217:13218   */\n      0x00\n        /* \"#utility.yul\":13206:13215   */\n      dup4\n        /* \"#utility.yul\":13202:13219   */\n      add\n        /* \"#utility.yul\":13189:13220   */\n      calldataload\n        /* \"#utility.yul\":13247:13265   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13239:13245   */\n      dup2\n        /* \"#utility.yul\":13236:13266   */\n      gt\n        /* \"#utility.yul\":13233:13350   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":13269:13348   */\n      tag_432\n      tag_233\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":13233:13350   */\n    tag_431:\n        /* \"#utility.yul\":13374:13452   */\n      tag_433\n        /* \"#utility.yul\":13444:13451   */\n      dup6\n        /* \"#utility.yul\":13435:13441   */\n      dup3\n        /* \"#utility.yul\":13424:13433   */\n      dup7\n        /* \"#utility.yul\":13420:13442   */\n      add\n        /* \"#utility.yul\":13374:13452   */\n      tag_266\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":13364:13452   */\n      swap3\n      pop\n        /* \"#utility.yul\":13160:13462   */\n      pop\n        /* \"#utility.yul\":13529:13531   */\n      0x20\n        /* \"#utility.yul\":13518:13527   */\n      dup4\n        /* \"#utility.yul\":13514:13532   */\n      add\n        /* \"#utility.yul\":13501:13533   */\n      calldataload\n        /* \"#utility.yul\":13560:13578   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13552:13558   */\n      dup2\n        /* \"#utility.yul\":13549:13579   */\n      gt\n        /* \"#utility.yul\":13546:13663   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":13582:13661   */\n      tag_435\n      tag_233\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":13546:13663   */\n    tag_434:\n        /* \"#utility.yul\":13687:13765   */\n      tag_436\n        /* \"#utility.yul\":13757:13764   */\n      dup6\n        /* \"#utility.yul\":13748:13754   */\n      dup3\n        /* \"#utility.yul\":13737:13746   */\n      dup7\n        /* \"#utility.yul\":13733:13755   */\n      add\n        /* \"#utility.yul\":13687:13765   */\n      tag_258\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":13677:13765   */\n      swap2\n      pop\n        /* \"#utility.yul\":13472:13775   */\n      pop\n        /* \"#utility.yul\":12888:13782   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13788:13902   */\n    tag_267:\n        /* \"#utility.yul\":13855:13861   */\n      0x00\n        /* \"#utility.yul\":13889:13894   */\n      dup2\n        /* \"#utility.yul\":13883:13895   */\n      mload\n        /* \"#utility.yul\":13873:13895   */\n      swap1\n      pop\n        /* \"#utility.yul\":13788:13902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13908:14092   */\n    tag_268:\n        /* \"#utility.yul\":14007:14018   */\n      0x00\n        /* \"#utility.yul\":14041:14047   */\n      dup3\n        /* \"#utility.yul\":14036:14039   */\n      dup3\n        /* \"#utility.yul\":14029:14048   */\n      mstore\n        /* \"#utility.yul\":14081:14085   */\n      0x20\n        /* \"#utility.yul\":14076:14079   */\n      dup3\n        /* \"#utility.yul\":14072:14086   */\n      add\n        /* \"#utility.yul\":14057:14086   */\n      swap1\n      pop\n        /* \"#utility.yul\":13908:14092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14098:14230   */\n    tag_269:\n        /* \"#utility.yul\":14165:14169   */\n      0x00\n        /* \"#utility.yul\":14188:14191   */\n      dup2\n        /* \"#utility.yul\":14180:14191   */\n      swap1\n      pop\n        /* \"#utility.yul\":14218:14222   */\n      0x20\n        /* \"#utility.yul\":14213:14216   */\n      dup3\n        /* \"#utility.yul\":14209:14223   */\n      add\n        /* \"#utility.yul\":14201:14223   */\n      swap1\n      pop\n        /* \"#utility.yul\":14098:14230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14236:14344   */\n    tag_270:\n        /* \"#utility.yul\":14313:14337   */\n      tag_441\n        /* \"#utility.yul\":14331:14336   */\n      dup2\n        /* \"#utility.yul\":14313:14337   */\n      tag_238\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":14308:14311   */\n      dup3\n        /* \"#utility.yul\":14301:14338   */\n      mstore\n        /* \"#utility.yul\":14236:14344   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14350:14529   */\n    tag_271:\n        /* \"#utility.yul\":14419:14429   */\n      0x00\n        /* \"#utility.yul\":14440:14486   */\n      tag_443\n        /* \"#utility.yul\":14482:14485   */\n      dup4\n        /* \"#utility.yul\":14474:14480   */\n      dup4\n        /* \"#utility.yul\":14440:14486   */\n      tag_270\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":14518:14522   */\n      0x20\n        /* \"#utility.yul\":14513:14516   */\n      dup4\n        /* \"#utility.yul\":14509:14523   */\n      add\n        /* \"#utility.yul\":14495:14523   */\n      swap1\n      pop\n        /* \"#utility.yul\":14350:14529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14535:14648   */\n    tag_272:\n        /* \"#utility.yul\":14605:14609   */\n      0x00\n        /* \"#utility.yul\":14637:14641   */\n      0x20\n        /* \"#utility.yul\":14632:14635   */\n      dup3\n        /* \"#utility.yul\":14628:14642   */\n      add\n        /* \"#utility.yul\":14620:14642   */\n      swap1\n      pop\n        /* \"#utility.yul\":14535:14648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14684:15416   */\n    tag_273:\n        /* \"#utility.yul\":14803:14806   */\n      0x00\n        /* \"#utility.yul\":14832:14886   */\n      tag_446\n        /* \"#utility.yul\":14880:14885   */\n      dup3\n        /* \"#utility.yul\":14832:14886   */\n      tag_267\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":14902:14988   */\n      tag_447\n        /* \"#utility.yul\":14981:14987   */\n      dup2\n        /* \"#utility.yul\":14976:14979   */\n      dup6\n        /* \"#utility.yul\":14902:14988   */\n      tag_268\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":14895:14988   */\n      swap4\n      pop\n        /* \"#utility.yul\":15012:15068   */\n      tag_448\n        /* \"#utility.yul\":15062:15067   */\n      dup4\n        /* \"#utility.yul\":15012:15068   */\n      tag_269\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":15091:15098   */\n      dup1\n        /* \"#utility.yul\":15122:15123   */\n      0x00\n        /* \"#utility.yul\":15107:15391   */\n    tag_449:\n        /* \"#utility.yul\":15132:15138   */\n      dup4\n        /* \"#utility.yul\":15129:15130   */\n      dup2\n        /* \"#utility.yul\":15126:15139   */\n      lt\n        /* \"#utility.yul\":15107:15391   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":15208:15214   */\n      dup2\n        /* \"#utility.yul\":15202:15215   */\n      mload\n        /* \"#utility.yul\":15235:15298   */\n      tag_452\n        /* \"#utility.yul\":15294:15297   */\n      dup9\n        /* \"#utility.yul\":15279:15292   */\n      dup3\n        /* \"#utility.yul\":15235:15298   */\n      tag_271\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":15228:15298   */\n      swap8\n      pop\n        /* \"#utility.yul\":15321:15381   */\n      tag_453\n        /* \"#utility.yul\":15374:15380   */\n      dup4\n        /* \"#utility.yul\":15321:15381   */\n      tag_272\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":15311:15381   */\n      swap3\n      pop\n        /* \"#utility.yul\":15167:15391   */\n      pop\n        /* \"#utility.yul\":15154:15155   */\n      0x01\n        /* \"#utility.yul\":15151:15152   */\n      dup2\n        /* \"#utility.yul\":15147:15156   */\n      add\n        /* \"#utility.yul\":15142:15156   */\n      swap1\n      pop\n        /* \"#utility.yul\":15107:15391   */\n      jump(tag_449)\n    tag_451:\n        /* \"#utility.yul\":15111:15125   */\n      pop\n        /* \"#utility.yul\":15407:15410   */\n      dup6\n        /* \"#utility.yul\":15400:15410   */\n      swap4\n      pop\n        /* \"#utility.yul\":14808:15416   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14684:15416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15422:15795   */\n    tag_45:\n        /* \"#utility.yul\":15565:15569   */\n      0x00\n        /* \"#utility.yul\":15603:15605   */\n      0x20\n        /* \"#utility.yul\":15592:15601   */\n      dup3\n        /* \"#utility.yul\":15588:15606   */\n      add\n        /* \"#utility.yul\":15580:15606   */\n      swap1\n      pop\n        /* \"#utility.yul\":15652:15661   */\n      dup2\n        /* \"#utility.yul\":15646:15650   */\n      dup2\n        /* \"#utility.yul\":15642:15662   */\n      sub\n        /* \"#utility.yul\":15638:15639   */\n      0x00\n        /* \"#utility.yul\":15627:15636   */\n      dup4\n        /* \"#utility.yul\":15623:15640   */\n      add\n        /* \"#utility.yul\":15616:15663   */\n      mstore\n        /* \"#utility.yul\":15680:15788   */\n      tag_455\n        /* \"#utility.yul\":15783:15787   */\n      dup2\n        /* \"#utility.yul\":15774:15780   */\n      dup5\n        /* \"#utility.yul\":15680:15788   */\n      tag_273\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":15672:15788   */\n      swap1\n      pop\n        /* \"#utility.yul\":15422:15795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15801:16744   */\n    tag_48:\n        /* \"#utility.yul\":15896:15902   */\n      0x00\n        /* \"#utility.yul\":15904:15910   */\n      dup1\n        /* \"#utility.yul\":15912:15918   */\n      0x00\n        /* \"#utility.yul\":15920:15926   */\n      dup1\n        /* \"#utility.yul\":15969:15972   */\n      0x80\n        /* \"#utility.yul\":15957:15966   */\n      dup6\n        /* \"#utility.yul\":15948:15955   */\n      dup8\n        /* \"#utility.yul\":15944:15967   */\n      sub\n        /* \"#utility.yul\":15940:15973   */\n      slt\n        /* \"#utility.yul\":15937:16057   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":15976:16055   */\n      tag_458\n      tag_232\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":15937:16057   */\n    tag_457:\n        /* \"#utility.yul\":16096:16097   */\n      0x00\n        /* \"#utility.yul\":16121:16174   */\n      tag_459\n        /* \"#utility.yul\":16166:16173   */\n      dup8\n        /* \"#utility.yul\":16157:16163   */\n      dup3\n        /* \"#utility.yul\":16146:16155   */\n      dup9\n        /* \"#utility.yul\":16142:16164   */\n      add\n        /* \"#utility.yul\":16121:16174   */\n      tag_237\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":16111:16174   */\n      swap5\n      pop\n        /* \"#utility.yul\":16067:16184   */\n      pop\n        /* \"#utility.yul\":16223:16225   */\n      0x20\n        /* \"#utility.yul\":16249:16302   */\n      tag_460\n        /* \"#utility.yul\":16294:16301   */\n      dup8\n        /* \"#utility.yul\":16285:16291   */\n      dup3\n        /* \"#utility.yul\":16274:16283   */\n      dup9\n        /* \"#utility.yul\":16270:16292   */\n      add\n        /* \"#utility.yul\":16249:16302   */\n      tag_240\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":16239:16302   */\n      swap4\n      pop\n        /* \"#utility.yul\":16194:16312   */\n      pop\n        /* \"#utility.yul\":16351:16353   */\n      0x40\n        /* \"#utility.yul\":16377:16430   */\n      tag_461\n        /* \"#utility.yul\":16422:16429   */\n      dup8\n        /* \"#utility.yul\":16413:16419   */\n      dup3\n        /* \"#utility.yul\":16402:16411   */\n      dup9\n        /* \"#utility.yul\":16398:16420   */\n      add\n        /* \"#utility.yul\":16377:16430   */\n      tag_240\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":16367:16430   */\n      swap3\n      pop\n        /* \"#utility.yul\":16322:16440   */\n      pop\n        /* \"#utility.yul\":16507:16509   */\n      0x60\n        /* \"#utility.yul\":16496:16505   */\n      dup6\n        /* \"#utility.yul\":16492:16510   */\n      add\n        /* \"#utility.yul\":16479:16511   */\n      calldataload\n        /* \"#utility.yul\":16538:16556   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16530:16536   */\n      dup2\n        /* \"#utility.yul\":16527:16557   */\n      gt\n        /* \"#utility.yul\":16524:16641   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":16560:16639   */\n      tag_463\n      tag_233\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":16524:16641   */\n    tag_462:\n        /* \"#utility.yul\":16665:16727   */\n      tag_464\n        /* \"#utility.yul\":16719:16726   */\n      dup8\n        /* \"#utility.yul\":16710:16716   */\n      dup3\n        /* \"#utility.yul\":16699:16708   */\n      dup9\n        /* \"#utility.yul\":16695:16717   */\n      add\n        /* \"#utility.yul\":16665:16727   */\n      tag_263\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":16655:16727   */\n      swap2\n      pop\n        /* \"#utility.yul\":16450:16737   */\n      pop\n        /* \"#utility.yul\":15801:16744   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16750:16866   */\n    tag_274:\n        /* \"#utility.yul\":16820:16841   */\n      tag_466\n        /* \"#utility.yul\":16835:16840   */\n      dup2\n        /* \"#utility.yul\":16820:16841   */\n      tag_245\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":16813:16818   */\n      dup2\n        /* \"#utility.yul\":16810:16842   */\n      eq\n        /* \"#utility.yul\":16800:16860   */\n      tag_467\n      jumpi\n        /* \"#utility.yul\":16856:16857   */\n      0x00\n        /* \"#utility.yul\":16853:16854   */\n      dup1\n        /* \"#utility.yul\":16846:16858   */\n      revert\n        /* \"#utility.yul\":16800:16860   */\n    tag_467:\n        /* \"#utility.yul\":16750:16866   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16872:17005   */\n    tag_275:\n        /* \"#utility.yul\":16915:16920   */\n      0x00\n        /* \"#utility.yul\":16953:16959   */\n      dup2\n        /* \"#utility.yul\":16940:16960   */\n      calldataload\n        /* \"#utility.yul\":16931:16960   */\n      swap1\n      pop\n        /* \"#utility.yul\":16969:16999   */\n      tag_469\n        /* \"#utility.yul\":16993:16998   */\n      dup2\n        /* \"#utility.yul\":16969:16999   */\n      tag_274\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":16872:17005   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17011:17479   */\n    tag_52:\n        /* \"#utility.yul\":17076:17082   */\n      0x00\n        /* \"#utility.yul\":17084:17090   */\n      dup1\n        /* \"#utility.yul\":17133:17135   */\n      0x40\n        /* \"#utility.yul\":17121:17130   */\n      dup4\n        /* \"#utility.yul\":17112:17119   */\n      dup6\n        /* \"#utility.yul\":17108:17131   */\n      sub\n        /* \"#utility.yul\":17104:17136   */\n      slt\n        /* \"#utility.yul\":17101:17220   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":17139:17218   */\n      tag_472\n      tag_232\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":17101:17220   */\n    tag_471:\n        /* \"#utility.yul\":17259:17260   */\n      0x00\n        /* \"#utility.yul\":17284:17337   */\n      tag_473\n        /* \"#utility.yul\":17329:17336   */\n      dup6\n        /* \"#utility.yul\":17320:17326   */\n      dup3\n        /* \"#utility.yul\":17309:17318   */\n      dup7\n        /* \"#utility.yul\":17305:17327   */\n      add\n        /* \"#utility.yul\":17284:17337   */\n      tag_237\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":17274:17337   */\n      swap3\n      pop\n        /* \"#utility.yul\":17230:17347   */\n      pop\n        /* \"#utility.yul\":17386:17388   */\n      0x20\n        /* \"#utility.yul\":17412:17462   */\n      tag_474\n        /* \"#utility.yul\":17454:17461   */\n      dup6\n        /* \"#utility.yul\":17445:17451   */\n      dup3\n        /* \"#utility.yul\":17434:17443   */\n      dup7\n        /* \"#utility.yul\":17430:17452   */\n      add\n        /* \"#utility.yul\":17412:17462   */\n      tag_275\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":17402:17462   */\n      swap2\n      pop\n        /* \"#utility.yul\":17357:17472   */\n      pop\n        /* \"#utility.yul\":17011:17479   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17485:17959   */\n    tag_56:\n        /* \"#utility.yul\":17553:17559   */\n      0x00\n        /* \"#utility.yul\":17561:17567   */\n      dup1\n        /* \"#utility.yul\":17610:17612   */\n      0x40\n        /* \"#utility.yul\":17598:17607   */\n      dup4\n        /* \"#utility.yul\":17589:17596   */\n      dup6\n        /* \"#utility.yul\":17585:17608   */\n      sub\n        /* \"#utility.yul\":17581:17613   */\n      slt\n        /* \"#utility.yul\":17578:17697   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":17616:17695   */\n      tag_477\n      tag_232\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":17578:17697   */\n    tag_476:\n        /* \"#utility.yul\":17736:17737   */\n      0x00\n        /* \"#utility.yul\":17761:17814   */\n      tag_478\n        /* \"#utility.yul\":17806:17813   */\n      dup6\n        /* \"#utility.yul\":17797:17803   */\n      dup3\n        /* \"#utility.yul\":17786:17795   */\n      dup7\n        /* \"#utility.yul\":17782:17804   */\n      add\n        /* \"#utility.yul\":17761:17814   */\n      tag_237\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":17751:17814   */\n      swap3\n      pop\n        /* \"#utility.yul\":17707:17824   */\n      pop\n        /* \"#utility.yul\":17863:17865   */\n      0x20\n        /* \"#utility.yul\":17889:17942   */\n      tag_479\n        /* \"#utility.yul\":17934:17941   */\n      dup6\n        /* \"#utility.yul\":17925:17931   */\n      dup3\n        /* \"#utility.yul\":17914:17923   */\n      dup7\n        /* \"#utility.yul\":17910:17932   */\n      add\n        /* \"#utility.yul\":17889:17942   */\n      tag_237\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":17879:17942   */\n      swap2\n      pop\n        /* \"#utility.yul\":17834:17952   */\n      pop\n        /* \"#utility.yul\":17485:17959   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17965:19054   */\n    tag_61:\n        /* \"#utility.yul\":18069:18075   */\n      0x00\n        /* \"#utility.yul\":18077:18083   */\n      dup1\n        /* \"#utility.yul\":18085:18091   */\n      0x00\n        /* \"#utility.yul\":18093:18099   */\n      dup1\n        /* \"#utility.yul\":18101:18107   */\n      0x00\n        /* \"#utility.yul\":18150:18153   */\n      0xa0\n        /* \"#utility.yul\":18138:18147   */\n      dup7\n        /* \"#utility.yul\":18129:18136   */\n      dup9\n        /* \"#utility.yul\":18125:18148   */\n      sub\n        /* \"#utility.yul\":18121:18154   */\n      slt\n        /* \"#utility.yul\":18118:18238   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":18157:18236   */\n      tag_482\n      tag_232\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":18118:18238   */\n    tag_481:\n        /* \"#utility.yul\":18277:18278   */\n      0x00\n        /* \"#utility.yul\":18302:18355   */\n      tag_483\n        /* \"#utility.yul\":18347:18354   */\n      dup9\n        /* \"#utility.yul\":18338:18344   */\n      dup3\n        /* \"#utility.yul\":18327:18336   */\n      dup10\n        /* \"#utility.yul\":18323:18345   */\n      add\n        /* \"#utility.yul\":18302:18355   */\n      tag_237\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":18292:18355   */\n      swap6\n      pop\n        /* \"#utility.yul\":18248:18365   */\n      pop\n        /* \"#utility.yul\":18404:18406   */\n      0x20\n        /* \"#utility.yul\":18430:18483   */\n      tag_484\n        /* \"#utility.yul\":18475:18482   */\n      dup9\n        /* \"#utility.yul\":18466:18472   */\n      dup3\n        /* \"#utility.yul\":18455:18464   */\n      dup10\n        /* \"#utility.yul\":18451:18473   */\n      add\n        /* \"#utility.yul\":18430:18483   */\n      tag_237\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":18420:18483   */\n      swap5\n      pop\n        /* \"#utility.yul\":18375:18493   */\n      pop\n        /* \"#utility.yul\":18532:18534   */\n      0x40\n        /* \"#utility.yul\":18558:18611   */\n      tag_485\n        /* \"#utility.yul\":18603:18610   */\n      dup9\n        /* \"#utility.yul\":18594:18600   */\n      dup3\n        /* \"#utility.yul\":18583:18592   */\n      dup10\n        /* \"#utility.yul\":18579:18601   */\n      add\n        /* \"#utility.yul\":18558:18611   */\n      tag_240\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":18548:18611   */\n      swap4\n      pop\n        /* \"#utility.yul\":18503:18621   */\n      pop\n        /* \"#utility.yul\":18660:18662   */\n      0x60\n        /* \"#utility.yul\":18686:18739   */\n      tag_486\n        /* \"#utility.yul\":18731:18738   */\n      dup9\n        /* \"#utility.yul\":18722:18728   */\n      dup3\n        /* \"#utility.yul\":18711:18720   */\n      dup10\n        /* \"#utility.yul\":18707:18729   */\n      add\n        /* \"#utility.yul\":18686:18739   */\n      tag_240\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":18676:18739   */\n      swap3\n      pop\n        /* \"#utility.yul\":18631:18749   */\n      pop\n        /* \"#utility.yul\":18816:18819   */\n      0x80\n        /* \"#utility.yul\":18805:18814   */\n      dup7\n        /* \"#utility.yul\":18801:18820   */\n      add\n        /* \"#utility.yul\":18788:18821   */\n      calldataload\n        /* \"#utility.yul\":18848:18866   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18840:18846   */\n      dup2\n        /* \"#utility.yul\":18837:18867   */\n      gt\n        /* \"#utility.yul\":18834:18951   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":18870:18949   */\n      tag_488\n      tag_233\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":18834:18951   */\n    tag_487:\n        /* \"#utility.yul\":18975:19037   */\n      tag_489\n        /* \"#utility.yul\":19029:19036   */\n      dup9\n        /* \"#utility.yul\":19020:19026   */\n      dup3\n        /* \"#utility.yul\":19009:19018   */\n      dup10\n        /* \"#utility.yul\":19005:19027   */\n      add\n        /* \"#utility.yul\":18975:19037   */\n      tag_263\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":18965:19037   */\n      swap2\n      pop\n        /* \"#utility.yul\":18759:19047   */\n      pop\n        /* \"#utility.yul\":17965:19054   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19060:19240   */\n    tag_276:\n        /* \"#utility.yul\":19108:19185   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19105:19106   */\n      0x00\n        /* \"#utility.yul\":19098:19186   */\n      mstore\n        /* \"#utility.yul\":19205:19209   */\n      0x22\n        /* \"#utility.yul\":19202:19203   */\n      0x04\n        /* \"#utility.yul\":19195:19210   */\n      mstore\n        /* \"#utility.yul\":19229:19233   */\n      0x24\n        /* \"#utility.yul\":19226:19227   */\n      0x00\n        /* \"#utility.yul\":19219:19234   */\n      revert\n        /* \"#utility.yul\":19246:19566   */\n    tag_71:\n        /* \"#utility.yul\":19290:19296   */\n      0x00\n        /* \"#utility.yul\":19327:19328   */\n      0x02\n        /* \"#utility.yul\":19321:19325   */\n      dup3\n        /* \"#utility.yul\":19317:19329   */\n      div\n        /* \"#utility.yul\":19307:19329   */\n      swap1\n      pop\n        /* \"#utility.yul\":19374:19375   */\n      0x01\n        /* \"#utility.yul\":19368:19372   */\n      dup3\n        /* \"#utility.yul\":19364:19376   */\n      and\n        /* \"#utility.yul\":19395:19413   */\n      dup1\n        /* \"#utility.yul\":19385:19466   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":19451:19455   */\n      0x7f\n        /* \"#utility.yul\":19443:19449   */\n      dup3\n        /* \"#utility.yul\":19439:19456   */\n      and\n        /* \"#utility.yul\":19429:19456   */\n      swap2\n      pop\n        /* \"#utility.yul\":19385:19466   */\n    tag_492:\n        /* \"#utility.yul\":19513:19515   */\n      0x20\n        /* \"#utility.yul\":19505:19511   */\n      dup3\n        /* \"#utility.yul\":19502:19516   */\n      lt\n        /* \"#utility.yul\":19482:19500   */\n      dup2\n        /* \"#utility.yul\":19479:19517   */\n      sub\n        /* \"#utility.yul\":19476:19560   */\n      tag_493\n      jumpi\n        /* \"#utility.yul\":19532:19550   */\n      tag_494\n      tag_276\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":19476:19560   */\n    tag_493:\n        /* \"#utility.yul\":19297:19566   */\n      pop\n        /* \"#utility.yul\":19246:19566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19572:19690   */\n    tag_277:\n        /* \"#utility.yul\":19659:19683   */\n      tag_496\n        /* \"#utility.yul\":19677:19682   */\n      dup2\n        /* \"#utility.yul\":19659:19683   */\n      tag_235\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":19654:19657   */\n      dup3\n        /* \"#utility.yul\":19647:19684   */\n      mstore\n        /* \"#utility.yul\":19572:19690   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19696:20028   */\n    tag_86:\n        /* \"#utility.yul\":19817:19821   */\n      0x00\n        /* \"#utility.yul\":19855:19857   */\n      0x40\n        /* \"#utility.yul\":19844:19853   */\n      dup3\n        /* \"#utility.yul\":19840:19858   */\n      add\n        /* \"#utility.yul\":19832:19858   */\n      swap1\n      pop\n        /* \"#utility.yul\":19868:19939   */\n      tag_498\n        /* \"#utility.yul\":19936:19937   */\n      0x00\n        /* \"#utility.yul\":19925:19934   */\n      dup4\n        /* \"#utility.yul\":19921:19938   */\n      add\n        /* \"#utility.yul\":19912:19918   */\n      dup6\n        /* \"#utility.yul\":19868:19939   */\n      tag_277\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":19949:20021   */\n      tag_499\n        /* \"#utility.yul\":20017:20019   */\n      0x20\n        /* \"#utility.yul\":20006:20015   */\n      dup4\n        /* \"#utility.yul\":20002:20020   */\n      add\n        /* \"#utility.yul\":19993:19999   */\n      dup5\n        /* \"#utility.yul\":19949:20021   */\n      tag_277\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":19696:20028   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20034:20366   */\n    tag_92:\n        /* \"#utility.yul\":20155:20159   */\n      0x00\n        /* \"#utility.yul\":20193:20195   */\n      0x40\n        /* \"#utility.yul\":20182:20191   */\n      dup3\n        /* \"#utility.yul\":20178:20196   */\n      add\n        /* \"#utility.yul\":20170:20196   */\n      swap1\n      pop\n        /* \"#utility.yul\":20206:20277   */\n      tag_501\n        /* \"#utility.yul\":20274:20275   */\n      0x00\n        /* \"#utility.yul\":20263:20272   */\n      dup4\n        /* \"#utility.yul\":20259:20276   */\n      add\n        /* \"#utility.yul\":20250:20256   */\n      dup6\n        /* \"#utility.yul\":20206:20277   */\n      tag_241\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":20287:20359   */\n      tag_502\n        /* \"#utility.yul\":20355:20357   */\n      0x20\n        /* \"#utility.yul\":20344:20353   */\n      dup4\n        /* \"#utility.yul\":20340:20358   */\n      add\n        /* \"#utility.yul\":20331:20337   */\n      dup5\n        /* \"#utility.yul\":20287:20359   */\n      tag_241\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":20034:20366   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20372:20552   */\n    tag_107:\n        /* \"#utility.yul\":20420:20497   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20417:20418   */\n      0x00\n        /* \"#utility.yul\":20410:20498   */\n      mstore\n        /* \"#utility.yul\":20517:20521   */\n      0x32\n        /* \"#utility.yul\":20514:20515   */\n      0x04\n        /* \"#utility.yul\":20507:20522   */\n      mstore\n        /* \"#utility.yul\":20541:20545   */\n      0x24\n        /* \"#utility.yul\":20538:20539   */\n      0x00\n        /* \"#utility.yul\":20531:20546   */\n      revert\n        /* \"#utility.yul\":20558:20780   */\n    tag_128:\n        /* \"#utility.yul\":20651:20655   */\n      0x00\n        /* \"#utility.yul\":20689:20691   */\n      0x20\n        /* \"#utility.yul\":20678:20687   */\n      dup3\n        /* \"#utility.yul\":20674:20692   */\n      add\n        /* \"#utility.yul\":20666:20692   */\n      swap1\n      pop\n        /* \"#utility.yul\":20702:20773   */\n      tag_505\n        /* \"#utility.yul\":20770:20771   */\n      0x00\n        /* \"#utility.yul\":20759:20768   */\n      dup4\n        /* \"#utility.yul\":20755:20772   */\n      add\n        /* \"#utility.yul\":20746:20752   */\n      dup5\n        /* \"#utility.yul\":20702:20773   */\n      tag_277\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":20558:20780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20786:21339   */\n    tag_183:\n        /* \"#utility.yul\":20963:20967   */\n      0x00\n        /* \"#utility.yul\":21001:21004   */\n      0x80\n        /* \"#utility.yul\":20990:20999   */\n      dup3\n        /* \"#utility.yul\":20986:21005   */\n      add\n        /* \"#utility.yul\":20978:21005   */\n      swap1\n      pop\n        /* \"#utility.yul\":21015:21086   */\n      tag_507\n        /* \"#utility.yul\":21083:21084   */\n      0x00\n        /* \"#utility.yul\":21072:21081   */\n      dup4\n        /* \"#utility.yul\":21068:21085   */\n      add\n        /* \"#utility.yul\":21059:21065   */\n      dup8\n        /* \"#utility.yul\":21015:21086   */\n      tag_277\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":21096:21168   */\n      tag_508\n        /* \"#utility.yul\":21164:21166   */\n      0x20\n        /* \"#utility.yul\":21153:21162   */\n      dup4\n        /* \"#utility.yul\":21149:21167   */\n      add\n        /* \"#utility.yul\":21140:21146   */\n      dup7\n        /* \"#utility.yul\":21096:21168   */\n      tag_241\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":21178:21250   */\n      tag_509\n        /* \"#utility.yul\":21246:21248   */\n      0x40\n        /* \"#utility.yul\":21235:21244   */\n      dup4\n        /* \"#utility.yul\":21231:21249   */\n      add\n        /* \"#utility.yul\":21222:21228   */\n      dup6\n        /* \"#utility.yul\":21178:21250   */\n      tag_241\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":21260:21332   */\n      tag_510\n        /* \"#utility.yul\":21328:21330   */\n      0x60\n        /* \"#utility.yul\":21317:21326   */\n      dup4\n        /* \"#utility.yul\":21313:21331   */\n      add\n        /* \"#utility.yul\":21304:21310   */\n      dup5\n        /* \"#utility.yul\":21260:21332   */\n      tag_241\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":20786:21339   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21345:21525   */\n    tag_278:\n        /* \"#utility.yul\":21393:21470   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21390:21391   */\n      0x00\n        /* \"#utility.yul\":21383:21471   */\n      mstore\n        /* \"#utility.yul\":21490:21494   */\n      0x11\n        /* \"#utility.yul\":21487:21488   */\n      0x04\n        /* \"#utility.yul\":21480:21495   */\n      mstore\n        /* \"#utility.yul\":21514:21518   */\n      0x24\n        /* \"#utility.yul\":21511:21512   */\n      0x00\n        /* \"#utility.yul\":21504:21519   */\n      revert\n        /* \"#utility.yul\":21531:21722   */\n    tag_186:\n        /* \"#utility.yul\":21571:21574   */\n      0x00\n        /* \"#utility.yul\":21590:21610   */\n      tag_513\n        /* \"#utility.yul\":21608:21609   */\n      dup3\n        /* \"#utility.yul\":21590:21610   */\n      tag_238\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":21585:21610   */\n      swap2\n      pop\n        /* \"#utility.yul\":21624:21644   */\n      tag_514\n        /* \"#utility.yul\":21642:21643   */\n      dup4\n        /* \"#utility.yul\":21624:21644   */\n      tag_238\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":21619:21644   */\n      swap3\n      pop\n        /* \"#utility.yul\":21667:21668   */\n      dup3\n        /* \"#utility.yul\":21664:21665   */\n      dup3\n        /* \"#utility.yul\":21660:21669   */\n      add\n        /* \"#utility.yul\":21653:21669   */\n      swap1\n      pop\n        /* \"#utility.yul\":21688:21691   */\n      dup1\n        /* \"#utility.yul\":21685:21686   */\n      dup3\n        /* \"#utility.yul\":21682:21692   */\n      gt\n        /* \"#utility.yul\":21679:21715   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":21695:21713   */\n      tag_516\n      tag_278\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":21679:21715   */\n    tag_515:\n        /* \"#utility.yul\":21531:21722   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21728:22362   */\n    tag_193:\n        /* \"#utility.yul\":21949:21953   */\n      0x00\n        /* \"#utility.yul\":21987:21989   */\n      0x40\n        /* \"#utility.yul\":21976:21985   */\n      dup3\n        /* \"#utility.yul\":21972:21990   */\n      add\n        /* \"#utility.yul\":21964:21990   */\n      swap1\n      pop\n        /* \"#utility.yul\":22036:22045   */\n      dup2\n        /* \"#utility.yul\":22030:22034   */\n      dup2\n        /* \"#utility.yul\":22026:22046   */\n      sub\n        /* \"#utility.yul\":22022:22023   */\n      0x00\n        /* \"#utility.yul\":22011:22020   */\n      dup4\n        /* \"#utility.yul\":22007:22024   */\n      add\n        /* \"#utility.yul\":22000:22047   */\n      mstore\n        /* \"#utility.yul\":22064:22172   */\n      tag_518\n        /* \"#utility.yul\":22167:22171   */\n      dup2\n        /* \"#utility.yul\":22158:22164   */\n      dup6\n        /* \"#utility.yul\":22064:22172   */\n      tag_273\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":22056:22172   */\n      swap1\n      pop\n        /* \"#utility.yul\":22219:22228   */\n      dup2\n        /* \"#utility.yul\":22213:22217   */\n      dup2\n        /* \"#utility.yul\":22209:22229   */\n      sub\n        /* \"#utility.yul\":22204:22206   */\n      0x20\n        /* \"#utility.yul\":22193:22202   */\n      dup4\n        /* \"#utility.yul\":22189:22207   */\n      add\n        /* \"#utility.yul\":22182:22230   */\n      mstore\n        /* \"#utility.yul\":22247:22355   */\n      tag_519\n        /* \"#utility.yul\":22350:22354   */\n      dup2\n        /* \"#utility.yul\":22341:22347   */\n      dup5\n        /* \"#utility.yul\":22247:22355   */\n      tag_273\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":22239:22355   */\n      swap1\n      pop\n        /* \"#utility.yul\":21728:22362   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22368:22466   */\n    tag_279:\n        /* \"#utility.yul\":22419:22425   */\n      0x00\n        /* \"#utility.yul\":22453:22458   */\n      dup2\n        /* \"#utility.yul\":22447:22459   */\n      mload\n        /* \"#utility.yul\":22437:22459   */\n      swap1\n      pop\n        /* \"#utility.yul\":22368:22466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22472:22640   */\n    tag_280:\n        /* \"#utility.yul\":22555:22566   */\n      0x00\n        /* \"#utility.yul\":22589:22595   */\n      dup3\n        /* \"#utility.yul\":22584:22587   */\n      dup3\n        /* \"#utility.yul\":22577:22596   */\n      mstore\n        /* \"#utility.yul\":22629:22633   */\n      0x20\n        /* \"#utility.yul\":22624:22627   */\n      dup3\n        /* \"#utility.yul\":22620:22634   */\n      add\n        /* \"#utility.yul\":22605:22634   */\n      swap1\n      pop\n        /* \"#utility.yul\":22472:22640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22646:23019   */\n    tag_281:\n        /* \"#utility.yul\":22732:22735   */\n      0x00\n        /* \"#utility.yul\":22760:22798   */\n      tag_523\n        /* \"#utility.yul\":22792:22797   */\n      dup3\n        /* \"#utility.yul\":22760:22798   */\n      tag_279\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":22814:22884   */\n      tag_524\n        /* \"#utility.yul\":22877:22883   */\n      dup2\n        /* \"#utility.yul\":22872:22875   */\n      dup6\n        /* \"#utility.yul\":22814:22884   */\n      tag_280\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":22807:22884   */\n      swap4\n      pop\n        /* \"#utility.yul\":22893:22958   */\n      tag_525\n        /* \"#utility.yul\":22951:22957   */\n      dup2\n        /* \"#utility.yul\":22946:22949   */\n      dup6\n        /* \"#utility.yul\":22939:22943   */\n      0x20\n        /* \"#utility.yul\":22932:22937   */\n      dup7\n        /* \"#utility.yul\":22928:22944   */\n      add\n        /* \"#utility.yul\":22893:22958   */\n      tag_249\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":22983:23012   */\n      tag_526\n        /* \"#utility.yul\":23005:23011   */\n      dup2\n        /* \"#utility.yul\":22983:23012   */\n      tag_250\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":22978:22981   */\n      dup5\n        /* \"#utility.yul\":22974:23013   */\n      add\n        /* \"#utility.yul\":22967:23013   */\n      swap2\n      pop\n        /* \"#utility.yul\":22736:23019   */\n      pop\n        /* \"#utility.yul\":22646:23019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23025:23776   */\n    tag_197:\n        /* \"#utility.yul\":23248:23252   */\n      0x00\n        /* \"#utility.yul\":23286:23289   */\n      0xa0\n        /* \"#utility.yul\":23275:23284   */\n      dup3\n        /* \"#utility.yul\":23271:23290   */\n      add\n        /* \"#utility.yul\":23263:23290   */\n      swap1\n      pop\n        /* \"#utility.yul\":23300:23371   */\n      tag_528\n        /* \"#utility.yul\":23368:23369   */\n      0x00\n        /* \"#utility.yul\":23357:23366   */\n      dup4\n        /* \"#utility.yul\":23353:23370   */\n      add\n        /* \"#utility.yul\":23344:23350   */\n      dup9\n        /* \"#utility.yul\":23300:23371   */\n      tag_277\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":23381:23453   */\n      tag_529\n        /* \"#utility.yul\":23449:23451   */\n      0x20\n        /* \"#utility.yul\":23438:23447   */\n      dup4\n        /* \"#utility.yul\":23434:23452   */\n      add\n        /* \"#utility.yul\":23425:23431   */\n      dup8\n        /* \"#utility.yul\":23381:23453   */\n      tag_277\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":23463:23535   */\n      tag_530\n        /* \"#utility.yul\":23531:23533   */\n      0x40\n        /* \"#utility.yul\":23520:23529   */\n      dup4\n        /* \"#utility.yul\":23516:23534   */\n      add\n        /* \"#utility.yul\":23507:23513   */\n      dup7\n        /* \"#utility.yul\":23463:23535   */\n      tag_241\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":23545:23617   */\n      tag_531\n        /* \"#utility.yul\":23613:23615   */\n      0x60\n        /* \"#utility.yul\":23602:23611   */\n      dup4\n        /* \"#utility.yul\":23598:23616   */\n      add\n        /* \"#utility.yul\":23589:23595   */\n      dup6\n        /* \"#utility.yul\":23545:23617   */\n      tag_241\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":23665:23674   */\n      dup2\n        /* \"#utility.yul\":23659:23663   */\n      dup2\n        /* \"#utility.yul\":23655:23675   */\n      sub\n        /* \"#utility.yul\":23649:23652   */\n      0x80\n        /* \"#utility.yul\":23638:23647   */\n      dup4\n        /* \"#utility.yul\":23634:23653   */\n      add\n        /* \"#utility.yul\":23627:23676   */\n      mstore\n        /* \"#utility.yul\":23693:23769   */\n      tag_532\n        /* \"#utility.yul\":23764:23768   */\n      dup2\n        /* \"#utility.yul\":23755:23761   */\n      dup5\n        /* \"#utility.yul\":23693:23769   */\n      tag_281\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":23685:23769   */\n      swap1\n      pop\n        /* \"#utility.yul\":23025:23776   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23782:23923   */\n    tag_282:\n        /* \"#utility.yul\":23838:23843   */\n      0x00\n        /* \"#utility.yul\":23869:23875   */\n      dup2\n        /* \"#utility.yul\":23863:23876   */\n      mload\n        /* \"#utility.yul\":23854:23876   */\n      swap1\n      pop\n        /* \"#utility.yul\":23885:23917   */\n      tag_534\n        /* \"#utility.yul\":23911:23916   */\n      dup2\n        /* \"#utility.yul\":23885:23917   */\n      tag_243\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":23782:23923   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23929:24278   */\n    tag_200:\n        /* \"#utility.yul\":23998:24004   */\n      0x00\n        /* \"#utility.yul\":24047:24049   */\n      0x20\n        /* \"#utility.yul\":24035:24044   */\n      dup3\n        /* \"#utility.yul\":24026:24033   */\n      dup5\n        /* \"#utility.yul\":24022:24045   */\n      sub\n        /* \"#utility.yul\":24018:24050   */\n      slt\n        /* \"#utility.yul\":24015:24134   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":24053:24132   */\n      tag_537\n      tag_232\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":24015:24134   */\n    tag_536:\n        /* \"#utility.yul\":24173:24174   */\n      0x00\n        /* \"#utility.yul\":24198:24261   */\n      tag_538\n        /* \"#utility.yul\":24253:24260   */\n      dup5\n        /* \"#utility.yul\":24244:24250   */\n      dup3\n        /* \"#utility.yul\":24233:24242   */\n      dup6\n        /* \"#utility.yul\":24229:24251   */\n      add\n        /* \"#utility.yul\":24198:24261   */\n      tag_282\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":24188:24261   */\n      swap2\n      pop\n        /* \"#utility.yul\":24144:24271   */\n      pop\n        /* \"#utility.yul\":23929:24278   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24284:25337   */\n    tag_216:\n        /* \"#utility.yul\":24607:24611   */\n      0x00\n        /* \"#utility.yul\":24645:24648   */\n      0xa0\n        /* \"#utility.yul\":24634:24643   */\n      dup3\n        /* \"#utility.yul\":24630:24649   */\n      add\n        /* \"#utility.yul\":24622:24649   */\n      swap1\n      pop\n        /* \"#utility.yul\":24659:24730   */\n      tag_540\n        /* \"#utility.yul\":24727:24728   */\n      0x00\n        /* \"#utility.yul\":24716:24725   */\n      dup4\n        /* \"#utility.yul\":24712:24729   */\n      add\n        /* \"#utility.yul\":24703:24709   */\n      dup9\n        /* \"#utility.yul\":24659:24730   */\n      tag_277\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":24740:24812   */\n      tag_541\n        /* \"#utility.yul\":24808:24810   */\n      0x20\n        /* \"#utility.yul\":24797:24806   */\n      dup4\n        /* \"#utility.yul\":24793:24811   */\n      add\n        /* \"#utility.yul\":24784:24790   */\n      dup8\n        /* \"#utility.yul\":24740:24812   */\n      tag_277\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":24859:24868   */\n      dup2\n        /* \"#utility.yul\":24853:24857   */\n      dup2\n        /* \"#utility.yul\":24849:24869   */\n      sub\n        /* \"#utility.yul\":24844:24846   */\n      0x40\n        /* \"#utility.yul\":24833:24842   */\n      dup4\n        /* \"#utility.yul\":24829:24847   */\n      add\n        /* \"#utility.yul\":24822:24870   */\n      mstore\n        /* \"#utility.yul\":24887:24995   */\n      tag_542\n        /* \"#utility.yul\":24990:24994   */\n      dup2\n        /* \"#utility.yul\":24981:24987   */\n      dup7\n        /* \"#utility.yul\":24887:24995   */\n      tag_273\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":24879:24995   */\n      swap1\n      pop\n        /* \"#utility.yul\":25042:25051   */\n      dup2\n        /* \"#utility.yul\":25036:25040   */\n      dup2\n        /* \"#utility.yul\":25032:25052   */\n      sub\n        /* \"#utility.yul\":25027:25029   */\n      0x60\n        /* \"#utility.yul\":25016:25025   */\n      dup4\n        /* \"#utility.yul\":25012:25030   */\n      add\n        /* \"#utility.yul\":25005:25053   */\n      mstore\n        /* \"#utility.yul\":25070:25178   */\n      tag_543\n        /* \"#utility.yul\":25173:25177   */\n      dup2\n        /* \"#utility.yul\":25164:25170   */\n      dup6\n        /* \"#utility.yul\":25070:25178   */\n      tag_273\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":25062:25178   */\n      swap1\n      pop\n        /* \"#utility.yul\":25226:25235   */\n      dup2\n        /* \"#utility.yul\":25220:25224   */\n      dup2\n        /* \"#utility.yul\":25216:25236   */\n      sub\n        /* \"#utility.yul\":25210:25213   */\n      0x80\n        /* \"#utility.yul\":25199:25208   */\n      dup4\n        /* \"#utility.yul\":25195:25214   */\n      add\n        /* \"#utility.yul\":25188:25237   */\n      mstore\n        /* \"#utility.yul\":25254:25330   */\n      tag_544\n        /* \"#utility.yul\":25325:25329   */\n      dup2\n        /* \"#utility.yul\":25316:25322   */\n      dup5\n        /* \"#utility.yul\":25254:25330   */\n      tag_281\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":25246:25330   */\n      swap1\n      pop\n        /* \"#utility.yul\":24284:25337   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220435a15d91dfff23a56afe70aa6c418d16427b85e71be4960e94ce47ff39ddac664736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_250": {
									"entryPoint": null,
									"id": 250,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_863": {
									"entryPoint": 67,
									"id": 863,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 88,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 98,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 285,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:12",
										"nodeType": "YulBlock",
										"src": "0:5231:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:12",
													"nodeType": "YulBlock",
													"src": "66:40:12",
													"statements": [
														{
															"nativeSrc": "77:22:12",
															"nodeType": "YulAssignment",
															"src": "77:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:12"
																},
																"nativeSrc": "87:12:12",
																"nodeType": "YulFunctionCall",
																"src": "87:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:12",
														"nodeType": "YulTypedName",
														"src": "49:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:12",
														"nodeType": "YulTypedName",
														"src": "59:6:12",
														"type": ""
													}
												],
												"src": "7:99:12"
											},
											{
												"body": {
													"nativeSrc": "140:152:12",
													"nodeType": "YulBlock",
													"src": "140:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:12",
																		"nodeType": "YulLiteral",
																		"src": "157:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:12",
																		"nodeType": "YulLiteral",
																		"src": "160:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:12"
																},
																"nativeSrc": "150:88:12",
																"nodeType": "YulFunctionCall",
																"src": "150:88:12"
															},
															"nativeSrc": "150:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:12",
																		"nodeType": "YulLiteral",
																		"src": "254:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:12",
																		"nodeType": "YulLiteral",
																		"src": "257:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:12"
																},
																"nativeSrc": "247:15:12",
																"nodeType": "YulFunctionCall",
																"src": "247:15:12"
															},
															"nativeSrc": "247:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:12",
																		"nodeType": "YulLiteral",
																		"src": "278:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:12",
																		"nodeType": "YulLiteral",
																		"src": "281:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:12"
																},
																"nativeSrc": "271:15:12",
																"nodeType": "YulFunctionCall",
																"src": "271:15:12"
															},
															"nativeSrc": "271:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:12"
											},
											{
												"body": {
													"nativeSrc": "326:152:12",
													"nodeType": "YulBlock",
													"src": "326:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:12",
																		"nodeType": "YulLiteral",
																		"src": "343:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:12",
																		"nodeType": "YulLiteral",
																		"src": "346:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:12"
																},
																"nativeSrc": "336:88:12",
																"nodeType": "YulFunctionCall",
																"src": "336:88:12"
															},
															"nativeSrc": "336:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:12",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:12",
																		"nodeType": "YulLiteral",
																		"src": "443:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nativeSrc": "433:15:12",
																"nodeType": "YulFunctionCall",
																"src": "433:15:12"
															},
															"nativeSrc": "433:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:12",
																		"nodeType": "YulLiteral",
																		"src": "464:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:12",
																		"nodeType": "YulLiteral",
																		"src": "467:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:12"
																},
																"nativeSrc": "457:15:12",
																"nodeType": "YulFunctionCall",
																"src": "457:15:12"
															},
															"nativeSrc": "457:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:12"
											},
											{
												"body": {
													"nativeSrc": "535:269:12",
													"nodeType": "YulBlock",
													"src": "535:269:12",
													"statements": [
														{
															"nativeSrc": "545:22:12",
															"nodeType": "YulAssignment",
															"src": "545:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:12",
																		"nodeType": "YulLiteral",
																		"src": "565:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:12"
																},
																"nativeSrc": "555:12:12",
																"nodeType": "YulFunctionCall",
																"src": "555:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:12"
																}
															]
														},
														{
															"nativeSrc": "576:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:12",
																		"nodeType": "YulLiteral",
																		"src": "612:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:12"
																},
																"nativeSrc": "602:12:12",
																"nodeType": "YulFunctionCall",
																"src": "602:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:12",
																	"nodeType": "YulTypedName",
																	"src": "580:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:12",
																"nodeType": "YulBlock",
																"src": "653:51:12",
																"statements": [
																	{
																		"nativeSrc": "667:27:12",
																		"nodeType": "YulAssignment",
																		"src": "667:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:12",
																					"nodeType": "YulLiteral",
																					"src": "689:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:12"
																			},
																			"nativeSrc": "677:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:12"
																},
																"nativeSrc": "626:26:12",
																"nodeType": "YulFunctionCall",
																"src": "626:26:12"
															},
															"nativeSrc": "623:81:12",
															"nodeType": "YulIf",
															"src": "623:81:12"
														},
														{
															"body": {
																"nativeSrc": "756:42:12",
																"nodeType": "YulBlock",
																"src": "756:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:12"
																			},
																			"nativeSrc": "770:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:12"
																		},
																		"nativeSrc": "770:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:12",
																				"nodeType": "YulLiteral",
																				"src": "751:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:12"
																		},
																		"nativeSrc": "740:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:12"
																},
																"nativeSrc": "717:38:12",
																"nodeType": "YulFunctionCall",
																"src": "717:38:12"
															},
															"nativeSrc": "714:84:12",
															"nodeType": "YulIf",
															"src": "714:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:12",
														"nodeType": "YulTypedName",
														"src": "519:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:12",
														"nodeType": "YulTypedName",
														"src": "528:6:12",
														"type": ""
													}
												],
												"src": "484:320:12"
											},
											{
												"body": {
													"nativeSrc": "864:87:12",
													"nodeType": "YulBlock",
													"src": "864:87:12",
													"statements": [
														{
															"nativeSrc": "874:11:12",
															"nodeType": "YulAssignment",
															"src": "874:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:12",
																"nodeType": "YulIdentifier",
																"src": "882:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:12",
																		"nodeType": "YulLiteral",
																		"src": "902:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:12"
																},
																"nativeSrc": "895:14:12",
																"nodeType": "YulFunctionCall",
																"src": "895:14:12"
															},
															"nativeSrc": "895:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:12"
														},
														{
															"nativeSrc": "918:26:12",
															"nodeType": "YulAssignment",
															"src": "918:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:12",
																		"nodeType": "YulLiteral",
																		"src": "936:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:12",
																		"nodeType": "YulLiteral",
																		"src": "939:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:12"
																},
																"nativeSrc": "926:18:12",
																"nodeType": "YulFunctionCall",
																"src": "926:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:12",
														"nodeType": "YulTypedName",
														"src": "851:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:12",
														"nodeType": "YulTypedName",
														"src": "859:4:12",
														"type": ""
													}
												],
												"src": "810:141:12"
											},
											{
												"body": {
													"nativeSrc": "1001:49:12",
													"nodeType": "YulBlock",
													"src": "1001:49:12",
													"statements": [
														{
															"nativeSrc": "1011:33:12",
															"nodeType": "YulAssignment",
															"src": "1011:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:12"
																		},
																		"nativeSrc": "1025:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:12"
																},
																"nativeSrc": "1021:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:12",
														"nodeType": "YulTypedName",
														"src": "984:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:12",
														"nodeType": "YulTypedName",
														"src": "994:6:12",
														"type": ""
													}
												],
												"src": "957:93:12"
											},
											{
												"body": {
													"nativeSrc": "1109:54:12",
													"nodeType": "YulBlock",
													"src": "1109:54:12",
													"statements": [
														{
															"nativeSrc": "1119:37:12",
															"nodeType": "YulAssignment",
															"src": "1119:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:12"
																},
																"nativeSrc": "1140:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:12",
														"nodeType": "YulTypedName",
														"src": "1084:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:12",
														"nodeType": "YulTypedName",
														"src": "1090:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:12",
														"nodeType": "YulTypedName",
														"src": "1100:8:12",
														"type": ""
													}
												],
												"src": "1056:107:12"
											},
											{
												"body": {
													"nativeSrc": "1245:317:12",
													"nodeType": "YulBlock",
													"src": "1245:317:12",
													"statements": [
														{
															"nativeSrc": "1255:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:12"
																},
																"nativeSrc": "1272:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:12",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:12",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:12"
																},
																"nativeSrc": "1311:97:12",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:12",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:12",
															"nodeType": "YulAssignment",
															"src": "1417:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:12"
																},
																"nativeSrc": "1429:39:12",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:12"
																}
															]
														},
														{
															"nativeSrc": "1477:30:12",
															"nodeType": "YulAssignment",
															"src": "1477:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:12"
																		},
																		"nativeSrc": "1497:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:12"
																},
																"nativeSrc": "1486:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:12"
																}
															]
														},
														{
															"nativeSrc": "1516:40:12",
															"nodeType": "YulAssignment",
															"src": "1516:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:12"
																		},
																		"nativeSrc": "1536:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:12"
																},
																"nativeSrc": "1526:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:12",
														"nodeType": "YulTypedName",
														"src": "1206:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:12",
														"nodeType": "YulTypedName",
														"src": "1213:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:12",
														"nodeType": "YulTypedName",
														"src": "1225:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:12",
														"nodeType": "YulTypedName",
														"src": "1238:6:12",
														"type": ""
													}
												],
												"src": "1169:393:12"
											},
											{
												"body": {
													"nativeSrc": "1613:32:12",
													"nodeType": "YulBlock",
													"src": "1613:32:12",
													"statements": [
														{
															"nativeSrc": "1623:16:12",
															"nodeType": "YulAssignment",
															"src": "1623:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:12",
																"nodeType": "YulIdentifier",
																"src": "1634:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:12",
														"nodeType": "YulTypedName",
														"src": "1595:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:12",
														"nodeType": "YulTypedName",
														"src": "1605:7:12",
														"type": ""
													}
												],
												"src": "1568:77:12"
											},
											{
												"body": {
													"nativeSrc": "1683:28:12",
													"nodeType": "YulBlock",
													"src": "1683:28:12",
													"statements": [
														{
															"nativeSrc": "1693:12:12",
															"nodeType": "YulAssignment",
															"src": "1693:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:12",
																"nodeType": "YulIdentifier",
																"src": "1700:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:12",
														"nodeType": "YulTypedName",
														"src": "1669:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:12",
														"nodeType": "YulTypedName",
														"src": "1679:3:12",
														"type": ""
													}
												],
												"src": "1651:60:12"
											},
											{
												"body": {
													"nativeSrc": "1777:82:12",
													"nodeType": "YulBlock",
													"src": "1777:82:12",
													"statements": [
														{
															"nativeSrc": "1787:66:12",
															"nodeType": "YulAssignment",
															"src": "1787:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:12"
																				},
																				"nativeSrc": "1827:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:12"
																		},
																		"nativeSrc": "1818:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:12"
																},
																"nativeSrc": "1800:53:12",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:12",
														"nodeType": "YulTypedName",
														"src": "1757:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:12",
														"nodeType": "YulTypedName",
														"src": "1767:9:12",
														"type": ""
													}
												],
												"src": "1717:142:12"
											},
											{
												"body": {
													"nativeSrc": "1912:28:12",
													"nodeType": "YulBlock",
													"src": "1912:28:12",
													"statements": [
														{
															"nativeSrc": "1922:12:12",
															"nodeType": "YulAssignment",
															"src": "1922:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:12",
																"nodeType": "YulIdentifier",
																"src": "1929:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:12",
														"nodeType": "YulTypedName",
														"src": "1898:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:12",
														"nodeType": "YulTypedName",
														"src": "1908:3:12",
														"type": ""
													}
												],
												"src": "1865:75:12"
											},
											{
												"body": {
													"nativeSrc": "2022:193:12",
													"nodeType": "YulBlock",
													"src": "2022:193:12",
													"statements": [
														{
															"nativeSrc": "2032:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:12"
																},
																"nativeSrc": "2056:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:12",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:12"
																				},
																				"nativeSrc": "2145:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:12"
																				},
																				"nativeSrc": "2166:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:12"
																		},
																		"nativeSrc": "2117:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:12"
																},
																"nativeSrc": "2104:105:12",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:12"
															},
															"nativeSrc": "2104:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:12",
														"nodeType": "YulTypedName",
														"src": "1999:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:12",
														"nodeType": "YulTypedName",
														"src": "2005:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:12",
														"nodeType": "YulTypedName",
														"src": "2013:7:12",
														"type": ""
													}
												],
												"src": "1946:269:12"
											},
											{
												"body": {
													"nativeSrc": "2270:24:12",
													"nodeType": "YulBlock",
													"src": "2270:24:12",
													"statements": [
														{
															"nativeSrc": "2280:8:12",
															"nodeType": "YulAssignment",
															"src": "2280:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:12",
																"nodeType": "YulLiteral",
																"src": "2287:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:12",
														"nodeType": "YulTypedName",
														"src": "2266:3:12",
														"type": ""
													}
												],
												"src": "2221:73:12"
											},
											{
												"body": {
													"nativeSrc": "2353:136:12",
													"nodeType": "YulBlock",
													"src": "2353:136:12",
													"statements": [
														{
															"nativeSrc": "2363:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:12"
																},
																"nativeSrc": "2377:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:12"
																},
																"nativeSrc": "2418:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:12"
															},
															"nativeSrc": "2418:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:12",
														"nodeType": "YulTypedName",
														"src": "2339:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:12",
														"nodeType": "YulTypedName",
														"src": "2345:6:12",
														"type": ""
													}
												],
												"src": "2300:189:12"
											},
											{
												"body": {
													"nativeSrc": "2545:136:12",
													"nodeType": "YulBlock",
													"src": "2545:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:12",
																"nodeType": "YulBlock",
																"src": "2612:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:12"
																			},
																			"nativeSrc": "2626:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:12"
																		},
																		"nativeSrc": "2626:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:12"
																},
																"nativeSrc": "2562:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:12"
															},
															"nativeSrc": "2555:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:12",
																"nodeType": "YulBlock",
																"src": "2577:26:12",
																"statements": [
																	{
																		"nativeSrc": "2579:22:12",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:12"
																			},
																			"nativeSrc": "2588:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:12",
																"nodeType": "YulBlock",
																"src": "2559:2:12",
																"statements": []
															},
															"src": "2555:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:12",
														"nodeType": "YulTypedName",
														"src": "2533:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:12",
														"nodeType": "YulTypedName",
														"src": "2540:3:12",
														"type": ""
													}
												],
												"src": "2495:186:12"
											},
											{
												"body": {
													"nativeSrc": "2766:464:12",
													"nodeType": "YulBlock",
													"src": "2766:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:12",
																"nodeType": "YulBlock",
																"src": "2792:431:12",
																"statements": [
																	{
																		"nativeSrc": "2806:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:12"
																			},
																			"nativeSrc": "2822:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:12",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:12"
																					},
																					"nativeSrc": "2906:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:12"
																			},
																			"nativeSrc": "2892:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:12",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:12",
																			"nodeType": "YulBlock",
																			"src": "3093:27:12",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:12",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:12",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:12"
																			},
																			"nativeSrc": "3074:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:12"
																		},
																		"nativeSrc": "3071:49:12",
																		"nodeType": "YulIf",
																		"src": "3071:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:12"
																							},
																							"nativeSrc": "3189:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:12"
																					},
																					"nativeSrc": "3175:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:12"
																			},
																			"nativeSrc": "3133:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:12"
																		},
																		"nativeSrc": "3133:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:12"
																},
																"nativeSrc": "2780:11:12",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:12"
															},
															"nativeSrc": "2777:446:12",
															"nodeType": "YulIf",
															"src": "2777:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:12",
														"nodeType": "YulTypedName",
														"src": "2742:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:12",
														"nodeType": "YulTypedName",
														"src": "2749:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:12",
														"nodeType": "YulTypedName",
														"src": "2754:10:12",
														"type": ""
													}
												],
												"src": "2687:543:12"
											},
											{
												"body": {
													"nativeSrc": "3299:54:12",
													"nodeType": "YulBlock",
													"src": "3299:54:12",
													"statements": [
														{
															"nativeSrc": "3309:37:12",
															"nodeType": "YulAssignment",
															"src": "3309:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:12"
																},
																"nativeSrc": "3330:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:12",
														"nodeType": "YulTypedName",
														"src": "3274:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:12",
														"nodeType": "YulTypedName",
														"src": "3280:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:12",
														"nodeType": "YulTypedName",
														"src": "3290:8:12",
														"type": ""
													}
												],
												"src": "3236:117:12"
											},
											{
												"body": {
													"nativeSrc": "3410:118:12",
													"nodeType": "YulBlock",
													"src": "3410:118:12",
													"statements": [
														{
															"nativeSrc": "3420:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:12"
																				},
																				"nativeSrc": "3465:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:12"
																				},
																				"nativeSrc": "3480:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:12"
																		},
																		"nativeSrc": "3436:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:12"
																},
																"nativeSrc": "3432:56:12",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:12",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:12",
															"nodeType": "YulAssignment",
															"src": "3497:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:12"
																},
																"nativeSrc": "3507:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:12",
														"nodeType": "YulTypedName",
														"src": "3387:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:12",
														"nodeType": "YulTypedName",
														"src": "3393:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:12",
														"nodeType": "YulTypedName",
														"src": "3403:6:12",
														"type": ""
													}
												],
												"src": "3359:169:12"
											},
											{
												"body": {
													"nativeSrc": "3614:214:12",
													"nodeType": "YulBlock",
													"src": "3614:214:12",
													"statements": [
														{
															"nativeSrc": "3747:37:12",
															"nodeType": "YulAssignment",
															"src": "3747:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:12"
																},
																"nativeSrc": "3755:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:12"
																}
															]
														},
														{
															"nativeSrc": "3793:29:12",
															"nodeType": "YulAssignment",
															"src": "3793:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:12"
																		},
																		"nativeSrc": "3810:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:12"
																},
																"nativeSrc": "3801:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:12",
														"nodeType": "YulTypedName",
														"src": "3595:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:12",
														"nodeType": "YulTypedName",
														"src": "3601:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:12",
														"nodeType": "YulTypedName",
														"src": "3609:4:12",
														"type": ""
													}
												],
												"src": "3533:295:12"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:12",
													"nodeType": "YulBlock",
													"src": "3925:1303:12",
													"statements": [
														{
															"nativeSrc": "3936:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:12"
																},
																"nativeSrc": "3950:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:12",
																"nodeType": "YulBlock",
																"src": "4072:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:12"
																			},
																			"nativeSrc": "4074:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:12"
																		},
																		"nativeSrc": "4074:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:12",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:12"
																},
																"nativeSrc": "4041:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:12"
															},
															"nativeSrc": "4038:56:12",
															"nodeType": "YulIf",
															"src": "4038:56:12"
														},
														{
															"nativeSrc": "4104:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:12"
																		},
																		"nativeSrc": "4144:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:12"
																},
																"nativeSrc": "4118:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:12"
																},
																"nativeSrc": "4203:67:12",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:12"
															},
															"nativeSrc": "4203:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:12"
														},
														{
															"nativeSrc": "4280:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:12",
																"nodeType": "YulLiteral",
																"src": "4297:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:12",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:12",
															"nodeType": "YulAssignment",
															"src": "4308:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:12",
																"nodeType": "YulLiteral",
																"src": "4321:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:12",
																		"nodeType": "YulBlock",
																		"src": "4372:611:12",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:12",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:12"
																							},
																							"nativeSrc": "4413:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:12"
																					},
																					"nativeSrc": "4401:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:12",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:12"
																					},
																					"nativeSrc": "4451:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:12",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:12",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:12",
																					"nodeType": "YulBlock",
																					"src": "4569:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:12"
																												},
																												"nativeSrc": "4608:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:12"
																										},
																										"nativeSrc": "4602:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:12"
																								},
																								"nativeSrc": "4587:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:12"
																							},
																							"nativeSrc": "4587:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:12"
																						},
																						{
																							"nativeSrc": "4646:24:12",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:12",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:12"
																								},
																								"nativeSrc": "4656:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:12",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:12",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:12"
																								},
																								"nativeSrc": "4700:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:12"
																					},
																					"nativeSrc": "4532:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:12"
																				},
																				"nativeSrc": "4524:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:12",
																					"nodeType": "YulBlock",
																					"src": "4547:21:12",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:12",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:12",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:12"
																								},
																								"nativeSrc": "4554:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:12",
																					"nodeType": "YulBlock",
																					"src": "4528:3:12",
																					"statements": []
																				},
																				"src": "4524:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:12",
																					"nodeType": "YulBlock",
																					"src": "4768:156:12",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:12"
																										},
																										"nativeSrc": "4809:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:12"
																								},
																								"nativeSrc": "4803:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:12",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:12",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:12"
																												},
																												"nativeSrc": "4891:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:12"
																										},
																										"nativeSrc": "4861:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:12"
																								},
																								"nativeSrc": "4846:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:12"
																							},
																							"nativeSrc": "4846:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:12"
																					},
																					"nativeSrc": "4748:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:12"
																				},
																				"nativeSrc": "4745:179:12",
																				"nodeType": "YulIf",
																				"src": "4745:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:12",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:12"
																									},
																									"nativeSrc": "4954:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:12",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:12"
																							},
																							"nativeSrc": "4950:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:12"
																					},
																					"nativeSrc": "4937:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:12"
																				},
																				"nativeSrc": "4937:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:12"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:12",
																	"nodeType": "YulCase",
																	"src": "4365:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:12",
																		"nodeType": "YulBlock",
																		"src": "5000:222:12",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:12",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:12",
																					"nodeType": "YulBlock",
																					"src": "5051:67:12",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:12",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:12"
																										},
																										"nativeSrc": "5084:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:12"
																								},
																								"nativeSrc": "5078:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:12"
																				},
																				"nativeSrc": "5041:77:12",
																				"nodeType": "YulIf",
																				"src": "5041:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:12"
																							},
																							"nativeSrc": "5144:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:12"
																					},
																					"nativeSrc": "5131:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:12"
																				},
																				"nativeSrc": "5131:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:12"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:12",
																	"nodeType": "YulCase",
																	"src": "4992:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:12"
																},
																"nativeSrc": "4342:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:12"
															},
															"nativeSrc": "4335:887:12",
															"nodeType": "YulSwitch",
															"src": "4335:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:12",
														"nodeType": "YulTypedName",
														"src": "3914:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:12",
														"nodeType": "YulTypedName",
														"src": "3920:3:12",
														"type": ""
													}
												],
												"src": "3833:1395:12"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051806060016040528060258152602001620024ab602591396200003c816200004360201b60201c565b50620003a0565b8060029081620000549190620002bc565b5050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620000d457607f821691505b602082108103620000ea57620000e96200008f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200014e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000111565b6200015a868362000111565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620001a46200019e620001988462000172565b6200017b565b62000172565b9050919050565b5f819050919050565b620001bf8362000184565b620001d7620001ce82620001ab565b8484546200011d565b825550505050565b5f90565b620001ed620001df565b620001fa818484620001b4565b505050565b5b818110156200022157620002155f82620001e3565b60018101905062000200565b5050565b601f82111562000270576200023a81620000f0565b620002458462000102565b8101602085101562000255578190505b6200026d620002648562000102565b830182620001ff565b50505b505050565b5f82821c905092915050565b5f620002925f198460080262000275565b1980831691505092915050565b5f620002ac838362000281565b9150826002028217905092915050565b620002c78262000058565b67ffffffffffffffff811115620002e357620002e262000062565b5b620002ef8254620000bc565b620002fc82828562000225565b5f60209050601f83116001811462000332575f84156200031d578287015190505b6200032985826200029f565b86555062000398565b601f1984166200034286620000f0565b5f5b828110156200036b5784890151825560018201915060208501945060208101905062000344565b868310156200038b578489015162000387601f89168262000281565b8355505b6001600288020188555050505b505050505050565b6120fd80620003ae5f395ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c80634e1273f4116100645780634e1273f414610167578063731133e914610197578063a22cb465146101b3578063e985e9c5146101cf578063f242432a146101ff5761009b565b8062fdd58e1461009f57806301ffc9a7146100cf5780630e89341c146100ff5780631f7fdffa1461012f5780632eb2c2d61461014b575b5f80fd5b6100b960048036038101906100b49190611479565b61021b565b6040516100c691906114c6565b60405180910390f35b6100e960048036038101906100e49190611534565b610270565b6040516100f69190611579565b60405180910390f35b61011960048036038101906101149190611592565b610351565b6040516101269190611647565b60405180910390f35b61014960048036038101906101449190611857565b6103e3565b005b6101656004803603810190610160919061190f565b6103f5565b005b610181600480360381019061017c9190611a9a565b61049c565b60405161018e9190611bc7565b60405180910390f35b6101b160048036038101906101ac9190611be7565b6105a3565b005b6101cd60048036038101906101c89190611c91565b6105b5565b005b6101e960048036038101906101e49190611ccf565b6105cb565b6040516101f69190611579565b60405180910390f35b61021960048036038101906102149190611d0d565b610659565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061033a57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061034a575061034982610700565b5b9050919050565b60606002805461036090611dcd565b80601f016020809104026020016040519081016040528092919081815260200182805461038c90611dcd565b80156103d75780601f106103ae576101008083540402835291602001916103d7565b820191905f5260205f20905b8154815290600101906020018083116103ba57829003601f168201915b50505050509050919050565b6103ef84848484610769565b50505050565b5f6103fe6107ec565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610443575061044186826105cb565b155b156104875780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161047e929190611e0c565b60405180910390fd5b61049486868686866107f3565b505050505050565b606081518351146104e857815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016104df929190611e33565b60405180910390fd5b5f835167ffffffffffffffff8111156105045761050361166b565b5b6040519080825280602002602001820160405280156105325781602001602082028036833780820191505090505b5090505f5b84518110156105985761056e61055682876108e790919063ffffffff16565b61056983876108fa90919063ffffffff16565b61021b565b82828151811061058157610580611e5a565b5b602002602001018181525050806001019050610537565b508091505092915050565b6105af8484848461090d565b50505050565b6105c76105c06107ec565b83836109a2565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f6106626107ec565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156106a757506106a586826105cb565b155b156106eb5780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016106e2929190611e0c565b60405180910390fd5b6106f88686868686610b0b565b505050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107d9575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016107d09190611e87565b60405180910390fd5b6107e65f85858585610c11565b50505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610863575f6040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161085a9190611e87565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036108d3575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016108ca9190611e87565b60405180910390fd5b6108e08585858585610c11565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361097d575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016109749190611e87565b60405180910390fd5b5f806109898585610cbd565b9150915061099a5f87848487610c11565b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a12575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610a099190611e87565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610afe9190611579565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b7b575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b729190611e87565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610beb575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610be29190611e87565b60405180910390fd5b5f80610bf78585610cbd565b91509150610c088787848487610c11565b50505050505050565b610c1d85858585610ced565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610cb6575f610c596107ec565b90506001845103610ca5575f610c785f866108fa90919063ffffffff16565b90505f610c8e5f866108fa90919063ffffffff16565b9050610c9e83898985858961107d565b5050610cb4565b610cb381878787878761122c565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610d3757815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610d2e929190611e33565b60405180910390fd5b5f610d406107ec565b90505f5b8351811015610f3c575f610d6182866108fa90919063ffffffff16565b90505f610d7783866108fa90919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610e9a575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e4657888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610e3d9493929190611ea0565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610f2f57805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610f279190611f10565b925050819055505b5050806001019050610d44565b506001835103610ff7575f610f5a5f856108fa90919063ffffffff16565b90505f610f705f856108fa90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610fe8929190611e33565b60405180910390a45050611076565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161106d929190611f43565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611224578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016110dd959493929190611fca565b6020604051808303815f875af192505050801561111857506040513d601f19601f820116820180604052508101906111159190612036565b60015b611199573d805f8114611146576040519150601f19603f3d011682016040523d82523d5f602084013e61114b565b606091505b505f81510361119157846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111889190611e87565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461122257846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016112199190611e87565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b11156113d3578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161128c959493929190612061565b6020604051808303815f875af19250505080156112c757506040513d601f19601f820116820180604052508101906112c49190612036565b60015b611348573d805f81146112f5576040519150601f19603f3d011682016040523d82523d5f602084013e6112fa565b606091505b505f81510361134057846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113379190611e87565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146113d157846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113c89190611e87565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611415826113ec565b9050919050565b6114258161140b565b811461142f575f80fd5b50565b5f813590506114408161141c565b92915050565b5f819050919050565b61145881611446565b8114611462575f80fd5b50565b5f813590506114738161144f565b92915050565b5f806040838503121561148f5761148e6113e4565b5b5f61149c85828601611432565b92505060206114ad85828601611465565b9150509250929050565b6114c081611446565b82525050565b5f6020820190506114d95f8301846114b7565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611513816114df565b811461151d575f80fd5b50565b5f8135905061152e8161150a565b92915050565b5f60208284031215611549576115486113e4565b5b5f61155684828501611520565b91505092915050565b5f8115159050919050565b6115738161155f565b82525050565b5f60208201905061158c5f83018461156a565b92915050565b5f602082840312156115a7576115a66113e4565b5b5f6115b484828501611465565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156115f45780820151818401526020810190506115d9565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611619826115bd565b61162381856115c7565b93506116338185602086016115d7565b61163c816115ff565b840191505092915050565b5f6020820190508181035f83015261165f818461160f565b905092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6116a1826115ff565b810181811067ffffffffffffffff821117156116c0576116bf61166b565b5b80604052505050565b5f6116d26113db565b90506116de8282611698565b919050565b5f67ffffffffffffffff8211156116fd576116fc61166b565b5b602082029050602081019050919050565b5f80fd5b5f61172461171f846116e3565b6116c9565b905080838252602082019050602084028301858111156117475761174661170e565b5b835b81811015611770578061175c8882611465565b845260208401935050602081019050611749565b5050509392505050565b5f82601f83011261178e5761178d611667565b5b813561179e848260208601611712565b91505092915050565b5f80fd5b5f67ffffffffffffffff8211156117c5576117c461166b565b5b6117ce826115ff565b9050602081019050919050565b828183375f83830152505050565b5f6117fb6117f6846117ab565b6116c9565b905082815260208101848484011115611817576118166117a7565b5b6118228482856117db565b509392505050565b5f82601f83011261183e5761183d611667565b5b813561184e8482602086016117e9565b91505092915050565b5f805f806080858703121561186f5761186e6113e4565b5b5f61187c87828801611432565b945050602085013567ffffffffffffffff81111561189d5761189c6113e8565b5b6118a98782880161177a565b935050604085013567ffffffffffffffff8111156118ca576118c96113e8565b5b6118d68782880161177a565b925050606085013567ffffffffffffffff8111156118f7576118f66113e8565b5b6119038782880161182a565b91505092959194509250565b5f805f805f60a08688031215611928576119276113e4565b5b5f61193588828901611432565b955050602061194688828901611432565b945050604086013567ffffffffffffffff811115611967576119666113e8565b5b6119738882890161177a565b935050606086013567ffffffffffffffff811115611994576119936113e8565b5b6119a08882890161177a565b925050608086013567ffffffffffffffff8111156119c1576119c06113e8565b5b6119cd8882890161182a565b9150509295509295909350565b5f67ffffffffffffffff8211156119f4576119f361166b565b5b602082029050602081019050919050565b5f611a17611a12846119da565b6116c9565b90508083825260208201905060208402830185811115611a3a57611a3961170e565b5b835b81811015611a635780611a4f8882611432565b845260208401935050602081019050611a3c565b5050509392505050565b5f82601f830112611a8157611a80611667565b5b8135611a91848260208601611a05565b91505092915050565b5f8060408385031215611ab057611aaf6113e4565b5b5f83013567ffffffffffffffff811115611acd57611acc6113e8565b5b611ad985828601611a6d565b925050602083013567ffffffffffffffff811115611afa57611af96113e8565b5b611b068582860161177a565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611b4281611446565b82525050565b5f611b538383611b39565b60208301905092915050565b5f602082019050919050565b5f611b7582611b10565b611b7f8185611b1a565b9350611b8a83611b2a565b805f5b83811015611bba578151611ba18882611b48565b9750611bac83611b5f565b925050600181019050611b8d565b5085935050505092915050565b5f6020820190508181035f830152611bdf8184611b6b565b905092915050565b5f805f8060808587031215611bff57611bfe6113e4565b5b5f611c0c87828801611432565b9450506020611c1d87828801611465565b9350506040611c2e87828801611465565b925050606085013567ffffffffffffffff811115611c4f57611c4e6113e8565b5b611c5b8782880161182a565b91505092959194509250565b611c708161155f565b8114611c7a575f80fd5b50565b5f81359050611c8b81611c67565b92915050565b5f8060408385031215611ca757611ca66113e4565b5b5f611cb485828601611432565b9250506020611cc585828601611c7d565b9150509250929050565b5f8060408385031215611ce557611ce46113e4565b5b5f611cf285828601611432565b9250506020611d0385828601611432565b9150509250929050565b5f805f805f60a08688031215611d2657611d256113e4565b5b5f611d3388828901611432565b9550506020611d4488828901611432565b9450506040611d5588828901611465565b9350506060611d6688828901611465565b925050608086013567ffffffffffffffff811115611d8757611d866113e8565b5b611d938882890161182a565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611de457607f821691505b602082108103611df757611df6611da0565b5b50919050565b611e068161140b565b82525050565b5f604082019050611e1f5f830185611dfd565b611e2c6020830184611dfd565b9392505050565b5f604082019050611e465f8301856114b7565b611e5360208301846114b7565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f602082019050611e9a5f830184611dfd565b92915050565b5f608082019050611eb35f830187611dfd565b611ec060208301866114b7565b611ecd60408301856114b7565b611eda60608301846114b7565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f1a82611446565b9150611f2583611446565b9250828201905080821115611f3d57611f3c611ee3565b5b92915050565b5f6040820190508181035f830152611f5b8185611b6b565b90508181036020830152611f6f8184611b6b565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f611f9c82611f78565b611fa68185611f82565b9350611fb68185602086016115d7565b611fbf816115ff565b840191505092915050565b5f60a082019050611fdd5f830188611dfd565b611fea6020830187611dfd565b611ff760408301866114b7565b61200460608301856114b7565b81810360808301526120168184611f92565b90509695505050505050565b5f815190506120308161150a565b92915050565b5f6020828403121561204b5761204a6113e4565b5b5f61205884828501612022565b91505092915050565b5f60a0820190506120745f830188611dfd565b6120816020830187611dfd565b81810360408301526120938186611b6b565b905081810360608301526120a78185611b6b565b905081810360808301526120bb8184611f92565b9050969550505050505056fea2646970667358221220435a15d91dfff23a56afe70aa6c418d16427b85e71be4960e94ce47ff39ddac664736f6c6343000816003368747470733a2f2f6d796170692e636f6d2f6170692f746f6b656e2f7b69647d2e6a736f6e",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x24AB PUSH1 0x25 SWAP2 CODECOPY PUSH3 0x3C DUP2 PUSH3 0x43 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x3A0 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x54 SWAP2 SWAP1 PUSH3 0x2BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xD4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xEA JUMPI PUSH3 0xE9 PUSH3 0x8F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x14E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x111 JUMP JUMPDEST PUSH3 0x15A DUP7 DUP4 PUSH3 0x111 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1A4 PUSH3 0x19E PUSH3 0x198 DUP5 PUSH3 0x172 JUMP JUMPDEST PUSH3 0x17B JUMP JUMPDEST PUSH3 0x172 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1BF DUP4 PUSH3 0x184 JUMP JUMPDEST PUSH3 0x1D7 PUSH3 0x1CE DUP3 PUSH3 0x1AB JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x11D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x1ED PUSH3 0x1DF JUMP JUMPDEST PUSH3 0x1FA DUP2 DUP5 DUP5 PUSH3 0x1B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x221 JUMPI PUSH3 0x215 PUSH0 DUP3 PUSH3 0x1E3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x200 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x270 JUMPI PUSH3 0x23A DUP2 PUSH3 0xF0 JUMP JUMPDEST PUSH3 0x245 DUP5 PUSH3 0x102 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x255 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x26D PUSH3 0x264 DUP6 PUSH3 0x102 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x1FF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x292 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x275 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x2AC DUP4 DUP4 PUSH3 0x281 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2C7 DUP3 PUSH3 0x58 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2E3 JUMPI PUSH3 0x2E2 PUSH3 0x62 JUMP JUMPDEST JUMPDEST PUSH3 0x2EF DUP3 SLOAD PUSH3 0xBC JUMP JUMPDEST PUSH3 0x2FC DUP3 DUP3 DUP6 PUSH3 0x225 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x332 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x31D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x329 DUP6 DUP3 PUSH3 0x29F JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x398 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x342 DUP7 PUSH3 0xF0 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x36B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x344 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x38B JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x387 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x281 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x20FD DUP1 PUSH3 0x3AE PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1FF JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x1647 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x1857 JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x190F JUMP JUMPDEST PUSH2 0x3F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x1A9A JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH2 0x5A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x5B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x33A JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x34A JUMPI POP PUSH2 0x349 DUP3 PUSH2 0x700 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x360 SWAP1 PUSH2 0x1DCD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38C SWAP1 PUSH2 0x1DCD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EF DUP5 DUP5 DUP5 DUP5 PUSH2 0x769 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3FE PUSH2 0x7EC JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x443 JUMPI POP PUSH2 0x441 DUP7 DUP3 PUSH2 0x5CB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x487 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47E SWAP3 SWAP2 SWAP1 PUSH2 0x1E0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x494 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x7F3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4E8 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DF SWAP3 SWAP2 SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x504 JUMPI PUSH2 0x503 PUSH2 0x166B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x532 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x598 JUMPI PUSH2 0x56E PUSH2 0x556 DUP3 DUP8 PUSH2 0x8E7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x569 DUP4 DUP8 PUSH2 0x8FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21B JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x581 JUMPI PUSH2 0x580 PUSH2 0x1E5A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x537 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5AF DUP5 DUP5 DUP5 DUP5 PUSH2 0x90D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5C7 PUSH2 0x5C0 PUSH2 0x7EC JUMP JUMPDEST DUP4 DUP4 PUSH2 0x9A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x662 PUSH2 0x7EC JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x6A7 JUMPI POP PUSH2 0x6A5 DUP7 DUP3 PUSH2 0x5CB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x6EB JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E2 SWAP3 SWAP2 SWAP1 PUSH2 0x1E0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F8 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xB0B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7D9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E6 PUSH0 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC11 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x863 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85A SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC11 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x97D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x974 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x989 DUP6 DUP6 PUSH2 0xCBD JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x99A PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xC11 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA12 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB7B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB72 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBEB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE2 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xBF7 DUP6 DUP6 PUSH2 0xCBD JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xC08 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xC11 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC1D DUP6 DUP6 DUP6 DUP6 PUSH2 0xCED JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCB6 JUMPI PUSH0 PUSH2 0xC59 PUSH2 0x7EC JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xCA5 JUMPI PUSH0 PUSH2 0xC78 PUSH0 DUP7 PUSH2 0x8FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC8E PUSH0 DUP7 PUSH2 0x8FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC9E DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x107D JUMP JUMPDEST POP POP PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0xCB3 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x122C JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xD37 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2E SWAP3 SWAP2 SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xD40 PUSH2 0x7EC JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xF3C JUMPI PUSH0 PUSH2 0xD61 DUP3 DUP7 PUSH2 0x8FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD77 DUP4 DUP7 PUSH2 0x8FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9A JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE46 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF2F JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF27 SWAP2 SWAP1 PUSH2 0x1F10 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xD44 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0xFF7 JUMPI PUSH0 PUSH2 0xF5A PUSH0 DUP6 PUSH2 0x8FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xF70 PUSH0 DUP6 PUSH2 0x8FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xFE8 SWAP3 SWAP2 SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1076 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x106D SWAP3 SWAP2 SWAP1 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1224 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1118 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1115 SWAP2 SWAP1 PUSH2 0x2036 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1199 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1146 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x114B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1191 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1188 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1222 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1219 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x13D3 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12C7 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12C4 SWAP2 SWAP1 PUSH2 0x2036 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1348 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x12F5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1340 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1337 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x13D1 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C8 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1415 DUP3 PUSH2 0x13EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1425 DUP2 PUSH2 0x140B JUMP JUMPDEST DUP2 EQ PUSH2 0x142F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1440 DUP2 PUSH2 0x141C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1458 DUP2 PUSH2 0x1446 JUMP JUMPDEST DUP2 EQ PUSH2 0x1462 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1473 DUP2 PUSH2 0x144F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x148F JUMPI PUSH2 0x148E PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x149C DUP6 DUP3 DUP7 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14AD DUP6 DUP3 DUP7 ADD PUSH2 0x1465 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C0 DUP2 PUSH2 0x1446 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D9 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1513 DUP2 PUSH2 0x14DF JUMP JUMPDEST DUP2 EQ PUSH2 0x151D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x152E DUP2 PUSH2 0x150A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1549 JUMPI PUSH2 0x1548 PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1556 DUP5 DUP3 DUP6 ADD PUSH2 0x1520 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1573 DUP2 PUSH2 0x155F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x158C PUSH0 DUP4 ADD DUP5 PUSH2 0x156A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A7 JUMPI PUSH2 0x15A6 PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15B4 DUP5 DUP3 DUP6 ADD PUSH2 0x1465 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15F4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15D9 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1619 DUP3 PUSH2 0x15BD JUMP JUMPDEST PUSH2 0x1623 DUP2 DUP6 PUSH2 0x15C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1633 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x163C DUP2 PUSH2 0x15FF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x165F DUP2 DUP5 PUSH2 0x160F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x16A1 DUP3 PUSH2 0x15FF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x16C0 JUMPI PUSH2 0x16BF PUSH2 0x166B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16D2 PUSH2 0x13DB JUMP JUMPDEST SWAP1 POP PUSH2 0x16DE DUP3 DUP3 PUSH2 0x1698 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16FD JUMPI PUSH2 0x16FC PUSH2 0x166B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1724 PUSH2 0x171F DUP5 PUSH2 0x16E3 JUMP JUMPDEST PUSH2 0x16C9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1747 JUMPI PUSH2 0x1746 PUSH2 0x170E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1770 JUMPI DUP1 PUSH2 0x175C DUP9 DUP3 PUSH2 0x1465 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1749 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x178E JUMPI PUSH2 0x178D PUSH2 0x1667 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x179E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1712 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x166B JUMP JUMPDEST JUMPDEST PUSH2 0x17CE DUP3 PUSH2 0x15FF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17FB PUSH2 0x17F6 DUP5 PUSH2 0x17AB JUMP JUMPDEST PUSH2 0x16C9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1817 JUMPI PUSH2 0x1816 PUSH2 0x17A7 JUMP JUMPDEST JUMPDEST PUSH2 0x1822 DUP5 DUP3 DUP6 PUSH2 0x17DB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x183E JUMPI PUSH2 0x183D PUSH2 0x1667 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x184E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x186F JUMPI PUSH2 0x186E PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x187C DUP8 DUP3 DUP9 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x189D JUMPI PUSH2 0x189C PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x18A9 DUP8 DUP3 DUP9 ADD PUSH2 0x177A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18CA JUMPI PUSH2 0x18C9 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x18D6 DUP8 DUP3 DUP9 ADD PUSH2 0x177A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F7 JUMPI PUSH2 0x18F6 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x1903 DUP8 DUP3 DUP9 ADD PUSH2 0x182A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1928 JUMPI PUSH2 0x1927 PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1935 DUP9 DUP3 DUP10 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1946 DUP9 DUP3 DUP10 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1967 JUMPI PUSH2 0x1966 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x1973 DUP9 DUP3 DUP10 ADD PUSH2 0x177A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1994 JUMPI PUSH2 0x1993 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x19A0 DUP9 DUP3 DUP10 ADD PUSH2 0x177A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19C1 JUMPI PUSH2 0x19C0 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x19CD DUP9 DUP3 DUP10 ADD PUSH2 0x182A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19F4 JUMPI PUSH2 0x19F3 PUSH2 0x166B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A17 PUSH2 0x1A12 DUP5 PUSH2 0x19DA JUMP JUMPDEST PUSH2 0x16C9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1A3A JUMPI PUSH2 0x1A39 PUSH2 0x170E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A63 JUMPI DUP1 PUSH2 0x1A4F DUP9 DUP3 PUSH2 0x1432 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A3C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A81 JUMPI PUSH2 0x1A80 PUSH2 0x1667 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A91 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A05 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB0 JUMPI PUSH2 0x1AAF PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ACD JUMPI PUSH2 0x1ACC PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x1AD9 DUP6 DUP3 DUP7 ADD PUSH2 0x1A6D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AFA JUMPI PUSH2 0x1AF9 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x1B06 DUP6 DUP3 DUP7 ADD PUSH2 0x177A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B42 DUP2 PUSH2 0x1446 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B53 DUP4 DUP4 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B75 DUP3 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x1B7F DUP2 DUP6 PUSH2 0x1B1A JUMP JUMPDEST SWAP4 POP PUSH2 0x1B8A DUP4 PUSH2 0x1B2A JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BBA JUMPI DUP2 MLOAD PUSH2 0x1BA1 DUP9 DUP3 PUSH2 0x1B48 JUMP JUMPDEST SWAP8 POP PUSH2 0x1BAC DUP4 PUSH2 0x1B5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B8D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BDF DUP2 DUP5 PUSH2 0x1B6B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BFF JUMPI PUSH2 0x1BFE PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C0C DUP8 DUP3 DUP9 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C1D DUP8 DUP3 DUP9 ADD PUSH2 0x1465 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1C2E DUP8 DUP3 DUP9 ADD PUSH2 0x1465 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C4F JUMPI PUSH2 0x1C4E PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x1C5B DUP8 DUP3 DUP9 ADD PUSH2 0x182A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1C70 DUP2 PUSH2 0x155F JUMP JUMPDEST DUP2 EQ PUSH2 0x1C7A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C8B DUP2 PUSH2 0x1C67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CA7 JUMPI PUSH2 0x1CA6 PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CB4 DUP6 DUP3 DUP7 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CC5 DUP6 DUP3 DUP7 ADD PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CE5 JUMPI PUSH2 0x1CE4 PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CF2 DUP6 DUP3 DUP7 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D03 DUP6 DUP3 DUP7 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D26 JUMPI PUSH2 0x1D25 PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D33 DUP9 DUP3 DUP10 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1D44 DUP9 DUP3 DUP10 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1D55 DUP9 DUP3 DUP10 ADD PUSH2 0x1465 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1D66 DUP9 DUP3 DUP10 ADD PUSH2 0x1465 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D87 JUMPI PUSH2 0x1D86 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x1D93 DUP9 DUP3 DUP10 ADD PUSH2 0x182A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DE4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DF7 JUMPI PUSH2 0x1DF6 PUSH2 0x1DA0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E06 DUP2 PUSH2 0x140B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E1F PUSH0 DUP4 ADD DUP6 PUSH2 0x1DFD JUMP JUMPDEST PUSH2 0x1E2C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DFD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E46 PUSH0 DUP4 ADD DUP6 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x1E53 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14B7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E9A PUSH0 DUP4 ADD DUP5 PUSH2 0x1DFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EB3 PUSH0 DUP4 ADD DUP8 PUSH2 0x1DFD JUMP JUMPDEST PUSH2 0x1EC0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x1ECD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x1EDA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14B7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F1A DUP3 PUSH2 0x1446 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F25 DUP4 PUSH2 0x1446 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F3D JUMPI PUSH2 0x1F3C PUSH2 0x1EE3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F5B DUP2 DUP6 PUSH2 0x1B6B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1F6F DUP2 DUP5 PUSH2 0x1B6B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9C DUP3 PUSH2 0x1F78 JUMP JUMPDEST PUSH2 0x1FA6 DUP2 DUP6 PUSH2 0x1F82 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FB6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x1FBF DUP2 PUSH2 0x15FF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1FDD PUSH0 DUP4 ADD DUP9 PUSH2 0x1DFD JUMP JUMPDEST PUSH2 0x1FEA PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1DFD JUMP JUMPDEST PUSH2 0x1FF7 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x2004 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x14B7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2016 DUP2 DUP5 PUSH2 0x1F92 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2030 DUP2 PUSH2 0x150A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x204B JUMPI PUSH2 0x204A PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2058 DUP5 DUP3 DUP6 ADD PUSH2 0x2022 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2074 PUSH0 DUP4 ADD DUP9 PUSH2 0x1DFD JUMP JUMPDEST PUSH2 0x2081 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1DFD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2093 DUP2 DUP7 PUSH2 0x1B6B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x20A7 DUP2 DUP6 PUSH2 0x1B6B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x20BB DUP2 DUP5 PUSH2 0x1F92 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER GAS ISZERO 0xD9 SAR SELFDESTRUCT CALLCODE GASPRICE JUMP 0xAF 0xE7 EXP 0xA6 0xC4 XOR 0xD1 PUSH5 0x27B85E71BE 0x49 PUSH1 0xE9 0x4C 0xE4 PUSH32 0xF39DDAC664736F6C6343000816003368747470733A2F2F6D796170692E636F6D 0x2F PUSH2 0x7069 0x2F PUSH21 0x6F6B656E2F7B69647D2E6A736F6E00000000000000 ",
							"sourceMap": "177:424:0:-:0;;;219:65;;;;;;;;;;1251:62:2;;;;;;;;;;;;;;;;;1293:13;1301:4;1293:7;;;:13;;:::i;:::-;1251:62;177:424:0;;10282:86:2;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;7:99:12:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;177:424:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_1239": {
									"entryPoint": 3261,
									"id": 1239,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_doSafeBatchTransferAcceptanceCheck_1223": {
									"entryPoint": 4652,
									"id": 1223,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1153": {
									"entryPoint": 4221,
									"id": 1153,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mintBatch_956": {
									"entryPoint": 1897,
									"id": 956,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_915": {
									"entryPoint": 2317,
									"id": 915,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1616": {
									"entryPoint": 2028,
									"id": 1616,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_852": {
									"entryPoint": 2035,
									"id": 852,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_797": {
									"entryPoint": 2827,
									"id": 797,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1085": {
									"entryPoint": 2466,
									"id": 1085,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_731": {
									"entryPoint": 3089,
									"id": 731,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_655": {
									"entryPoint": 3309,
									"id": 655,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_379": {
									"entryPoint": 1180,
									"id": 379,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_309": {
									"entryPoint": 539,
									"id": 309,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_412": {
									"entryPoint": 1483,
									"id": 412,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintBatch_51": {
									"entryPoint": 995,
									"id": 51,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@mint_30": {
									"entryPoint": 1443,
									"id": 30,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_502": {
									"entryPoint": 1013,
									"id": 502,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_456": {
									"entryPoint": 1625,
									"id": 456,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_395": {
									"entryPoint": 1461,
									"id": 395,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1759": {
									"entryPoint": 1792,
									"id": 1759,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_281": {
									"entryPoint": 624,
									"id": 281,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1590": {
									"entryPoint": 2298,
									"id": 1590,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1603": {
									"entryPoint": 2279,
									"id": 1603,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_292": {
									"entryPoint": 849,
									"id": 292,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6661,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5906,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6121,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 6415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 6231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 7692,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8289,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8138,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7840,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8003,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7731,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5083,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6107,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5591,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 7907,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7584,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7770,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5739,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5902,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6055,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5096,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5092,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25340:12",
										"nodeType": "YulBlock",
										"src": "0:25340:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "748:87:12",
													"nodeType": "YulBlock",
													"src": "748:87:12",
													"statements": [
														{
															"nativeSrc": "758:29:12",
															"nodeType": "YulAssignment",
															"src": "758:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:12"
																},
																"nativeSrc": "767:20:12",
																"nodeType": "YulFunctionCall",
																"src": "767:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:12"
																},
																"nativeSrc": "796:33:12",
																"nodeType": "YulFunctionCall",
																"src": "796:33:12"
															},
															"nativeSrc": "796:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:12",
														"nodeType": "YulTypedName",
														"src": "726:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:12",
														"nodeType": "YulTypedName",
														"src": "734:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:12",
														"nodeType": "YulTypedName",
														"src": "742:5:12",
														"type": ""
													}
												],
												"src": "696:139:12"
											},
											{
												"body": {
													"nativeSrc": "886:32:12",
													"nodeType": "YulBlock",
													"src": "886:32:12",
													"statements": [
														{
															"nativeSrc": "896:16:12",
															"nodeType": "YulAssignment",
															"src": "896:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:12",
																"nodeType": "YulIdentifier",
																"src": "907:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:12",
														"nodeType": "YulTypedName",
														"src": "868:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:12",
														"nodeType": "YulTypedName",
														"src": "878:7:12",
														"type": ""
													}
												],
												"src": "841:77:12"
											},
											{
												"body": {
													"nativeSrc": "967:79:12",
													"nodeType": "YulBlock",
													"src": "967:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:12",
																"nodeType": "YulBlock",
																"src": "1024:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:12"
																			},
																			"nativeSrc": "1026:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:12"
																		},
																		"nativeSrc": "1026:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:12"
																				},
																				"nativeSrc": "997:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:12"
																		},
																		"nativeSrc": "987:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:12"
																},
																"nativeSrc": "980:43:12",
																"nodeType": "YulFunctionCall",
																"src": "980:43:12"
															},
															"nativeSrc": "977:63:12",
															"nodeType": "YulIf",
															"src": "977:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:12",
														"nodeType": "YulTypedName",
														"src": "960:5:12",
														"type": ""
													}
												],
												"src": "924:122:12"
											},
											{
												"body": {
													"nativeSrc": "1104:87:12",
													"nodeType": "YulBlock",
													"src": "1104:87:12",
													"statements": [
														{
															"nativeSrc": "1114:29:12",
															"nodeType": "YulAssignment",
															"src": "1114:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:12"
																},
																"nativeSrc": "1123:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:12"
																},
																"nativeSrc": "1152:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:12"
															},
															"nativeSrc": "1152:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:12",
														"nodeType": "YulTypedName",
														"src": "1082:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:12",
														"nodeType": "YulTypedName",
														"src": "1090:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:12",
														"nodeType": "YulTypedName",
														"src": "1098:5:12",
														"type": ""
													}
												],
												"src": "1052:139:12"
											},
											{
												"body": {
													"nativeSrc": "1280:391:12",
													"nodeType": "YulBlock",
													"src": "1280:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:12",
																"nodeType": "YulBlock",
																"src": "1326:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:12"
																			},
																			"nativeSrc": "1328:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:12"
																		},
																		"nativeSrc": "1328:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:12"
																		},
																		"nativeSrc": "1297:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:12"
																},
																"nativeSrc": "1293:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:12"
															},
															"nativeSrc": "1290:119:12",
															"nodeType": "YulIf",
															"src": "1290:119:12"
														},
														{
															"nativeSrc": "1419:117:12",
															"nodeType": "YulBlock",
															"src": "1419:117:12",
															"statements": [
																{
																	"nativeSrc": "1434:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:12",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:12"
																				},
																				"nativeSrc": "1494:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:12"
																		},
																		"nativeSrc": "1473:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:12",
															"nodeType": "YulBlock",
															"src": "1546:118:12",
															"statements": [
																{
																	"nativeSrc": "1561:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:12",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:12"
																				},
																				"nativeSrc": "1622:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:12"
																		},
																		"nativeSrc": "1601:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:12",
														"nodeType": "YulTypedName",
														"src": "1242:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:12",
														"nodeType": "YulTypedName",
														"src": "1253:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:12",
														"nodeType": "YulTypedName",
														"src": "1265:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:12",
														"nodeType": "YulTypedName",
														"src": "1273:6:12",
														"type": ""
													}
												],
												"src": "1197:474:12"
											},
											{
												"body": {
													"nativeSrc": "1742:53:12",
													"nodeType": "YulBlock",
													"src": "1742:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1764:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:12"
																		},
																		"nativeSrc": "1764:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:12"
																},
																"nativeSrc": "1752:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:12"
															},
															"nativeSrc": "1752:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1677:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:12",
														"nodeType": "YulTypedName",
														"src": "1730:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:12",
														"nodeType": "YulTypedName",
														"src": "1737:3:12",
														"type": ""
													}
												],
												"src": "1677:118:12"
											},
											{
												"body": {
													"nativeSrc": "1899:124:12",
													"nodeType": "YulBlock",
													"src": "1899:124:12",
													"statements": [
														{
															"nativeSrc": "1909:26:12",
															"nodeType": "YulAssignment",
															"src": "1909:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1921:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1932:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1917:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:12"
																},
																"nativeSrc": "1917:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1917:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1909:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1989:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:12"
																		},
																		"nativeSrc": "1998:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1945:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:12"
																},
																"nativeSrc": "1945:71:12",
																"nodeType": "YulFunctionCall",
																"src": "1945:71:12"
															},
															"nativeSrc": "1945:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1801:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1871:9:12",
														"nodeType": "YulTypedName",
														"src": "1871:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1883:6:12",
														"nodeType": "YulTypedName",
														"src": "1883:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1894:4:12",
														"nodeType": "YulTypedName",
														"src": "1894:4:12",
														"type": ""
													}
												],
												"src": "1801:222:12"
											},
											{
												"body": {
													"nativeSrc": "2073:105:12",
													"nodeType": "YulBlock",
													"src": "2073:105:12",
													"statements": [
														{
															"nativeSrc": "2083:89:12",
															"nodeType": "YulAssignment",
															"src": "2083:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2098:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2105:66:12",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2094:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:12"
																},
																"nativeSrc": "2094:78:12",
																"nodeType": "YulFunctionCall",
																"src": "2094:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2083:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "2029:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2055:5:12",
														"nodeType": "YulTypedName",
														"src": "2055:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2065:7:12",
														"nodeType": "YulTypedName",
														"src": "2065:7:12",
														"type": ""
													}
												],
												"src": "2029:149:12"
											},
											{
												"body": {
													"nativeSrc": "2226:78:12",
													"nodeType": "YulBlock",
													"src": "2226:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2282:16:12",
																"nodeType": "YulBlock",
																"src": "2282:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2291:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2294:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2284:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:12"
																			},
																			"nativeSrc": "2284:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:12"
																		},
																		"nativeSrc": "2284:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2249:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2273:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "2256:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:12"
																				},
																				"nativeSrc": "2256:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2246:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:12"
																		},
																		"nativeSrc": "2246:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2239:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:12"
																},
																"nativeSrc": "2239:42:12",
																"nodeType": "YulFunctionCall",
																"src": "2239:42:12"
															},
															"nativeSrc": "2236:62:12",
															"nodeType": "YulIf",
															"src": "2236:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "2184:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2219:5:12",
														"nodeType": "YulTypedName",
														"src": "2219:5:12",
														"type": ""
													}
												],
												"src": "2184:120:12"
											},
											{
												"body": {
													"nativeSrc": "2361:86:12",
													"nodeType": "YulBlock",
													"src": "2361:86:12",
													"statements": [
														{
															"nativeSrc": "2371:29:12",
															"nodeType": "YulAssignment",
															"src": "2371:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2393:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2380:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:12"
																},
																"nativeSrc": "2380:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2380:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2371:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2435:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "2409:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:12"
																},
																"nativeSrc": "2409:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2409:32:12"
															},
															"nativeSrc": "2409:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "2310:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2339:6:12",
														"nodeType": "YulTypedName",
														"src": "2339:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:12",
														"nodeType": "YulTypedName",
														"src": "2347:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2355:5:12",
														"nodeType": "YulTypedName",
														"src": "2355:5:12",
														"type": ""
													}
												],
												"src": "2310:137:12"
											},
											{
												"body": {
													"nativeSrc": "2518:262:12",
													"nodeType": "YulBlock",
													"src": "2518:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2564:83:12",
																"nodeType": "YulBlock",
																"src": "2564:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2566:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:12"
																			},
																			"nativeSrc": "2566:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:12"
																		},
																		"nativeSrc": "2566:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2539:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2548:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2535:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:12"
																		},
																		"nativeSrc": "2535:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2560:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2531:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:12"
																},
																"nativeSrc": "2531:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2531:32:12"
															},
															"nativeSrc": "2528:119:12",
															"nodeType": "YulIf",
															"src": "2528:119:12"
														},
														{
															"nativeSrc": "2657:116:12",
															"nodeType": "YulBlock",
															"src": "2657:116:12",
															"statements": [
																{
																	"nativeSrc": "2672:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2686:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2676:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2701:62:12",
																	"nodeType": "YulAssignment",
																	"src": "2701:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2735:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2746:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2731:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:12"
																				},
																				"nativeSrc": "2731:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2755:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "2711:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:12"
																		},
																		"nativeSrc": "2711:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2701:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "2453:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2488:9:12",
														"nodeType": "YulTypedName",
														"src": "2488:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2499:7:12",
														"nodeType": "YulTypedName",
														"src": "2499:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2511:6:12",
														"nodeType": "YulTypedName",
														"src": "2511:6:12",
														"type": ""
													}
												],
												"src": "2453:327:12"
											},
											{
												"body": {
													"nativeSrc": "2828:48:12",
													"nodeType": "YulBlock",
													"src": "2828:48:12",
													"statements": [
														{
															"nativeSrc": "2838:32:12",
															"nodeType": "YulAssignment",
															"src": "2838:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2863:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2856:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:12"
																		},
																		"nativeSrc": "2856:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2849:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:12"
																},
																"nativeSrc": "2849:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2849:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2838:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2786:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2810:5:12",
														"nodeType": "YulTypedName",
														"src": "2810:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2820:7:12",
														"nodeType": "YulTypedName",
														"src": "2820:7:12",
														"type": ""
													}
												],
												"src": "2786:90:12"
											},
											{
												"body": {
													"nativeSrc": "2941:50:12",
													"nodeType": "YulBlock",
													"src": "2941:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2958:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2978:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2963:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:12"
																		},
																		"nativeSrc": "2963:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2951:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:12"
																},
																"nativeSrc": "2951:34:12",
																"nodeType": "YulFunctionCall",
																"src": "2951:34:12"
															},
															"nativeSrc": "2951:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2882:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2929:5:12",
														"nodeType": "YulTypedName",
														"src": "2929:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2936:3:12",
														"nodeType": "YulTypedName",
														"src": "2936:3:12",
														"type": ""
													}
												],
												"src": "2882:109:12"
											},
											{
												"body": {
													"nativeSrc": "3089:118:12",
													"nodeType": "YulBlock",
													"src": "3089:118:12",
													"statements": [
														{
															"nativeSrc": "3099:26:12",
															"nodeType": "YulAssignment",
															"src": "3099:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3111:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3107:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:12"
																},
																"nativeSrc": "3107:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3107:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3099:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3173:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3186:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3197:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3182:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:12"
																		},
																		"nativeSrc": "3182:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3135:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:12"
																},
																"nativeSrc": "3135:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3135:65:12"
															},
															"nativeSrc": "3135:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2997:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3061:9:12",
														"nodeType": "YulTypedName",
														"src": "3061:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3073:6:12",
														"nodeType": "YulTypedName",
														"src": "3073:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3084:4:12",
														"nodeType": "YulTypedName",
														"src": "3084:4:12",
														"type": ""
													}
												],
												"src": "2997:210:12"
											},
											{
												"body": {
													"nativeSrc": "3279:263:12",
													"nodeType": "YulBlock",
													"src": "3279:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3325:83:12",
																"nodeType": "YulBlock",
																"src": "3325:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3327:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:12"
																			},
																			"nativeSrc": "3327:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:12"
																		},
																		"nativeSrc": "3327:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3300:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3309:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3296:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:12"
																		},
																		"nativeSrc": "3296:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3292:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:12"
																},
																"nativeSrc": "3292:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3292:32:12"
															},
															"nativeSrc": "3289:119:12",
															"nodeType": "YulIf",
															"src": "3289:119:12"
														},
														{
															"nativeSrc": "3418:117:12",
															"nodeType": "YulBlock",
															"src": "3418:117:12",
															"statements": [
																{
																	"nativeSrc": "3433:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3447:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3437:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:12"
																				},
																				"nativeSrc": "3493:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3472:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:12"
																		},
																		"nativeSrc": "3472:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3462:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3213:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3249:9:12",
														"nodeType": "YulTypedName",
														"src": "3249:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3260:7:12",
														"nodeType": "YulTypedName",
														"src": "3260:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3272:6:12",
														"nodeType": "YulTypedName",
														"src": "3272:6:12",
														"type": ""
													}
												],
												"src": "3213:329:12"
											},
											{
												"body": {
													"nativeSrc": "3607:40:12",
													"nodeType": "YulBlock",
													"src": "3607:40:12",
													"statements": [
														{
															"nativeSrc": "3618:22:12",
															"nodeType": "YulAssignment",
															"src": "3618:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3634:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3628:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:12"
																},
																"nativeSrc": "3628:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3628:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3618:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3548:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3590:5:12",
														"nodeType": "YulTypedName",
														"src": "3590:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3600:6:12",
														"nodeType": "YulTypedName",
														"src": "3600:6:12",
														"type": ""
													}
												],
												"src": "3548:99:12"
											},
											{
												"body": {
													"nativeSrc": "3749:73:12",
													"nodeType": "YulBlock",
													"src": "3749:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3766:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3771:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3771:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3759:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:12"
																},
																"nativeSrc": "3759:19:12",
																"nodeType": "YulFunctionCall",
																"src": "3759:19:12"
															},
															"nativeSrc": "3759:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "3759:19:12"
														},
														{
															"nativeSrc": "3787:29:12",
															"nodeType": "YulAssignment",
															"src": "3787:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3806:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3806:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3811:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3802:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:12"
																},
																"nativeSrc": "3802:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3802:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3787:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "3787:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3653:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3721:3:12",
														"nodeType": "YulTypedName",
														"src": "3721:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3726:6:12",
														"nodeType": "YulTypedName",
														"src": "3726:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3737:11:12",
														"nodeType": "YulTypedName",
														"src": "3737:11:12",
														"type": ""
													}
												],
												"src": "3653:169:12"
											},
											{
												"body": {
													"nativeSrc": "3890:184:12",
													"nodeType": "YulBlock",
													"src": "3890:184:12",
													"statements": [
														{
															"nativeSrc": "3900:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3900:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3909:1:12",
																"nodeType": "YulLiteral",
																"src": "3909:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3904:1:12",
																	"nodeType": "YulTypedName",
																	"src": "3904:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3969:63:12",
																"nodeType": "YulBlock",
																"src": "3969:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "3994:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "3994:3:12"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "3999:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "3999:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3990:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3990:3:12"
																					},
																					"nativeSrc": "3990:11:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3990:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "4013:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4013:3:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "4018:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "4018:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4009:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4009:3:12"
																							},
																							"nativeSrc": "4009:11:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4009:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4003:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4003:5:12"
																					},
																					"nativeSrc": "4003:18:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4003:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3983:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3983:6:12"
																			},
																			"nativeSrc": "3983:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3983:39:12"
																		},
																		"nativeSrc": "3983:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3983:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3930:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "3930:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3933:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3933:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3927:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3927:2:12"
																},
																"nativeSrc": "3927:13:12",
																"nodeType": "YulFunctionCall",
																"src": "3927:13:12"
															},
															"nativeSrc": "3919:113:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3941:19:12",
																"nodeType": "YulBlock",
																"src": "3941:19:12",
																"statements": [
																	{
																		"nativeSrc": "3943:15:12",
																		"nodeType": "YulAssignment",
																		"src": "3943:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3952:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "3952:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3955:2:12",
																					"nodeType": "YulLiteral",
																					"src": "3955:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3948:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3948:3:12"
																			},
																			"nativeSrc": "3948:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3948:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3943:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "3943:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3923:3:12",
																"nodeType": "YulBlock",
																"src": "3923:3:12",
																"statements": []
															},
															"src": "3919:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4052:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4052:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4057:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4057:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4048:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4048:3:12"
																		},
																		"nativeSrc": "4048:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4048:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4066:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4041:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4041:6:12"
																},
																"nativeSrc": "4041:27:12",
																"nodeType": "YulFunctionCall",
																"src": "4041:27:12"
															},
															"nativeSrc": "4041:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "4041:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3828:246:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3872:3:12",
														"nodeType": "YulTypedName",
														"src": "3872:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3877:3:12",
														"nodeType": "YulTypedName",
														"src": "3877:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3882:6:12",
														"nodeType": "YulTypedName",
														"src": "3882:6:12",
														"type": ""
													}
												],
												"src": "3828:246:12"
											},
											{
												"body": {
													"nativeSrc": "4128:54:12",
													"nodeType": "YulBlock",
													"src": "4128:54:12",
													"statements": [
														{
															"nativeSrc": "4138:38:12",
															"nodeType": "YulAssignment",
															"src": "4138:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4156:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4156:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4163:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4163:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4152:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4152:3:12"
																		},
																		"nativeSrc": "4152:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4152:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4172:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4172:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4168:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:12"
																		},
																		"nativeSrc": "4168:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4168:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4148:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4148:3:12"
																},
																"nativeSrc": "4148:28:12",
																"nodeType": "YulFunctionCall",
																"src": "4148:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4138:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4138:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "4080:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4111:5:12",
														"nodeType": "YulTypedName",
														"src": "4111:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4121:6:12",
														"nodeType": "YulTypedName",
														"src": "4121:6:12",
														"type": ""
													}
												],
												"src": "4080:102:12"
											},
											{
												"body": {
													"nativeSrc": "4280:285:12",
													"nodeType": "YulBlock",
													"src": "4280:285:12",
													"statements": [
														{
															"nativeSrc": "4290:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4290:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4337:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4337:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4304:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "4304:32:12"
																},
																"nativeSrc": "4304:39:12",
																"nodeType": "YulFunctionCall",
																"src": "4304:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4294:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4294:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4352:78:12",
															"nodeType": "YulAssignment",
															"src": "4352:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4418:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4418:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4423:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4423:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4359:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "4359:58:12"
																},
																"nativeSrc": "4359:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4359:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4352:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4352:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4478:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4478:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4485:4:12",
																				"nodeType": "YulLiteral",
																				"src": "4485:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4474:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4474:3:12"
																		},
																		"nativeSrc": "4474:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4474:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4492:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4492:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4497:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4497:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4439:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "4439:34:12"
																},
																"nativeSrc": "4439:65:12",
																"nodeType": "YulFunctionCall",
																"src": "4439:65:12"
															},
															"nativeSrc": "4439:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "4439:65:12"
														},
														{
															"nativeSrc": "4513:46:12",
															"nodeType": "YulAssignment",
															"src": "4513:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4524:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4524:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4551:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4551:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4529:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "4529:21:12"
																		},
																		"nativeSrc": "4529:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4529:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4520:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4520:3:12"
																},
																"nativeSrc": "4520:39:12",
																"nodeType": "YulFunctionCall",
																"src": "4520:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4513:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4513:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4188:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4261:5:12",
														"nodeType": "YulTypedName",
														"src": "4261:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4268:3:12",
														"nodeType": "YulTypedName",
														"src": "4268:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4276:3:12",
														"nodeType": "YulTypedName",
														"src": "4276:3:12",
														"type": ""
													}
												],
												"src": "4188:377:12"
											},
											{
												"body": {
													"nativeSrc": "4689:195:12",
													"nodeType": "YulBlock",
													"src": "4689:195:12",
													"statements": [
														{
															"nativeSrc": "4699:26:12",
															"nodeType": "YulAssignment",
															"src": "4699:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4711:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4711:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4722:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4722:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4707:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:12"
																},
																"nativeSrc": "4707:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4707:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4699:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4699:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4746:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4746:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4757:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4757:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4742:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4742:3:12"
																		},
																		"nativeSrc": "4742:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4742:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4765:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4765:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4771:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4771:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4761:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:12"
																		},
																		"nativeSrc": "4761:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4761:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4735:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4735:6:12"
																},
																"nativeSrc": "4735:47:12",
																"nodeType": "YulFunctionCall",
																"src": "4735:47:12"
															},
															"nativeSrc": "4735:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "4735:47:12"
														},
														{
															"nativeSrc": "4791:86:12",
															"nodeType": "YulAssignment",
															"src": "4791:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4863:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4863:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4872:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4872:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4799:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "4799:63:12"
																},
																"nativeSrc": "4799:78:12",
																"nodeType": "YulFunctionCall",
																"src": "4799:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4791:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4791:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4571:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4661:9:12",
														"nodeType": "YulTypedName",
														"src": "4661:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4673:6:12",
														"nodeType": "YulTypedName",
														"src": "4673:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4684:4:12",
														"nodeType": "YulTypedName",
														"src": "4684:4:12",
														"type": ""
													}
												],
												"src": "4571:313:12"
											},
											{
												"body": {
													"nativeSrc": "4979:28:12",
													"nodeType": "YulBlock",
													"src": "4979:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4996:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4999:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4999:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4989:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4989:6:12"
																},
																"nativeSrc": "4989:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4989:12:12"
															},
															"nativeSrc": "4989:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "4989:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4890:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4890:117:12"
											},
											{
												"body": {
													"nativeSrc": "5041:152:12",
													"nodeType": "YulBlock",
													"src": "5041:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5058:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5058:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5061:77:12",
																		"nodeType": "YulLiteral",
																		"src": "5061:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5051:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5051:6:12"
																},
																"nativeSrc": "5051:88:12",
																"nodeType": "YulFunctionCall",
																"src": "5051:88:12"
															},
															"nativeSrc": "5051:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "5051:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5155:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5155:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5158:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5158:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5148:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5148:6:12"
																},
																"nativeSrc": "5148:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5148:15:12"
															},
															"nativeSrc": "5148:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5148:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5179:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5179:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5182:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5182:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5172:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5172:6:12"
																},
																"nativeSrc": "5172:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5172:15:12"
															},
															"nativeSrc": "5172:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5172:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5013:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "5013:180:12"
											},
											{
												"body": {
													"nativeSrc": "5242:238:12",
													"nodeType": "YulBlock",
													"src": "5242:238:12",
													"statements": [
														{
															"nativeSrc": "5252:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5252:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5274:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5274:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5304:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5304:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5282:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "5282:21:12"
																		},
																		"nativeSrc": "5282:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5282:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5270:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5270:3:12"
																},
																"nativeSrc": "5270:40:12",
																"nodeType": "YulFunctionCall",
																"src": "5270:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5256:10:12",
																	"nodeType": "YulTypedName",
																	"src": "5256:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5421:22:12",
																"nodeType": "YulBlock",
																"src": "5421:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5423:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5423:16:12"
																			},
																			"nativeSrc": "5423:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5423:18:12"
																		},
																		"nativeSrc": "5423:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5423:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5364:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "5364:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5376:18:12",
																				"nodeType": "YulLiteral",
																				"src": "5376:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5361:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5361:2:12"
																		},
																		"nativeSrc": "5361:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5361:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5400:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "5400:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5412:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5412:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5397:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5397:2:12"
																		},
																		"nativeSrc": "5397:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5397:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5358:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5358:2:12"
																},
																"nativeSrc": "5358:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5358:62:12"
															},
															"nativeSrc": "5355:88:12",
															"nodeType": "YulIf",
															"src": "5355:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5459:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5459:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5463:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "5463:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5452:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5452:6:12"
																},
																"nativeSrc": "5452:22:12",
																"nodeType": "YulFunctionCall",
																"src": "5452:22:12"
															},
															"nativeSrc": "5452:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "5452:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5199:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5228:6:12",
														"nodeType": "YulTypedName",
														"src": "5228:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5236:4:12",
														"nodeType": "YulTypedName",
														"src": "5236:4:12",
														"type": ""
													}
												],
												"src": "5199:281:12"
											},
											{
												"body": {
													"nativeSrc": "5527:88:12",
													"nodeType": "YulBlock",
													"src": "5527:88:12",
													"statements": [
														{
															"nativeSrc": "5537:30:12",
															"nodeType": "YulAssignment",
															"src": "5537:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5547:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5547:18:12"
																},
																"nativeSrc": "5547:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5547:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5537:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5596:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5596:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5604:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5604:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5576:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "5576:19:12"
																},
																"nativeSrc": "5576:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5576:33:12"
															},
															"nativeSrc": "5576:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "5576:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5486:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5511:4:12",
														"nodeType": "YulTypedName",
														"src": "5511:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5520:6:12",
														"nodeType": "YulTypedName",
														"src": "5520:6:12",
														"type": ""
													}
												],
												"src": "5486:129:12"
											},
											{
												"body": {
													"nativeSrc": "5703:229:12",
													"nodeType": "YulBlock",
													"src": "5703:229:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5808:22:12",
																"nodeType": "YulBlock",
																"src": "5808:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5810:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5810:16:12"
																			},
																			"nativeSrc": "5810:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5810:18:12"
																		},
																		"nativeSrc": "5810:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5810:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5780:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5788:18:12",
																		"nodeType": "YulLiteral",
																		"src": "5788:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5777:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5777:2:12"
																},
																"nativeSrc": "5777:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5777:30:12"
															},
															"nativeSrc": "5774:56:12",
															"nodeType": "YulIf",
															"src": "5774:56:12"
														},
														{
															"nativeSrc": "5840:25:12",
															"nodeType": "YulAssignment",
															"src": "5840:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5852:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5852:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5860:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5860:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5848:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5848:3:12"
																},
																"nativeSrc": "5848:17:12",
																"nodeType": "YulFunctionCall",
																"src": "5848:17:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5840:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5840:4:12"
																}
															]
														},
														{
															"nativeSrc": "5902:23:12",
															"nodeType": "YulAssignment",
															"src": "5902:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5914:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5914:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5920:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5920:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5910:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5910:3:12"
																},
																"nativeSrc": "5910:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5910:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5902:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5902:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5621:311:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5687:6:12",
														"nodeType": "YulTypedName",
														"src": "5687:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5698:4:12",
														"nodeType": "YulTypedName",
														"src": "5698:4:12",
														"type": ""
													}
												],
												"src": "5621:311:12"
											},
											{
												"body": {
													"nativeSrc": "6027:28:12",
													"nodeType": "YulBlock",
													"src": "6027:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6044:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6044:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6047:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6047:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6037:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6037:6:12"
																},
																"nativeSrc": "6037:12:12",
																"nodeType": "YulFunctionCall",
																"src": "6037:12:12"
															},
															"nativeSrc": "6037:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "6037:12:12"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "5938:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "5938:117:12"
											},
											{
												"body": {
													"nativeSrc": "6180:608:12",
													"nodeType": "YulBlock",
													"src": "6180:608:12",
													"statements": [
														{
															"nativeSrc": "6190:90:12",
															"nodeType": "YulAssignment",
															"src": "6190:90:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6272:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6272:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "6215:56:12",
																			"nodeType": "YulIdentifier",
																			"src": "6215:56:12"
																		},
																		"nativeSrc": "6215:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6215:64:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6199:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "6199:15:12"
																},
																"nativeSrc": "6199:81:12",
																"nodeType": "YulFunctionCall",
																"src": "6199:81:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6190:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6190:5:12"
																}
															]
														},
														{
															"nativeSrc": "6289:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6289:16:12",
															"value": {
																"name": "array",
																"nativeSrc": "6300:5:12",
																"nodeType": "YulIdentifier",
																"src": "6300:5:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6293:3:12",
																	"nodeType": "YulTypedName",
																	"src": "6293:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6322:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6322:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6329:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6329:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6315:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:12"
																},
																"nativeSrc": "6315:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6315:21:12"
															},
															"nativeSrc": "6315:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6315:21:12"
														},
														{
															"nativeSrc": "6345:23:12",
															"nodeType": "YulAssignment",
															"src": "6345:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6356:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6356:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6363:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6363:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6352:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6352:3:12"
																},
																"nativeSrc": "6352:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6352:16:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "6345:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6345:3:12"
																}
															]
														},
														{
															"nativeSrc": "6378:44:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6378:44:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6396:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6396:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6408:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6408:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6416:4:12",
																				"nodeType": "YulLiteral",
																				"src": "6416:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6404:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6404:3:12"
																		},
																		"nativeSrc": "6404:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6404:17:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6392:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6392:3:12"
																},
																"nativeSrc": "6392:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6392:30:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6382:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6382:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6450:103:12",
																"nodeType": "YulBlock",
																"src": "6450:103:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "6464:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6464:77:12"
																			},
																			"nativeSrc": "6464:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6464:79:12"
																		},
																		"nativeSrc": "6464:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6464:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6437:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6437:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6445:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6445:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6434:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6434:2:12"
																},
																"nativeSrc": "6434:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6434:15:12"
															},
															"nativeSrc": "6431:122:12",
															"nodeType": "YulIf",
															"src": "6431:122:12"
														},
														{
															"body": {
																"nativeSrc": "6638:144:12",
																"nodeType": "YulBlock",
																"src": "6638:144:12",
																"statements": [
																	{
																		"nativeSrc": "6653:21:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6653:21:12",
																		"value": {
																			"name": "src",
																			"nativeSrc": "6671:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6671:3:12"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "6657:10:12",
																				"nodeType": "YulTypedName",
																				"src": "6657:10:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6695:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6695:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "6721:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "6721:10:12"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "6733:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6733:3:12"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "6700:20:12",
																						"nodeType": "YulIdentifier",
																						"src": "6700:20:12"
																					},
																					"nativeSrc": "6700:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6700:37:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6688:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6688:6:12"
																			},
																			"nativeSrc": "6688:50:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6688:50:12"
																		},
																		"nativeSrc": "6688:50:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6688:50:12"
																	},
																	{
																		"nativeSrc": "6751:21:12",
																		"nodeType": "YulAssignment",
																		"src": "6751:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6762:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6762:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6767:4:12",
																					"nodeType": "YulLiteral",
																					"src": "6767:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6758:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6758:3:12"
																			},
																			"nativeSrc": "6758:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6758:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "6751:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6751:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6591:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6591:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6596:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6596:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6588:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6588:2:12"
																},
																"nativeSrc": "6588:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6588:15:12"
															},
															"nativeSrc": "6562:220:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6604:25:12",
																"nodeType": "YulBlock",
																"src": "6604:25:12",
																"statements": [
																	{
																		"nativeSrc": "6606:21:12",
																		"nodeType": "YulAssignment",
																		"src": "6606:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "6617:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6617:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6622:4:12",
																					"nodeType": "YulLiteral",
																					"src": "6622:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6613:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6613:3:12"
																			},
																			"nativeSrc": "6613:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6613:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "6606:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6606:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6566:21:12",
																"nodeType": "YulBlock",
																"src": "6566:21:12",
																"statements": [
																	{
																		"nativeSrc": "6568:17:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6568:17:12",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "6579:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6579:6:12"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "6572:3:12",
																				"nodeType": "YulTypedName",
																				"src": "6572:3:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6562:220:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6078:710:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6150:6:12",
														"nodeType": "YulTypedName",
														"src": "6150:6:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6158:6:12",
														"nodeType": "YulTypedName",
														"src": "6158:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6166:3:12",
														"nodeType": "YulTypedName",
														"src": "6166:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6174:5:12",
														"nodeType": "YulTypedName",
														"src": "6174:5:12",
														"type": ""
													}
												],
												"src": "6078:710:12"
											},
											{
												"body": {
													"nativeSrc": "6888:293:12",
													"nodeType": "YulBlock",
													"src": "6888:293:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6937:83:12",
																"nodeType": "YulBlock",
																"src": "6937:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6939:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6939:77:12"
																			},
																			"nativeSrc": "6939:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6939:79:12"
																		},
																		"nativeSrc": "6939:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6939:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6916:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6916:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6924:4:12",
																						"nodeType": "YulLiteral",
																						"src": "6924:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6912:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6912:3:12"
																				},
																				"nativeSrc": "6912:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6912:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6931:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6931:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6908:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6908:3:12"
																		},
																		"nativeSrc": "6908:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6908:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6901:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6901:6:12"
																},
																"nativeSrc": "6901:35:12",
																"nodeType": "YulFunctionCall",
																"src": "6901:35:12"
															},
															"nativeSrc": "6898:122:12",
															"nodeType": "YulIf",
															"src": "6898:122:12"
														},
														{
															"nativeSrc": "7029:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7029:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7056:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7056:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7043:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "7043:12:12"
																},
																"nativeSrc": "7043:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7043:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7033:6:12",
																	"nodeType": "YulTypedName",
																	"src": "7033:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7072:103:12",
															"nodeType": "YulAssignment",
															"src": "7072:103:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7148:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7148:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7156:4:12",
																				"nodeType": "YulLiteral",
																				"src": "7156:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7144:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7144:3:12"
																		},
																		"nativeSrc": "7144:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7144:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7163:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7163:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7171:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7171:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7081:62:12",
																	"nodeType": "YulIdentifier",
																	"src": "7081:62:12"
																},
																"nativeSrc": "7081:94:12",
																"nodeType": "YulFunctionCall",
																"src": "7081:94:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7072:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7072:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6811:370:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6866:6:12",
														"nodeType": "YulTypedName",
														"src": "6866:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6874:3:12",
														"nodeType": "YulTypedName",
														"src": "6874:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6882:5:12",
														"nodeType": "YulTypedName",
														"src": "6882:5:12",
														"type": ""
													}
												],
												"src": "6811:370:12"
											},
											{
												"body": {
													"nativeSrc": "7276:28:12",
													"nodeType": "YulBlock",
													"src": "7276:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7293:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7293:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7296:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7296:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7286:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7286:6:12"
																},
																"nativeSrc": "7286:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7286:12:12"
															},
															"nativeSrc": "7286:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "7286:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7187:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7187:117:12"
											},
											{
												"body": {
													"nativeSrc": "7376:241:12",
													"nodeType": "YulBlock",
													"src": "7376:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7481:22:12",
																"nodeType": "YulBlock",
																"src": "7481:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7483:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7483:16:12"
																			},
																			"nativeSrc": "7483:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7483:18:12"
																		},
																		"nativeSrc": "7483:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7483:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7453:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7453:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7461:18:12",
																		"nodeType": "YulLiteral",
																		"src": "7461:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7450:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7450:2:12"
																},
																"nativeSrc": "7450:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7450:30:12"
															},
															"nativeSrc": "7447:56:12",
															"nodeType": "YulIf",
															"src": "7447:56:12"
														},
														{
															"nativeSrc": "7513:37:12",
															"nodeType": "YulAssignment",
															"src": "7513:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7543:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7543:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7521:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "7521:21:12"
																},
																"nativeSrc": "7521:29:12",
																"nodeType": "YulFunctionCall",
																"src": "7521:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7513:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7513:4:12"
																}
															]
														},
														{
															"nativeSrc": "7587:23:12",
															"nodeType": "YulAssignment",
															"src": "7587:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7599:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7599:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7605:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7605:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7595:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7595:3:12"
																},
																"nativeSrc": "7595:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7595:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7587:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7587:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7310:307:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7360:6:12",
														"nodeType": "YulTypedName",
														"src": "7360:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7371:4:12",
														"nodeType": "YulTypedName",
														"src": "7371:4:12",
														"type": ""
													}
												],
												"src": "7310:307:12"
											},
											{
												"body": {
													"nativeSrc": "7687:82:12",
													"nodeType": "YulBlock",
													"src": "7687:82:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7710:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7710:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7715:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7715:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7720:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7720:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7697:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "7697:12:12"
																},
																"nativeSrc": "7697:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7697:30:12"
															},
															"nativeSrc": "7697:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7697:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7747:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7747:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7752:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7752:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7743:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:12"
																		},
																		"nativeSrc": "7743:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7743:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7761:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7761:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7736:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7736:6:12"
																},
																"nativeSrc": "7736:27:12",
																"nodeType": "YulFunctionCall",
																"src": "7736:27:12"
															},
															"nativeSrc": "7736:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "7736:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7623:146:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7669:3:12",
														"nodeType": "YulTypedName",
														"src": "7669:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7674:3:12",
														"nodeType": "YulTypedName",
														"src": "7674:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7679:6:12",
														"nodeType": "YulTypedName",
														"src": "7679:6:12",
														"type": ""
													}
												],
												"src": "7623:146:12"
											},
											{
												"body": {
													"nativeSrc": "7858:340:12",
													"nodeType": "YulBlock",
													"src": "7858:340:12",
													"statements": [
														{
															"nativeSrc": "7868:74:12",
															"nodeType": "YulAssignment",
															"src": "7868:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7934:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7934:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "7893:40:12",
																			"nodeType": "YulIdentifier",
																			"src": "7893:40:12"
																		},
																		"nativeSrc": "7893:48:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7893:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7877:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "7877:15:12"
																},
																"nativeSrc": "7877:65:12",
																"nodeType": "YulFunctionCall",
																"src": "7877:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7868:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7868:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7958:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7958:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7965:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7965:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7951:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7951:6:12"
																},
																"nativeSrc": "7951:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7951:21:12"
															},
															"nativeSrc": "7951:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "7951:21:12"
														},
														{
															"nativeSrc": "7981:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7981:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7996:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7996:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8003:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8003:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7992:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7992:3:12"
																},
																"nativeSrc": "7992:16:12",
																"nodeType": "YulFunctionCall",
																"src": "7992:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7985:3:12",
																	"nodeType": "YulTypedName",
																	"src": "7985:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8046:83:12",
																"nodeType": "YulBlock",
																"src": "8046:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8048:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8048:77:12"
																			},
																			"nativeSrc": "8048:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8048:79:12"
																		},
																		"nativeSrc": "8048:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8048:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8027:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8027:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8032:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8032:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8023:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8023:3:12"
																		},
																		"nativeSrc": "8023:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8023:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8041:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8041:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8020:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8020:2:12"
																},
																"nativeSrc": "8020:25:12",
																"nodeType": "YulFunctionCall",
																"src": "8020:25:12"
															},
															"nativeSrc": "8017:112:12",
															"nodeType": "YulIf",
															"src": "8017:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8175:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8175:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8180:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8180:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8185:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8185:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8138:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "8138:36:12"
																},
																"nativeSrc": "8138:54:12",
																"nodeType": "YulFunctionCall",
																"src": "8138:54:12"
															},
															"nativeSrc": "8138:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "8138:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "7775:423:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7831:3:12",
														"nodeType": "YulTypedName",
														"src": "7831:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7836:6:12",
														"nodeType": "YulTypedName",
														"src": "7836:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7844:3:12",
														"nodeType": "YulTypedName",
														"src": "7844:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7852:5:12",
														"nodeType": "YulTypedName",
														"src": "7852:5:12",
														"type": ""
													}
												],
												"src": "7775:423:12"
											},
											{
												"body": {
													"nativeSrc": "8278:277:12",
													"nodeType": "YulBlock",
													"src": "8278:277:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8327:83:12",
																"nodeType": "YulBlock",
																"src": "8327:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8329:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8329:77:12"
																			},
																			"nativeSrc": "8329:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8329:79:12"
																		},
																		"nativeSrc": "8329:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8329:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8306:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8306:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8314:4:12",
																						"nodeType": "YulLiteral",
																						"src": "8314:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8302:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8302:3:12"
																				},
																				"nativeSrc": "8302:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8302:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8321:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8321:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8298:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8298:3:12"
																		},
																		"nativeSrc": "8298:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8298:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8291:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8291:6:12"
																},
																"nativeSrc": "8291:35:12",
																"nodeType": "YulFunctionCall",
																"src": "8291:35:12"
															},
															"nativeSrc": "8288:122:12",
															"nodeType": "YulIf",
															"src": "8288:122:12"
														},
														{
															"nativeSrc": "8419:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8419:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8446:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8433:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "8433:12:12"
																},
																"nativeSrc": "8433:20:12",
																"nodeType": "YulFunctionCall",
																"src": "8433:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8423:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8423:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8462:87:12",
															"nodeType": "YulAssignment",
															"src": "8462:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8522:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8522:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8530:4:12",
																				"nodeType": "YulLiteral",
																				"src": "8530:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8518:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8518:3:12"
																		},
																		"nativeSrc": "8518:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8518:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8537:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8537:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8545:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8545:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8471:46:12",
																	"nodeType": "YulIdentifier",
																	"src": "8471:46:12"
																},
																"nativeSrc": "8471:78:12",
																"nodeType": "YulFunctionCall",
																"src": "8471:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8462:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8462:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8217:338:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8256:6:12",
														"nodeType": "YulTypedName",
														"src": "8256:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8264:3:12",
														"nodeType": "YulTypedName",
														"src": "8264:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8272:5:12",
														"nodeType": "YulTypedName",
														"src": "8272:5:12",
														"type": ""
													}
												],
												"src": "8217:338:12"
											},
											{
												"body": {
													"nativeSrc": "8737:1187:12",
													"nodeType": "YulBlock",
													"src": "8737:1187:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8784:83:12",
																"nodeType": "YulBlock",
																"src": "8784:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8786:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8786:77:12"
																			},
																			"nativeSrc": "8786:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8786:79:12"
																		},
																		"nativeSrc": "8786:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8786:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8758:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8758:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8767:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8767:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8754:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8754:3:12"
																		},
																		"nativeSrc": "8754:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8754:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8779:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8779:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8750:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8750:3:12"
																},
																"nativeSrc": "8750:33:12",
																"nodeType": "YulFunctionCall",
																"src": "8750:33:12"
															},
															"nativeSrc": "8747:120:12",
															"nodeType": "YulIf",
															"src": "8747:120:12"
														},
														{
															"nativeSrc": "8877:117:12",
															"nodeType": "YulBlock",
															"src": "8877:117:12",
															"statements": [
																{
																	"nativeSrc": "8892:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8892:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8906:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8906:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8896:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8896:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8921:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8921:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8956:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8956:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8967:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8967:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8952:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8952:3:12"
																				},
																				"nativeSrc": "8952:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8952:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8976:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8976:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8931:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8931:20:12"
																		},
																		"nativeSrc": "8931:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8931:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8921:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8921:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9004:303:12",
															"nodeType": "YulBlock",
															"src": "9004:303:12",
															"statements": [
																{
																	"nativeSrc": "9019:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9019:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9050:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9050:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9061:2:12",
																						"nodeType": "YulLiteral",
																						"src": "9061:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9046:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9046:3:12"
																				},
																				"nativeSrc": "9046:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9046:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9033:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "9033:12:12"
																		},
																		"nativeSrc": "9033:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9033:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9023:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9023:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9112:83:12",
																		"nodeType": "YulBlock",
																		"src": "9112:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9114:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "9114:77:12"
																					},
																					"nativeSrc": "9114:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9114:79:12"
																				},
																				"nativeSrc": "9114:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "9114:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9084:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9084:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9092:18:12",
																				"nodeType": "YulLiteral",
																				"src": "9092:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9081:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9081:2:12"
																		},
																		"nativeSrc": "9081:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9081:30:12"
																	},
																	"nativeSrc": "9078:117:12",
																	"nodeType": "YulIf",
																	"src": "9078:117:12"
																},
																{
																	"nativeSrc": "9209:88:12",
																	"nodeType": "YulAssignment",
																	"src": "9209:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9269:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9269:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9280:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9280:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9265:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9265:3:12"
																				},
																				"nativeSrc": "9265:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9265:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9289:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9289:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "9219:45:12",
																			"nodeType": "YulIdentifier",
																			"src": "9219:45:12"
																		},
																		"nativeSrc": "9219:78:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9219:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9209:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9209:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9317:303:12",
															"nodeType": "YulBlock",
															"src": "9317:303:12",
															"statements": [
																{
																	"nativeSrc": "9332:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9332:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9363:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9363:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9374:2:12",
																						"nodeType": "YulLiteral",
																						"src": "9374:2:12",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9359:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9359:3:12"
																				},
																				"nativeSrc": "9359:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9359:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9346:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "9346:12:12"
																		},
																		"nativeSrc": "9346:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9346:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9336:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9336:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9425:83:12",
																		"nodeType": "YulBlock",
																		"src": "9425:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9427:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "9427:77:12"
																					},
																					"nativeSrc": "9427:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9427:79:12"
																				},
																				"nativeSrc": "9427:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "9427:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9397:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9397:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9405:18:12",
																				"nodeType": "YulLiteral",
																				"src": "9405:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9394:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9394:2:12"
																		},
																		"nativeSrc": "9394:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9394:30:12"
																	},
																	"nativeSrc": "9391:117:12",
																	"nodeType": "YulIf",
																	"src": "9391:117:12"
																},
																{
																	"nativeSrc": "9522:88:12",
																	"nodeType": "YulAssignment",
																	"src": "9522:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9582:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9582:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9593:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9593:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9578:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9578:3:12"
																				},
																				"nativeSrc": "9578:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9578:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9602:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9602:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "9532:45:12",
																			"nodeType": "YulIdentifier",
																			"src": "9532:45:12"
																		},
																		"nativeSrc": "9532:78:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9532:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9522:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9522:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9630:287:12",
															"nodeType": "YulBlock",
															"src": "9630:287:12",
															"statements": [
																{
																	"nativeSrc": "9645:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9645:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9676:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9676:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9687:2:12",
																						"nodeType": "YulLiteral",
																						"src": "9687:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9672:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9672:3:12"
																				},
																				"nativeSrc": "9672:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9672:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9659:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "9659:12:12"
																		},
																		"nativeSrc": "9659:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9659:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9649:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9649:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9738:83:12",
																		"nodeType": "YulBlock",
																		"src": "9738:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9740:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "9740:77:12"
																					},
																					"nativeSrc": "9740:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9740:79:12"
																				},
																				"nativeSrc": "9740:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "9740:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9710:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9710:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9718:18:12",
																				"nodeType": "YulLiteral",
																				"src": "9718:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9707:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9707:2:12"
																		},
																		"nativeSrc": "9707:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9707:30:12"
																	},
																	"nativeSrc": "9704:117:12",
																	"nodeType": "YulIf",
																	"src": "9704:117:12"
																},
																{
																	"nativeSrc": "9835:72:12",
																	"nodeType": "YulAssignment",
																	"src": "9835:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9879:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9879:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9890:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9890:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9875:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9875:3:12"
																				},
																				"nativeSrc": "9875:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9875:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9899:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9899:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9845:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "9845:29:12"
																		},
																		"nativeSrc": "9845:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9845:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9835:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9835:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "8561:1363:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8683:9:12",
														"nodeType": "YulTypedName",
														"src": "8683:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8694:7:12",
														"nodeType": "YulTypedName",
														"src": "8694:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8706:6:12",
														"nodeType": "YulTypedName",
														"src": "8706:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8714:6:12",
														"nodeType": "YulTypedName",
														"src": "8714:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8722:6:12",
														"nodeType": "YulTypedName",
														"src": "8722:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8730:6:12",
														"nodeType": "YulTypedName",
														"src": "8730:6:12",
														"type": ""
													}
												],
												"src": "8561:1363:12"
											},
											{
												"body": {
													"nativeSrc": "10123:1316:12",
													"nodeType": "YulBlock",
													"src": "10123:1316:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10170:83:12",
																"nodeType": "YulBlock",
																"src": "10170:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10172:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "10172:77:12"
																			},
																			"nativeSrc": "10172:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10172:79:12"
																		},
																		"nativeSrc": "10172:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10172:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10144:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10144:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10153:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10153:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10140:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10140:3:12"
																		},
																		"nativeSrc": "10140:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10140:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10165:3:12",
																		"nodeType": "YulLiteral",
																		"src": "10165:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10136:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10136:3:12"
																},
																"nativeSrc": "10136:33:12",
																"nodeType": "YulFunctionCall",
																"src": "10136:33:12"
															},
															"nativeSrc": "10133:120:12",
															"nodeType": "YulIf",
															"src": "10133:120:12"
														},
														{
															"nativeSrc": "10263:117:12",
															"nodeType": "YulBlock",
															"src": "10263:117:12",
															"statements": [
																{
																	"nativeSrc": "10278:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10278:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10292:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10292:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10282:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10282:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10307:63:12",
																	"nodeType": "YulAssignment",
																	"src": "10307:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10342:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10342:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10353:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10353:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10338:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10338:3:12"
																				},
																				"nativeSrc": "10338:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10338:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10362:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10362:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10317:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "10317:20:12"
																		},
																		"nativeSrc": "10317:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10317:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10307:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10307:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10390:118:12",
															"nodeType": "YulBlock",
															"src": "10390:118:12",
															"statements": [
																{
																	"nativeSrc": "10405:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10405:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10419:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10419:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10409:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10409:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10435:63:12",
																	"nodeType": "YulAssignment",
																	"src": "10435:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10470:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10470:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10481:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10481:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10466:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10466:3:12"
																				},
																				"nativeSrc": "10466:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10466:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10490:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10490:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10445:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "10445:20:12"
																		},
																		"nativeSrc": "10445:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10445:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10435:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10435:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10518:303:12",
															"nodeType": "YulBlock",
															"src": "10518:303:12",
															"statements": [
																{
																	"nativeSrc": "10533:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10533:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10564:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10564:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10575:2:12",
																						"nodeType": "YulLiteral",
																						"src": "10575:2:12",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10560:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10560:3:12"
																				},
																				"nativeSrc": "10560:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10560:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10547:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "10547:12:12"
																		},
																		"nativeSrc": "10547:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10547:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10537:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10537:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10626:83:12",
																		"nodeType": "YulBlock",
																		"src": "10626:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10628:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "10628:77:12"
																					},
																					"nativeSrc": "10628:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "10628:79:12"
																				},
																				"nativeSrc": "10628:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "10628:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10598:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10598:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10606:18:12",
																				"nodeType": "YulLiteral",
																				"src": "10606:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10595:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "10595:2:12"
																		},
																		"nativeSrc": "10595:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10595:30:12"
																	},
																	"nativeSrc": "10592:117:12",
																	"nodeType": "YulIf",
																	"src": "10592:117:12"
																},
																{
																	"nativeSrc": "10723:88:12",
																	"nodeType": "YulAssignment",
																	"src": "10723:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10783:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10783:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10794:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10794:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10779:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10779:3:12"
																				},
																				"nativeSrc": "10779:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10779:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10803:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10803:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "10733:45:12",
																			"nodeType": "YulIdentifier",
																			"src": "10733:45:12"
																		},
																		"nativeSrc": "10733:78:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10733:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10723:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10723:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10831:303:12",
															"nodeType": "YulBlock",
															"src": "10831:303:12",
															"statements": [
																{
																	"nativeSrc": "10846:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10846:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10877:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10877:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10888:2:12",
																						"nodeType": "YulLiteral",
																						"src": "10888:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10873:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10873:3:12"
																				},
																				"nativeSrc": "10873:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10873:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10860:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "10860:12:12"
																		},
																		"nativeSrc": "10860:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10860:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10850:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10850:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10939:83:12",
																		"nodeType": "YulBlock",
																		"src": "10939:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10941:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "10941:77:12"
																					},
																					"nativeSrc": "10941:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "10941:79:12"
																				},
																				"nativeSrc": "10941:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "10941:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10911:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10911:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10919:18:12",
																				"nodeType": "YulLiteral",
																				"src": "10919:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10908:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "10908:2:12"
																		},
																		"nativeSrc": "10908:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10908:30:12"
																	},
																	"nativeSrc": "10905:117:12",
																	"nodeType": "YulIf",
																	"src": "10905:117:12"
																},
																{
																	"nativeSrc": "11036:88:12",
																	"nodeType": "YulAssignment",
																	"src": "11036:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11096:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11096:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11107:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11107:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11092:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11092:3:12"
																				},
																				"nativeSrc": "11092:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11092:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11116:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11116:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "11046:45:12",
																			"nodeType": "YulIdentifier",
																			"src": "11046:45:12"
																		},
																		"nativeSrc": "11046:78:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11046:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11036:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11036:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11144:288:12",
															"nodeType": "YulBlock",
															"src": "11144:288:12",
															"statements": [
																{
																	"nativeSrc": "11159:47:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11159:47:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11190:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11190:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11201:3:12",
																						"nodeType": "YulLiteral",
																						"src": "11201:3:12",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11186:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11186:3:12"
																				},
																				"nativeSrc": "11186:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11186:19:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11173:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "11173:12:12"
																		},
																		"nativeSrc": "11173:33:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11173:33:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11163:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11163:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11253:83:12",
																		"nodeType": "YulBlock",
																		"src": "11253:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11255:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "11255:77:12"
																					},
																					"nativeSrc": "11255:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "11255:79:12"
																				},
																				"nativeSrc": "11255:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "11255:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11225:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11225:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11233:18:12",
																				"nodeType": "YulLiteral",
																				"src": "11233:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11222:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "11222:2:12"
																		},
																		"nativeSrc": "11222:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11222:30:12"
																	},
																	"nativeSrc": "11219:117:12",
																	"nodeType": "YulIf",
																	"src": "11219:117:12"
																},
																{
																	"nativeSrc": "11350:72:12",
																	"nodeType": "YulAssignment",
																	"src": "11350:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11394:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11394:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11405:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11405:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11390:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11390:3:12"
																				},
																				"nativeSrc": "11390:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11390:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11414:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11414:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11360:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "11360:29:12"
																		},
																		"nativeSrc": "11360:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11360:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "11350:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11350:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "9930:1509:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10061:9:12",
														"nodeType": "YulTypedName",
														"src": "10061:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10072:7:12",
														"nodeType": "YulTypedName",
														"src": "10072:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10084:6:12",
														"nodeType": "YulTypedName",
														"src": "10084:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10092:6:12",
														"nodeType": "YulTypedName",
														"src": "10092:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10100:6:12",
														"nodeType": "YulTypedName",
														"src": "10100:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10108:6:12",
														"nodeType": "YulTypedName",
														"src": "10108:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10116:6:12",
														"nodeType": "YulTypedName",
														"src": "10116:6:12",
														"type": ""
													}
												],
												"src": "9930:1509:12"
											},
											{
												"body": {
													"nativeSrc": "11527:229:12",
													"nodeType": "YulBlock",
													"src": "11527:229:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11632:22:12",
																"nodeType": "YulBlock",
																"src": "11632:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "11634:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "11634:16:12"
																			},
																			"nativeSrc": "11634:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11634:18:12"
																		},
																		"nativeSrc": "11634:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11634:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11604:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11604:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11612:18:12",
																		"nodeType": "YulLiteral",
																		"src": "11612:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11601:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "11601:2:12"
																},
																"nativeSrc": "11601:30:12",
																"nodeType": "YulFunctionCall",
																"src": "11601:30:12"
															},
															"nativeSrc": "11598:56:12",
															"nodeType": "YulIf",
															"src": "11598:56:12"
														},
														{
															"nativeSrc": "11664:25:12",
															"nodeType": "YulAssignment",
															"src": "11664:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11676:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11676:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11684:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11684:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11672:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11672:3:12"
																},
																"nativeSrc": "11672:17:12",
																"nodeType": "YulFunctionCall",
																"src": "11672:17:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11664:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11664:4:12"
																}
															]
														},
														{
															"nativeSrc": "11726:23:12",
															"nodeType": "YulAssignment",
															"src": "11726:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "11738:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11738:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11744:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11744:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11734:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11734:3:12"
																},
																"nativeSrc": "11734:15:12",
																"nodeType": "YulFunctionCall",
																"src": "11734:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11726:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11726:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "11445:311:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "11511:6:12",
														"nodeType": "YulTypedName",
														"src": "11511:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "11522:4:12",
														"nodeType": "YulTypedName",
														"src": "11522:4:12",
														"type": ""
													}
												],
												"src": "11445:311:12"
											},
											{
												"body": {
													"nativeSrc": "11881:608:12",
													"nodeType": "YulBlock",
													"src": "11881:608:12",
													"statements": [
														{
															"nativeSrc": "11891:90:12",
															"nodeType": "YulAssignment",
															"src": "11891:90:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11973:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11973:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "11916:56:12",
																			"nodeType": "YulIdentifier",
																			"src": "11916:56:12"
																		},
																		"nativeSrc": "11916:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11916:64:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "11900:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "11900:15:12"
																},
																"nativeSrc": "11900:81:12",
																"nodeType": "YulFunctionCall",
																"src": "11900:81:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11891:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11891:5:12"
																}
															]
														},
														{
															"nativeSrc": "11990:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11990:16:12",
															"value": {
																"name": "array",
																"nativeSrc": "12001:5:12",
																"nodeType": "YulIdentifier",
																"src": "12001:5:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "11994:3:12",
																	"nodeType": "YulTypedName",
																	"src": "11994:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12023:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12023:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12030:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12030:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12016:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12016:6:12"
																},
																"nativeSrc": "12016:21:12",
																"nodeType": "YulFunctionCall",
																"src": "12016:21:12"
															},
															"nativeSrc": "12016:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "12016:21:12"
														},
														{
															"nativeSrc": "12046:23:12",
															"nodeType": "YulAssignment",
															"src": "12046:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12057:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12057:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12064:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12064:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12053:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12053:3:12"
																},
																"nativeSrc": "12053:16:12",
																"nodeType": "YulFunctionCall",
																"src": "12053:16:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "12046:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12046:3:12"
																}
															]
														},
														{
															"nativeSrc": "12079:44:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12079:44:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12097:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12097:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12109:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12109:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12117:4:12",
																				"nodeType": "YulLiteral",
																				"src": "12117:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "12105:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12105:3:12"
																		},
																		"nativeSrc": "12105:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12105:17:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12093:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12093:3:12"
																},
																"nativeSrc": "12093:30:12",
																"nodeType": "YulFunctionCall",
																"src": "12093:30:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "12083:6:12",
																	"nodeType": "YulTypedName",
																	"src": "12083:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12151:103:12",
																"nodeType": "YulBlock",
																"src": "12151:103:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "12165:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "12165:77:12"
																			},
																			"nativeSrc": "12165:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12165:79:12"
																		},
																		"nativeSrc": "12165:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12165:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "12138:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12138:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12146:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12146:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12135:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12135:2:12"
																},
																"nativeSrc": "12135:15:12",
																"nodeType": "YulFunctionCall",
																"src": "12135:15:12"
															},
															"nativeSrc": "12132:122:12",
															"nodeType": "YulIf",
															"src": "12132:122:12"
														},
														{
															"body": {
																"nativeSrc": "12339:144:12",
																"nodeType": "YulBlock",
																"src": "12339:144:12",
																"statements": [
																	{
																		"nativeSrc": "12354:21:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12354:21:12",
																		"value": {
																			"name": "src",
																			"nativeSrc": "12372:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12372:3:12"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "12358:10:12",
																				"nodeType": "YulTypedName",
																				"src": "12358:10:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "12396:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12396:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "12422:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "12422:10:12"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "12434:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "12434:3:12"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "12401:20:12",
																						"nodeType": "YulIdentifier",
																						"src": "12401:20:12"
																					},
																					"nativeSrc": "12401:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "12401:37:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12389:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12389:6:12"
																			},
																			"nativeSrc": "12389:50:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12389:50:12"
																		},
																		"nativeSrc": "12389:50:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12389:50:12"
																	},
																	{
																		"nativeSrc": "12452:21:12",
																		"nodeType": "YulAssignment",
																		"src": "12452:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "12463:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12463:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12468:4:12",
																					"nodeType": "YulLiteral",
																					"src": "12468:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12459:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12459:3:12"
																			},
																			"nativeSrc": "12459:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12459:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "12452:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12452:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12292:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12292:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "12297:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12297:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12289:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12289:2:12"
																},
																"nativeSrc": "12289:15:12",
																"nodeType": "YulFunctionCall",
																"src": "12289:15:12"
															},
															"nativeSrc": "12263:220:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12305:25:12",
																"nodeType": "YulBlock",
																"src": "12305:25:12",
																"statements": [
																	{
																		"nativeSrc": "12307:21:12",
																		"nodeType": "YulAssignment",
																		"src": "12307:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "12318:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12318:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12323:4:12",
																					"nodeType": "YulLiteral",
																					"src": "12323:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12314:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12314:3:12"
																			},
																			"nativeSrc": "12314:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12314:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "12307:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12307:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12267:21:12",
																"nodeType": "YulBlock",
																"src": "12267:21:12",
																"statements": [
																	{
																		"nativeSrc": "12269:17:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12269:17:12",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "12280:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "12280:6:12"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "12273:3:12",
																				"nodeType": "YulTypedName",
																				"src": "12273:3:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "12263:220:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "11779:710:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11851:6:12",
														"nodeType": "YulTypedName",
														"src": "11851:6:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11859:6:12",
														"nodeType": "YulTypedName",
														"src": "11859:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11867:3:12",
														"nodeType": "YulTypedName",
														"src": "11867:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11875:5:12",
														"nodeType": "YulTypedName",
														"src": "11875:5:12",
														"type": ""
													}
												],
												"src": "11779:710:12"
											},
											{
												"body": {
													"nativeSrc": "12589:293:12",
													"nodeType": "YulBlock",
													"src": "12589:293:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "12638:83:12",
																"nodeType": "YulBlock",
																"src": "12638:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "12640:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "12640:77:12"
																			},
																			"nativeSrc": "12640:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12640:79:12"
																		},
																		"nativeSrc": "12640:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12640:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "12617:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "12617:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12625:4:12",
																						"nodeType": "YulLiteral",
																						"src": "12625:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12613:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12613:3:12"
																				},
																				"nativeSrc": "12613:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12613:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "12632:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12632:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12609:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12609:3:12"
																		},
																		"nativeSrc": "12609:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12609:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12602:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12602:6:12"
																},
																"nativeSrc": "12602:35:12",
																"nodeType": "YulFunctionCall",
																"src": "12602:35:12"
															},
															"nativeSrc": "12599:122:12",
															"nodeType": "YulIf",
															"src": "12599:122:12"
														},
														{
															"nativeSrc": "12730:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12730:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12757:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12757:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12744:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "12744:12:12"
																},
																"nativeSrc": "12744:20:12",
																"nodeType": "YulFunctionCall",
																"src": "12744:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12734:6:12",
																	"nodeType": "YulTypedName",
																	"src": "12734:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12773:103:12",
															"nodeType": "YulAssignment",
															"src": "12773:103:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12849:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12849:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12857:4:12",
																				"nodeType": "YulLiteral",
																				"src": "12857:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12845:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12845:3:12"
																		},
																		"nativeSrc": "12845:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12845:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12864:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12864:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12872:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12872:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "12782:62:12",
																	"nodeType": "YulIdentifier",
																	"src": "12782:62:12"
																},
																"nativeSrc": "12782:94:12",
																"nodeType": "YulFunctionCall",
																"src": "12782:94:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12773:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12773:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "12512:370:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12567:6:12",
														"nodeType": "YulTypedName",
														"src": "12567:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12575:3:12",
														"nodeType": "YulTypedName",
														"src": "12575:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12583:5:12",
														"nodeType": "YulTypedName",
														"src": "12583:5:12",
														"type": ""
													}
												],
												"src": "12512:370:12"
											},
											{
												"body": {
													"nativeSrc": "13021:761:12",
													"nodeType": "YulBlock",
													"src": "13021:761:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "13067:83:12",
																"nodeType": "YulBlock",
																"src": "13067:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13069:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "13069:77:12"
																			},
																			"nativeSrc": "13069:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13069:79:12"
																		},
																		"nativeSrc": "13069:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13069:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13042:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "13042:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13051:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13051:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13038:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13038:3:12"
																		},
																		"nativeSrc": "13038:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13038:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13063:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13063:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13034:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13034:3:12"
																},
																"nativeSrc": "13034:32:12",
																"nodeType": "YulFunctionCall",
																"src": "13034:32:12"
															},
															"nativeSrc": "13031:119:12",
															"nodeType": "YulIf",
															"src": "13031:119:12"
														},
														{
															"nativeSrc": "13160:302:12",
															"nodeType": "YulBlock",
															"src": "13160:302:12",
															"statements": [
																{
																	"nativeSrc": "13175:45:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13175:45:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13206:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "13206:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13217:1:12",
																						"nodeType": "YulLiteral",
																						"src": "13217:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13202:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13202:3:12"
																				},
																				"nativeSrc": "13202:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13202:17:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13189:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "13189:12:12"
																		},
																		"nativeSrc": "13189:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13189:31:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13179:6:12",
																			"nodeType": "YulTypedName",
																			"src": "13179:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13267:83:12",
																		"nodeType": "YulBlock",
																		"src": "13267:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13269:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "13269:77:12"
																					},
																					"nativeSrc": "13269:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "13269:79:12"
																				},
																				"nativeSrc": "13269:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "13269:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13239:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13239:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13247:18:12",
																				"nodeType": "YulLiteral",
																				"src": "13247:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13236:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "13236:2:12"
																		},
																		"nativeSrc": "13236:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13236:30:12"
																	},
																	"nativeSrc": "13233:117:12",
																	"nodeType": "YulIf",
																	"src": "13233:117:12"
																},
																{
																	"nativeSrc": "13364:88:12",
																	"nodeType": "YulAssignment",
																	"src": "13364:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13424:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "13424:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13435:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "13435:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13420:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13420:3:12"
																				},
																				"nativeSrc": "13420:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13420:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13444:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "13444:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "13374:45:12",
																			"nodeType": "YulIdentifier",
																			"src": "13374:45:12"
																		},
																		"nativeSrc": "13374:78:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13374:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13364:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "13364:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13472:303:12",
															"nodeType": "YulBlock",
															"src": "13472:303:12",
															"statements": [
																{
																	"nativeSrc": "13487:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13487:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13518:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "13518:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13529:2:12",
																						"nodeType": "YulLiteral",
																						"src": "13529:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13514:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13514:3:12"
																				},
																				"nativeSrc": "13514:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13514:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13501:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "13501:12:12"
																		},
																		"nativeSrc": "13501:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13501:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13491:6:12",
																			"nodeType": "YulTypedName",
																			"src": "13491:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13580:83:12",
																		"nodeType": "YulBlock",
																		"src": "13580:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13582:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "13582:77:12"
																					},
																					"nativeSrc": "13582:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "13582:79:12"
																				},
																				"nativeSrc": "13582:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "13582:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13552:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13552:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13560:18:12",
																				"nodeType": "YulLiteral",
																				"src": "13560:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13549:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "13549:2:12"
																		},
																		"nativeSrc": "13549:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13549:30:12"
																	},
																	"nativeSrc": "13546:117:12",
																	"nodeType": "YulIf",
																	"src": "13546:117:12"
																},
																{
																	"nativeSrc": "13677:88:12",
																	"nodeType": "YulAssignment",
																	"src": "13677:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13737:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "13737:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13748:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "13748:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13733:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13733:3:12"
																				},
																				"nativeSrc": "13733:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13733:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13757:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "13757:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "13687:45:12",
																			"nodeType": "YulIdentifier",
																			"src": "13687:45:12"
																		},
																		"nativeSrc": "13687:78:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13687:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13677:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "13677:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "12888:894:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12983:9:12",
														"nodeType": "YulTypedName",
														"src": "12983:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12994:7:12",
														"nodeType": "YulTypedName",
														"src": "12994:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13006:6:12",
														"nodeType": "YulTypedName",
														"src": "13006:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13014:6:12",
														"nodeType": "YulTypedName",
														"src": "13014:6:12",
														"type": ""
													}
												],
												"src": "12888:894:12"
											},
											{
												"body": {
													"nativeSrc": "13862:40:12",
													"nodeType": "YulBlock",
													"src": "13862:40:12",
													"statements": [
														{
															"nativeSrc": "13873:22:12",
															"nodeType": "YulAssignment",
															"src": "13873:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13889:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13889:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13883:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13883:5:12"
																},
																"nativeSrc": "13883:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13883:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13873:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13873:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "13788:114:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13845:5:12",
														"nodeType": "YulTypedName",
														"src": "13845:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13855:6:12",
														"nodeType": "YulTypedName",
														"src": "13855:6:12",
														"type": ""
													}
												],
												"src": "13788:114:12"
											},
											{
												"body": {
													"nativeSrc": "14019:73:12",
													"nodeType": "YulBlock",
													"src": "14019:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14036:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14036:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14041:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14041:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14029:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14029:6:12"
																},
																"nativeSrc": "14029:19:12",
																"nodeType": "YulFunctionCall",
																"src": "14029:19:12"
															},
															"nativeSrc": "14029:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "14029:19:12"
														},
														{
															"nativeSrc": "14057:29:12",
															"nodeType": "YulAssignment",
															"src": "14057:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14076:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14076:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14081:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14081:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14072:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14072:3:12"
																},
																"nativeSrc": "14072:14:12",
																"nodeType": "YulFunctionCall",
																"src": "14072:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14057:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "14057:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "13908:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13991:3:12",
														"nodeType": "YulTypedName",
														"src": "13991:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13996:6:12",
														"nodeType": "YulTypedName",
														"src": "13996:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14007:11:12",
														"nodeType": "YulTypedName",
														"src": "14007:11:12",
														"type": ""
													}
												],
												"src": "13908:184:12"
											},
											{
												"body": {
													"nativeSrc": "14170:60:12",
													"nodeType": "YulBlock",
													"src": "14170:60:12",
													"statements": [
														{
															"nativeSrc": "14180:11:12",
															"nodeType": "YulAssignment",
															"src": "14180:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "14188:3:12",
																"nodeType": "YulIdentifier",
																"src": "14188:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14180:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14180:4:12"
																}
															]
														},
														{
															"nativeSrc": "14201:22:12",
															"nodeType": "YulAssignment",
															"src": "14201:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "14213:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14213:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14218:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14218:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14209:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14209:3:12"
																},
																"nativeSrc": "14209:14:12",
																"nodeType": "YulFunctionCall",
																"src": "14209:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14201:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14201:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "14098:132:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14157:3:12",
														"nodeType": "YulTypedName",
														"src": "14157:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "14165:4:12",
														"nodeType": "YulTypedName",
														"src": "14165:4:12",
														"type": ""
													}
												],
												"src": "14098:132:12"
											},
											{
												"body": {
													"nativeSrc": "14291:53:12",
													"nodeType": "YulBlock",
													"src": "14291:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14308:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14308:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14331:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "14331:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "14313:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "14313:17:12"
																		},
																		"nativeSrc": "14313:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14313:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14301:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14301:6:12"
																},
																"nativeSrc": "14301:37:12",
																"nodeType": "YulFunctionCall",
																"src": "14301:37:12"
															},
															"nativeSrc": "14301:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "14301:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "14236:108:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14279:5:12",
														"nodeType": "YulTypedName",
														"src": "14279:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14286:3:12",
														"nodeType": "YulTypedName",
														"src": "14286:3:12",
														"type": ""
													}
												],
												"src": "14236:108:12"
											},
											{
												"body": {
													"nativeSrc": "14430:99:12",
													"nodeType": "YulBlock",
													"src": "14430:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14474:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14474:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14482:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14482:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "14440:33:12",
																	"nodeType": "YulIdentifier",
																	"src": "14440:33:12"
																},
																"nativeSrc": "14440:46:12",
																"nodeType": "YulFunctionCall",
																"src": "14440:46:12"
															},
															"nativeSrc": "14440:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "14440:46:12"
														},
														{
															"nativeSrc": "14495:28:12",
															"nodeType": "YulAssignment",
															"src": "14495:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14513:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14513:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14518:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14518:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14509:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14509:3:12"
																},
																"nativeSrc": "14509:14:12",
																"nodeType": "YulFunctionCall",
																"src": "14509:14:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "14495:10:12",
																	"nodeType": "YulIdentifier",
																	"src": "14495:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "14350:179:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "14403:6:12",
														"nodeType": "YulTypedName",
														"src": "14403:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14411:3:12",
														"nodeType": "YulTypedName",
														"src": "14411:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "14419:10:12",
														"nodeType": "YulTypedName",
														"src": "14419:10:12",
														"type": ""
													}
												],
												"src": "14350:179:12"
											},
											{
												"body": {
													"nativeSrc": "14610:38:12",
													"nodeType": "YulBlock",
													"src": "14610:38:12",
													"statements": [
														{
															"nativeSrc": "14620:22:12",
															"nodeType": "YulAssignment",
															"src": "14620:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "14632:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14632:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14637:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14637:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14628:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14628:3:12"
																},
																"nativeSrc": "14628:14:12",
																"nodeType": "YulFunctionCall",
																"src": "14628:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "14620:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14620:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "14535:113:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14597:3:12",
														"nodeType": "YulTypedName",
														"src": "14597:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "14605:4:12",
														"nodeType": "YulTypedName",
														"src": "14605:4:12",
														"type": ""
													}
												],
												"src": "14535:113:12"
											},
											{
												"body": {
													"nativeSrc": "14808:608:12",
													"nodeType": "YulBlock",
													"src": "14808:608:12",
													"statements": [
														{
															"nativeSrc": "14818:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "14818:68:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14880:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "14880:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "14832:47:12",
																	"nodeType": "YulIdentifier",
																	"src": "14832:47:12"
																},
																"nativeSrc": "14832:54:12",
																"nodeType": "YulFunctionCall",
																"src": "14832:54:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14822:6:12",
																	"nodeType": "YulTypedName",
																	"src": "14822:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14895:93:12",
															"nodeType": "YulAssignment",
															"src": "14895:93:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14976:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14976:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14981:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14981:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14902:73:12",
																	"nodeType": "YulIdentifier",
																	"src": "14902:73:12"
																},
																"nativeSrc": "14902:86:12",
																"nodeType": "YulFunctionCall",
																"src": "14902:86:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14895:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14895:3:12"
																}
															]
														},
														{
															"nativeSrc": "14997:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "14997:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15062:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15062:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "15012:49:12",
																	"nodeType": "YulIdentifier",
																	"src": "15012:49:12"
																},
																"nativeSrc": "15012:56:12",
																"nodeType": "YulFunctionCall",
																"src": "15012:56:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "15001:7:12",
																	"nodeType": "YulTypedName",
																	"src": "15001:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15077:21:12",
															"nodeType": "YulVariableDeclaration",
															"src": "15077:21:12",
															"value": {
																"name": "baseRef",
																"nativeSrc": "15091:7:12",
																"nodeType": "YulIdentifier",
																"src": "15091:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "15081:6:12",
																	"nodeType": "YulTypedName",
																	"src": "15081:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15167:224:12",
																"nodeType": "YulBlock",
																"src": "15167:224:12",
																"statements": [
																	{
																		"nativeSrc": "15181:34:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15181:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "15208:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "15208:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "15202:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "15202:5:12"
																			},
																			"nativeSrc": "15202:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15202:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "15185:13:12",
																				"nodeType": "YulTypedName",
																				"src": "15185:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15228:70:12",
																		"nodeType": "YulAssignment",
																		"src": "15228:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "15279:13:12",
																					"nodeType": "YulIdentifier",
																					"src": "15279:13:12"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "15294:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "15294:3:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "15235:43:12",
																				"nodeType": "YulIdentifier",
																				"src": "15235:43:12"
																			},
																			"nativeSrc": "15235:63:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15235:63:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "15228:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "15228:3:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "15311:70:12",
																		"nodeType": "YulAssignment",
																		"src": "15311:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "15374:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "15374:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "15321:52:12",
																				"nodeType": "YulIdentifier",
																				"src": "15321:52:12"
																			},
																			"nativeSrc": "15321:60:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15321:60:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "15311:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15311:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "15129:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15129:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15132:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15132:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "15126:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "15126:2:12"
																},
																"nativeSrc": "15126:13:12",
																"nodeType": "YulFunctionCall",
																"src": "15126:13:12"
															},
															"nativeSrc": "15107:284:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "15140:18:12",
																"nodeType": "YulBlock",
																"src": "15140:18:12",
																"statements": [
																	{
																		"nativeSrc": "15142:14:12",
																		"nodeType": "YulAssignment",
																		"src": "15142:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "15151:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "15151:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15154:1:12",
																					"nodeType": "YulLiteral",
																					"src": "15154:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15147:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "15147:3:12"
																			},
																			"nativeSrc": "15147:9:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15147:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "15142:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "15142:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "15111:14:12",
																"nodeType": "YulBlock",
																"src": "15111:14:12",
																"statements": [
																	{
																		"nativeSrc": "15113:10:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15113:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "15122:1:12",
																			"nodeType": "YulLiteral",
																			"src": "15122:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "15117:1:12",
																				"nodeType": "YulTypedName",
																				"src": "15117:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "15107:284:12"
														},
														{
															"nativeSrc": "15400:10:12",
															"nodeType": "YulAssignment",
															"src": "15400:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "15407:3:12",
																"nodeType": "YulIdentifier",
																"src": "15407:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15400:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "14684:732:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14787:5:12",
														"nodeType": "YulTypedName",
														"src": "14787:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14794:3:12",
														"nodeType": "YulTypedName",
														"src": "14794:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14803:3:12",
														"nodeType": "YulTypedName",
														"src": "14803:3:12",
														"type": ""
													}
												],
												"src": "14684:732:12"
											},
											{
												"body": {
													"nativeSrc": "15570:225:12",
													"nodeType": "YulBlock",
													"src": "15570:225:12",
													"statements": [
														{
															"nativeSrc": "15580:26:12",
															"nodeType": "YulAssignment",
															"src": "15580:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15592:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15592:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15603:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15603:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15588:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15588:3:12"
																},
																"nativeSrc": "15588:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15588:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15580:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15580:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15627:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15627:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15638:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15638:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15623:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15623:3:12"
																		},
																		"nativeSrc": "15623:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15623:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15646:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15646:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15652:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15652:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15642:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15642:3:12"
																		},
																		"nativeSrc": "15642:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15642:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15616:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15616:6:12"
																},
																"nativeSrc": "15616:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15616:47:12"
															},
															"nativeSrc": "15616:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15616:47:12"
														},
														{
															"nativeSrc": "15672:116:12",
															"nodeType": "YulAssignment",
															"src": "15672:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15774:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15774:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "15783:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15783:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "15680:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "15680:93:12"
																},
																"nativeSrc": "15680:108:12",
																"nodeType": "YulFunctionCall",
																"src": "15680:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15672:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15672:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "15422:373:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15542:9:12",
														"nodeType": "YulTypedName",
														"src": "15542:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15554:6:12",
														"nodeType": "YulTypedName",
														"src": "15554:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15565:4:12",
														"nodeType": "YulTypedName",
														"src": "15565:4:12",
														"type": ""
													}
												],
												"src": "15422:373:12"
											},
											{
												"body": {
													"nativeSrc": "15927:817:12",
													"nodeType": "YulBlock",
													"src": "15927:817:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "15974:83:12",
																"nodeType": "YulBlock",
																"src": "15974:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15976:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "15976:77:12"
																			},
																			"nativeSrc": "15976:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15976:79:12"
																		},
																		"nativeSrc": "15976:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15976:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15948:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "15948:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15957:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15957:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15944:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15944:3:12"
																		},
																		"nativeSrc": "15944:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15944:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15969:3:12",
																		"nodeType": "YulLiteral",
																		"src": "15969:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15940:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15940:3:12"
																},
																"nativeSrc": "15940:33:12",
																"nodeType": "YulFunctionCall",
																"src": "15940:33:12"
															},
															"nativeSrc": "15937:120:12",
															"nodeType": "YulIf",
															"src": "15937:120:12"
														},
														{
															"nativeSrc": "16067:117:12",
															"nodeType": "YulBlock",
															"src": "16067:117:12",
															"statements": [
																{
																	"nativeSrc": "16082:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16082:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16096:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16096:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16086:6:12",
																			"nodeType": "YulTypedName",
																			"src": "16086:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16111:63:12",
																	"nodeType": "YulAssignment",
																	"src": "16111:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16146:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16146:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16157:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16157:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16142:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16142:3:12"
																				},
																				"nativeSrc": "16142:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16142:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16166:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16166:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16121:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "16121:20:12"
																		},
																		"nativeSrc": "16121:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16121:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16111:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "16111:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16194:118:12",
															"nodeType": "YulBlock",
															"src": "16194:118:12",
															"statements": [
																{
																	"nativeSrc": "16209:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16209:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16223:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16223:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16213:6:12",
																			"nodeType": "YulTypedName",
																			"src": "16213:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16239:63:12",
																	"nodeType": "YulAssignment",
																	"src": "16239:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16274:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16274:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16285:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16285:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16270:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16270:3:12"
																				},
																				"nativeSrc": "16270:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16270:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16294:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16294:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "16249:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "16249:20:12"
																		},
																		"nativeSrc": "16249:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16249:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16239:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "16239:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16322:118:12",
															"nodeType": "YulBlock",
															"src": "16322:118:12",
															"statements": [
																{
																	"nativeSrc": "16337:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16337:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16351:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16351:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16341:6:12",
																			"nodeType": "YulTypedName",
																			"src": "16341:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16367:63:12",
																	"nodeType": "YulAssignment",
																	"src": "16367:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16402:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16402:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16413:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16413:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16398:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16398:3:12"
																				},
																				"nativeSrc": "16398:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16398:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16422:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16422:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "16377:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "16377:20:12"
																		},
																		"nativeSrc": "16377:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16377:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "16367:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "16367:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16450:287:12",
															"nodeType": "YulBlock",
															"src": "16450:287:12",
															"statements": [
																{
																	"nativeSrc": "16465:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16465:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16496:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16496:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16507:2:12",
																						"nodeType": "YulLiteral",
																						"src": "16507:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16492:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16492:3:12"
																				},
																				"nativeSrc": "16492:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16492:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "16479:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "16479:12:12"
																		},
																		"nativeSrc": "16479:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16479:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16469:6:12",
																			"nodeType": "YulTypedName",
																			"src": "16469:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "16558:83:12",
																		"nodeType": "YulBlock",
																		"src": "16558:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "16560:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "16560:77:12"
																					},
																					"nativeSrc": "16560:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "16560:79:12"
																				},
																				"nativeSrc": "16560:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "16560:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "16530:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16530:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16538:18:12",
																				"nodeType": "YulLiteral",
																				"src": "16538:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "16527:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "16527:2:12"
																		},
																		"nativeSrc": "16527:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16527:30:12"
																	},
																	"nativeSrc": "16524:117:12",
																	"nodeType": "YulIf",
																	"src": "16524:117:12"
																},
																{
																	"nativeSrc": "16655:72:12",
																	"nodeType": "YulAssignment",
																	"src": "16655:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16699:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16699:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16710:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16710:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16695:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16695:3:12"
																				},
																				"nativeSrc": "16695:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16695:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16719:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16719:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "16665:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "16665:29:12"
																		},
																		"nativeSrc": "16665:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16665:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "16655:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "16655:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "15801:943:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15873:9:12",
														"nodeType": "YulTypedName",
														"src": "15873:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15884:7:12",
														"nodeType": "YulTypedName",
														"src": "15884:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15896:6:12",
														"nodeType": "YulTypedName",
														"src": "15896:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15904:6:12",
														"nodeType": "YulTypedName",
														"src": "15904:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15912:6:12",
														"nodeType": "YulTypedName",
														"src": "15912:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15920:6:12",
														"nodeType": "YulTypedName",
														"src": "15920:6:12",
														"type": ""
													}
												],
												"src": "15801:943:12"
											},
											{
												"body": {
													"nativeSrc": "16790:76:12",
													"nodeType": "YulBlock",
													"src": "16790:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "16844:16:12",
																"nodeType": "YulBlock",
																"src": "16844:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16853:1:12",
																					"nodeType": "YulLiteral",
																					"src": "16853:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16856:1:12",
																					"nodeType": "YulLiteral",
																					"src": "16856:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16846:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16846:6:12"
																			},
																			"nativeSrc": "16846:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16846:12:12"
																		},
																		"nativeSrc": "16846:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "16846:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16813:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "16813:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16835:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "16835:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "16820:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "16820:14:12"
																				},
																				"nativeSrc": "16820:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16820:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "16810:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "16810:2:12"
																		},
																		"nativeSrc": "16810:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16810:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16803:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16803:6:12"
																},
																"nativeSrc": "16803:40:12",
																"nodeType": "YulFunctionCall",
																"src": "16803:40:12"
															},
															"nativeSrc": "16800:60:12",
															"nodeType": "YulIf",
															"src": "16800:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "16750:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16783:5:12",
														"nodeType": "YulTypedName",
														"src": "16783:5:12",
														"type": ""
													}
												],
												"src": "16750:116:12"
											},
											{
												"body": {
													"nativeSrc": "16921:84:12",
													"nodeType": "YulBlock",
													"src": "16921:84:12",
													"statements": [
														{
															"nativeSrc": "16931:29:12",
															"nodeType": "YulAssignment",
															"src": "16931:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16953:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16953:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "16940:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "16940:12:12"
																},
																"nativeSrc": "16940:20:12",
																"nodeType": "YulFunctionCall",
																"src": "16940:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16931:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "16931:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16993:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "16993:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "16969:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "16969:23:12"
																},
																"nativeSrc": "16969:30:12",
																"nodeType": "YulFunctionCall",
																"src": "16969:30:12"
															},
															"nativeSrc": "16969:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "16969:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "16872:133:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16899:6:12",
														"nodeType": "YulTypedName",
														"src": "16899:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16907:3:12",
														"nodeType": "YulTypedName",
														"src": "16907:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16915:5:12",
														"nodeType": "YulTypedName",
														"src": "16915:5:12",
														"type": ""
													}
												],
												"src": "16872:133:12"
											},
											{
												"body": {
													"nativeSrc": "17091:388:12",
													"nodeType": "YulBlock",
													"src": "17091:388:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "17137:83:12",
																"nodeType": "YulBlock",
																"src": "17137:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17139:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "17139:77:12"
																			},
																			"nativeSrc": "17139:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17139:79:12"
																		},
																		"nativeSrc": "17139:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17139:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17112:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "17112:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17121:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17121:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17108:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17108:3:12"
																		},
																		"nativeSrc": "17108:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17108:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17133:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17133:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17104:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17104:3:12"
																},
																"nativeSrc": "17104:32:12",
																"nodeType": "YulFunctionCall",
																"src": "17104:32:12"
															},
															"nativeSrc": "17101:119:12",
															"nodeType": "YulIf",
															"src": "17101:119:12"
														},
														{
															"nativeSrc": "17230:117:12",
															"nodeType": "YulBlock",
															"src": "17230:117:12",
															"statements": [
																{
																	"nativeSrc": "17245:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17245:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17259:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17259:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17249:6:12",
																			"nodeType": "YulTypedName",
																			"src": "17249:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17274:63:12",
																	"nodeType": "YulAssignment",
																	"src": "17274:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17309:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "17309:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17320:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "17320:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17305:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "17305:3:12"
																				},
																				"nativeSrc": "17305:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17305:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17329:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "17329:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17284:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "17284:20:12"
																		},
																		"nativeSrc": "17284:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17284:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17274:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "17274:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17357:115:12",
															"nodeType": "YulBlock",
															"src": "17357:115:12",
															"statements": [
																{
																	"nativeSrc": "17372:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17372:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17386:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17386:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17376:6:12",
																			"nodeType": "YulTypedName",
																			"src": "17376:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17402:60:12",
																	"nodeType": "YulAssignment",
																	"src": "17402:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17434:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "17434:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17445:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "17445:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17430:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "17430:3:12"
																				},
																				"nativeSrc": "17430:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17430:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17454:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "17454:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "17412:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "17412:17:12"
																		},
																		"nativeSrc": "17412:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17412:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17402:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "17402:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "17011:468:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17053:9:12",
														"nodeType": "YulTypedName",
														"src": "17053:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17064:7:12",
														"nodeType": "YulTypedName",
														"src": "17064:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17076:6:12",
														"nodeType": "YulTypedName",
														"src": "17076:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17084:6:12",
														"nodeType": "YulTypedName",
														"src": "17084:6:12",
														"type": ""
													}
												],
												"src": "17011:468:12"
											},
											{
												"body": {
													"nativeSrc": "17568:391:12",
													"nodeType": "YulBlock",
													"src": "17568:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "17614:83:12",
																"nodeType": "YulBlock",
																"src": "17614:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17616:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "17616:77:12"
																			},
																			"nativeSrc": "17616:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17616:79:12"
																		},
																		"nativeSrc": "17616:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17616:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17589:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "17589:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17598:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17598:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17585:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17585:3:12"
																		},
																		"nativeSrc": "17585:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17585:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17610:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17610:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17581:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17581:3:12"
																},
																"nativeSrc": "17581:32:12",
																"nodeType": "YulFunctionCall",
																"src": "17581:32:12"
															},
															"nativeSrc": "17578:119:12",
															"nodeType": "YulIf",
															"src": "17578:119:12"
														},
														{
															"nativeSrc": "17707:117:12",
															"nodeType": "YulBlock",
															"src": "17707:117:12",
															"statements": [
																{
																	"nativeSrc": "17722:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17722:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17736:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17736:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17726:6:12",
																			"nodeType": "YulTypedName",
																			"src": "17726:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17751:63:12",
																	"nodeType": "YulAssignment",
																	"src": "17751:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17786:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "17786:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17797:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "17797:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17782:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "17782:3:12"
																				},
																				"nativeSrc": "17782:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17782:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17806:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "17806:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17761:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "17761:20:12"
																		},
																		"nativeSrc": "17761:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17761:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17751:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "17751:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17834:118:12",
															"nodeType": "YulBlock",
															"src": "17834:118:12",
															"statements": [
																{
																	"nativeSrc": "17849:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17849:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17863:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17863:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17853:6:12",
																			"nodeType": "YulTypedName",
																			"src": "17853:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17879:63:12",
																	"nodeType": "YulAssignment",
																	"src": "17879:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17914:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "17914:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17925:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "17925:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17910:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "17910:3:12"
																				},
																				"nativeSrc": "17910:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17910:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17934:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "17934:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17889:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "17889:20:12"
																		},
																		"nativeSrc": "17889:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17889:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17879:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "17879:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "17485:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17530:9:12",
														"nodeType": "YulTypedName",
														"src": "17530:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17541:7:12",
														"nodeType": "YulTypedName",
														"src": "17541:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17553:6:12",
														"nodeType": "YulTypedName",
														"src": "17553:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17561:6:12",
														"nodeType": "YulTypedName",
														"src": "17561:6:12",
														"type": ""
													}
												],
												"src": "17485:474:12"
											},
											{
												"body": {
													"nativeSrc": "18108:946:12",
													"nodeType": "YulBlock",
													"src": "18108:946:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "18155:83:12",
																"nodeType": "YulBlock",
																"src": "18155:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18157:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "18157:77:12"
																			},
																			"nativeSrc": "18157:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18157:79:12"
																		},
																		"nativeSrc": "18157:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "18157:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18129:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "18129:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18138:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18138:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18125:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18125:3:12"
																		},
																		"nativeSrc": "18125:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18125:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18150:3:12",
																		"nodeType": "YulLiteral",
																		"src": "18150:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18121:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18121:3:12"
																},
																"nativeSrc": "18121:33:12",
																"nodeType": "YulFunctionCall",
																"src": "18121:33:12"
															},
															"nativeSrc": "18118:120:12",
															"nodeType": "YulIf",
															"src": "18118:120:12"
														},
														{
															"nativeSrc": "18248:117:12",
															"nodeType": "YulBlock",
															"src": "18248:117:12",
															"statements": [
																{
																	"nativeSrc": "18263:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18263:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18277:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18277:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18267:6:12",
																			"nodeType": "YulTypedName",
																			"src": "18267:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18292:63:12",
																	"nodeType": "YulAssignment",
																	"src": "18292:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18327:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "18327:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18338:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "18338:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18323:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "18323:3:12"
																				},
																				"nativeSrc": "18323:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "18323:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18347:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "18347:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "18302:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "18302:20:12"
																		},
																		"nativeSrc": "18302:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18302:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18292:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "18292:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18375:118:12",
															"nodeType": "YulBlock",
															"src": "18375:118:12",
															"statements": [
																{
																	"nativeSrc": "18390:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18390:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18404:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18404:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18394:6:12",
																			"nodeType": "YulTypedName",
																			"src": "18394:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18420:63:12",
																	"nodeType": "YulAssignment",
																	"src": "18420:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18455:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "18455:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18466:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "18466:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18451:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "18451:3:12"
																				},
																				"nativeSrc": "18451:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "18451:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18475:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "18475:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "18430:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "18430:20:12"
																		},
																		"nativeSrc": "18430:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18430:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "18420:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "18420:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18503:118:12",
															"nodeType": "YulBlock",
															"src": "18503:118:12",
															"statements": [
																{
																	"nativeSrc": "18518:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18518:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18532:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18532:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18522:6:12",
																			"nodeType": "YulTypedName",
																			"src": "18522:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18548:63:12",
																	"nodeType": "YulAssignment",
																	"src": "18548:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18583:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "18583:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18594:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "18594:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18579:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "18579:3:12"
																				},
																				"nativeSrc": "18579:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "18579:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18603:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "18603:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "18558:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "18558:20:12"
																		},
																		"nativeSrc": "18558:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18558:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "18548:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "18548:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18631:118:12",
															"nodeType": "YulBlock",
															"src": "18631:118:12",
															"statements": [
																{
																	"nativeSrc": "18646:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18646:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18660:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18660:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18650:6:12",
																			"nodeType": "YulTypedName",
																			"src": "18650:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18676:63:12",
																	"nodeType": "YulAssignment",
																	"src": "18676:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18711:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "18711:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18722:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "18722:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18707:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "18707:3:12"
																				},
																				"nativeSrc": "18707:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "18707:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18731:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "18731:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "18686:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "18686:20:12"
																		},
																		"nativeSrc": "18686:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18686:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "18676:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "18676:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18759:288:12",
															"nodeType": "YulBlock",
															"src": "18759:288:12",
															"statements": [
																{
																	"nativeSrc": "18774:47:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18774:47:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18805:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "18805:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18816:3:12",
																						"nodeType": "YulLiteral",
																						"src": "18816:3:12",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18801:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "18801:3:12"
																				},
																				"nativeSrc": "18801:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "18801:19:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "18788:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "18788:12:12"
																		},
																		"nativeSrc": "18788:33:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18788:33:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18778:6:12",
																			"nodeType": "YulTypedName",
																			"src": "18778:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "18868:83:12",
																		"nodeType": "YulBlock",
																		"src": "18868:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "18870:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "18870:77:12"
																					},
																					"nativeSrc": "18870:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "18870:79:12"
																				},
																				"nativeSrc": "18870:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "18870:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "18840:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "18840:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18848:18:12",
																				"nodeType": "YulLiteral",
																				"src": "18848:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "18837:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "18837:2:12"
																		},
																		"nativeSrc": "18837:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18837:30:12"
																	},
																	"nativeSrc": "18834:117:12",
																	"nodeType": "YulIf",
																	"src": "18834:117:12"
																},
																{
																	"nativeSrc": "18965:72:12",
																	"nodeType": "YulAssignment",
																	"src": "18965:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19009:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "19009:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19020:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "19020:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19005:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "19005:3:12"
																				},
																				"nativeSrc": "19005:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "19005:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19029:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "19029:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "18975:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "18975:29:12"
																		},
																		"nativeSrc": "18975:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18975:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "18965:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "18965:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "17965:1089:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18046:9:12",
														"nodeType": "YulTypedName",
														"src": "18046:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18057:7:12",
														"nodeType": "YulTypedName",
														"src": "18057:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18069:6:12",
														"nodeType": "YulTypedName",
														"src": "18069:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18077:6:12",
														"nodeType": "YulTypedName",
														"src": "18077:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18085:6:12",
														"nodeType": "YulTypedName",
														"src": "18085:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18093:6:12",
														"nodeType": "YulTypedName",
														"src": "18093:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "18101:6:12",
														"nodeType": "YulTypedName",
														"src": "18101:6:12",
														"type": ""
													}
												],
												"src": "17965:1089:12"
											},
											{
												"body": {
													"nativeSrc": "19088:152:12",
													"nodeType": "YulBlock",
													"src": "19088:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19105:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19105:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19108:77:12",
																		"nodeType": "YulLiteral",
																		"src": "19108:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19098:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19098:6:12"
																},
																"nativeSrc": "19098:88:12",
																"nodeType": "YulFunctionCall",
																"src": "19098:88:12"
															},
															"nativeSrc": "19098:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "19098:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19202:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19202:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19205:4:12",
																		"nodeType": "YulLiteral",
																		"src": "19205:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19195:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19195:6:12"
																},
																"nativeSrc": "19195:15:12",
																"nodeType": "YulFunctionCall",
																"src": "19195:15:12"
															},
															"nativeSrc": "19195:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "19195:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19226:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19226:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19229:4:12",
																		"nodeType": "YulLiteral",
																		"src": "19229:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19219:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19219:6:12"
																},
																"nativeSrc": "19219:15:12",
																"nodeType": "YulFunctionCall",
																"src": "19219:15:12"
															},
															"nativeSrc": "19219:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "19219:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "19060:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "19060:180:12"
											},
											{
												"body": {
													"nativeSrc": "19297:269:12",
													"nodeType": "YulBlock",
													"src": "19297:269:12",
													"statements": [
														{
															"nativeSrc": "19307:22:12",
															"nodeType": "YulAssignment",
															"src": "19307:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19321:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19321:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19327:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19327:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "19317:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19317:3:12"
																},
																"nativeSrc": "19317:12:12",
																"nodeType": "YulFunctionCall",
																"src": "19317:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "19307:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19307:6:12"
																}
															]
														},
														{
															"nativeSrc": "19338:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "19338:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19368:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19368:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19374:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19374:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19364:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19364:3:12"
																},
																"nativeSrc": "19364:12:12",
																"nodeType": "YulFunctionCall",
																"src": "19364:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "19342:18:12",
																	"nodeType": "YulTypedName",
																	"src": "19342:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19415:51:12",
																"nodeType": "YulBlock",
																"src": "19415:51:12",
																"statements": [
																	{
																		"nativeSrc": "19429:27:12",
																		"nodeType": "YulAssignment",
																		"src": "19429:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "19443:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "19443:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19451:4:12",
																					"nodeType": "YulLiteral",
																					"src": "19451:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "19439:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "19439:3:12"
																			},
																			"nativeSrc": "19439:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "19439:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "19429:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "19429:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "19395:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "19395:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19388:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19388:6:12"
																},
																"nativeSrc": "19388:26:12",
																"nodeType": "YulFunctionCall",
																"src": "19388:26:12"
															},
															"nativeSrc": "19385:81:12",
															"nodeType": "YulIf",
															"src": "19385:81:12"
														},
														{
															"body": {
																"nativeSrc": "19518:42:12",
																"nodeType": "YulBlock",
																"src": "19518:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "19532:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "19532:16:12"
																			},
																			"nativeSrc": "19532:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "19532:18:12"
																		},
																		"nativeSrc": "19532:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "19532:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "19482:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "19482:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "19505:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "19505:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19513:2:12",
																				"nodeType": "YulLiteral",
																				"src": "19513:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "19502:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "19502:2:12"
																		},
																		"nativeSrc": "19502:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19502:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "19479:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "19479:2:12"
																},
																"nativeSrc": "19479:38:12",
																"nodeType": "YulFunctionCall",
																"src": "19479:38:12"
															},
															"nativeSrc": "19476:84:12",
															"nodeType": "YulIf",
															"src": "19476:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "19246:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "19281:4:12",
														"nodeType": "YulTypedName",
														"src": "19281:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "19290:6:12",
														"nodeType": "YulTypedName",
														"src": "19290:6:12",
														"type": ""
													}
												],
												"src": "19246:320:12"
											},
											{
												"body": {
													"nativeSrc": "19637:53:12",
													"nodeType": "YulBlock",
													"src": "19637:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19654:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19654:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19677:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "19677:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "19659:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "19659:17:12"
																		},
																		"nativeSrc": "19659:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19659:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19647:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19647:6:12"
																},
																"nativeSrc": "19647:37:12",
																"nodeType": "YulFunctionCall",
																"src": "19647:37:12"
															},
															"nativeSrc": "19647:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "19647:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "19572:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19625:5:12",
														"nodeType": "YulTypedName",
														"src": "19625:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19632:3:12",
														"nodeType": "YulTypedName",
														"src": "19632:3:12",
														"type": ""
													}
												],
												"src": "19572:118:12"
											},
											{
												"body": {
													"nativeSrc": "19822:206:12",
													"nodeType": "YulBlock",
													"src": "19822:206:12",
													"statements": [
														{
															"nativeSrc": "19832:26:12",
															"nodeType": "YulAssignment",
															"src": "19832:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19844:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "19844:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19855:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19855:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19840:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19840:3:12"
																},
																"nativeSrc": "19840:18:12",
																"nodeType": "YulFunctionCall",
																"src": "19840:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19832:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19832:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19912:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19912:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19925:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19925:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19936:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19936:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19921:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19921:3:12"
																		},
																		"nativeSrc": "19921:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19921:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19868:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "19868:43:12"
																},
																"nativeSrc": "19868:71:12",
																"nodeType": "YulFunctionCall",
																"src": "19868:71:12"
															},
															"nativeSrc": "19868:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "19868:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19993:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19993:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20006:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20006:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20017:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20017:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20002:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20002:3:12"
																		},
																		"nativeSrc": "20002:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20002:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19949:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "19949:43:12"
																},
																"nativeSrc": "19949:72:12",
																"nodeType": "YulFunctionCall",
																"src": "19949:72:12"
															},
															"nativeSrc": "19949:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "19949:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "19696:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19786:9:12",
														"nodeType": "YulTypedName",
														"src": "19786:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19798:6:12",
														"nodeType": "YulTypedName",
														"src": "19798:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19806:6:12",
														"nodeType": "YulTypedName",
														"src": "19806:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19817:4:12",
														"nodeType": "YulTypedName",
														"src": "19817:4:12",
														"type": ""
													}
												],
												"src": "19696:332:12"
											},
											{
												"body": {
													"nativeSrc": "20160:206:12",
													"nodeType": "YulBlock",
													"src": "20160:206:12",
													"statements": [
														{
															"nativeSrc": "20170:26:12",
															"nodeType": "YulAssignment",
															"src": "20170:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20182:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20182:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20193:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20193:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20178:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20178:3:12"
																},
																"nativeSrc": "20178:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20178:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20170:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20170:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20250:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20250:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20263:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20263:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20274:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20274:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20259:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20259:3:12"
																		},
																		"nativeSrc": "20259:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20259:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20206:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20206:43:12"
																},
																"nativeSrc": "20206:71:12",
																"nodeType": "YulFunctionCall",
																"src": "20206:71:12"
															},
															"nativeSrc": "20206:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "20206:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20331:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20331:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20344:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20344:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20355:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20355:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20340:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20340:3:12"
																		},
																		"nativeSrc": "20340:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20340:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20287:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20287:43:12"
																},
																"nativeSrc": "20287:72:12",
																"nodeType": "YulFunctionCall",
																"src": "20287:72:12"
															},
															"nativeSrc": "20287:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "20287:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20034:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20124:9:12",
														"nodeType": "YulTypedName",
														"src": "20124:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20136:6:12",
														"nodeType": "YulTypedName",
														"src": "20136:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20144:6:12",
														"nodeType": "YulTypedName",
														"src": "20144:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20155:4:12",
														"nodeType": "YulTypedName",
														"src": "20155:4:12",
														"type": ""
													}
												],
												"src": "20034:332:12"
											},
											{
												"body": {
													"nativeSrc": "20400:152:12",
													"nodeType": "YulBlock",
													"src": "20400:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20417:1:12",
																		"nodeType": "YulLiteral",
																		"src": "20417:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20420:77:12",
																		"nodeType": "YulLiteral",
																		"src": "20420:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20410:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20410:6:12"
																},
																"nativeSrc": "20410:88:12",
																"nodeType": "YulFunctionCall",
																"src": "20410:88:12"
															},
															"nativeSrc": "20410:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "20410:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20514:1:12",
																		"nodeType": "YulLiteral",
																		"src": "20514:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20517:4:12",
																		"nodeType": "YulLiteral",
																		"src": "20517:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20507:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20507:6:12"
																},
																"nativeSrc": "20507:15:12",
																"nodeType": "YulFunctionCall",
																"src": "20507:15:12"
															},
															"nativeSrc": "20507:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "20507:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20538:1:12",
																		"nodeType": "YulLiteral",
																		"src": "20538:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20541:4:12",
																		"nodeType": "YulLiteral",
																		"src": "20541:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20531:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20531:6:12"
																},
																"nativeSrc": "20531:15:12",
																"nodeType": "YulFunctionCall",
																"src": "20531:15:12"
															},
															"nativeSrc": "20531:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "20531:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "20372:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "20372:180:12"
											},
											{
												"body": {
													"nativeSrc": "20656:124:12",
													"nodeType": "YulBlock",
													"src": "20656:124:12",
													"statements": [
														{
															"nativeSrc": "20666:26:12",
															"nodeType": "YulAssignment",
															"src": "20666:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20678:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20678:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20689:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20689:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20674:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20674:3:12"
																},
																"nativeSrc": "20674:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20674:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20666:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20666:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20746:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20746:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20759:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20759:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20770:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20770:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20755:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20755:3:12"
																		},
																		"nativeSrc": "20755:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20755:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20702:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20702:43:12"
																},
																"nativeSrc": "20702:71:12",
																"nodeType": "YulFunctionCall",
																"src": "20702:71:12"
															},
															"nativeSrc": "20702:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "20702:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "20558:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20628:9:12",
														"nodeType": "YulTypedName",
														"src": "20628:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20640:6:12",
														"nodeType": "YulTypedName",
														"src": "20640:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20651:4:12",
														"nodeType": "YulTypedName",
														"src": "20651:4:12",
														"type": ""
													}
												],
												"src": "20558:222:12"
											},
											{
												"body": {
													"nativeSrc": "20968:371:12",
													"nodeType": "YulBlock",
													"src": "20968:371:12",
													"statements": [
														{
															"nativeSrc": "20978:27:12",
															"nodeType": "YulAssignment",
															"src": "20978:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20990:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20990:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21001:3:12",
																		"nodeType": "YulLiteral",
																		"src": "21001:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20986:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20986:3:12"
																},
																"nativeSrc": "20986:19:12",
																"nodeType": "YulFunctionCall",
																"src": "20986:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20978:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20978:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21059:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21059:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21072:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21072:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21083:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21083:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21068:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21068:3:12"
																		},
																		"nativeSrc": "21068:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21068:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21015:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21015:43:12"
																},
																"nativeSrc": "21015:71:12",
																"nodeType": "YulFunctionCall",
																"src": "21015:71:12"
															},
															"nativeSrc": "21015:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "21015:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21140:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21140:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21153:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21153:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21164:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21164:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21149:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21149:3:12"
																		},
																		"nativeSrc": "21149:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21149:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21096:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21096:43:12"
																},
																"nativeSrc": "21096:72:12",
																"nodeType": "YulFunctionCall",
																"src": "21096:72:12"
															},
															"nativeSrc": "21096:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "21096:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21222:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21222:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21235:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21235:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21246:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21246:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21231:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21231:3:12"
																		},
																		"nativeSrc": "21231:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21231:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21178:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21178:43:12"
																},
																"nativeSrc": "21178:72:12",
																"nodeType": "YulFunctionCall",
																"src": "21178:72:12"
															},
															"nativeSrc": "21178:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "21178:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "21304:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21304:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21317:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21317:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21328:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21328:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21313:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21313:3:12"
																		},
																		"nativeSrc": "21313:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21313:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21260:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21260:43:12"
																},
																"nativeSrc": "21260:72:12",
																"nodeType": "YulFunctionCall",
																"src": "21260:72:12"
															},
															"nativeSrc": "21260:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "21260:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20786:553:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20916:9:12",
														"nodeType": "YulTypedName",
														"src": "20916:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "20928:6:12",
														"nodeType": "YulTypedName",
														"src": "20928:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20936:6:12",
														"nodeType": "YulTypedName",
														"src": "20936:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20944:6:12",
														"nodeType": "YulTypedName",
														"src": "20944:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20952:6:12",
														"nodeType": "YulTypedName",
														"src": "20952:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20963:4:12",
														"nodeType": "YulTypedName",
														"src": "20963:4:12",
														"type": ""
													}
												],
												"src": "20786:553:12"
											},
											{
												"body": {
													"nativeSrc": "21373:152:12",
													"nodeType": "YulBlock",
													"src": "21373:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21390:1:12",
																		"nodeType": "YulLiteral",
																		"src": "21390:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21393:77:12",
																		"nodeType": "YulLiteral",
																		"src": "21393:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21383:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21383:6:12"
																},
																"nativeSrc": "21383:88:12",
																"nodeType": "YulFunctionCall",
																"src": "21383:88:12"
															},
															"nativeSrc": "21383:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "21383:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21487:1:12",
																		"nodeType": "YulLiteral",
																		"src": "21487:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21490:4:12",
																		"nodeType": "YulLiteral",
																		"src": "21490:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21480:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21480:6:12"
																},
																"nativeSrc": "21480:15:12",
																"nodeType": "YulFunctionCall",
																"src": "21480:15:12"
															},
															"nativeSrc": "21480:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "21480:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21511:1:12",
																		"nodeType": "YulLiteral",
																		"src": "21511:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21514:4:12",
																		"nodeType": "YulLiteral",
																		"src": "21514:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21504:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21504:6:12"
																},
																"nativeSrc": "21504:15:12",
																"nodeType": "YulFunctionCall",
																"src": "21504:15:12"
															},
															"nativeSrc": "21504:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "21504:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "21345:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "21345:180:12"
											},
											{
												"body": {
													"nativeSrc": "21575:147:12",
													"nodeType": "YulBlock",
													"src": "21575:147:12",
													"statements": [
														{
															"nativeSrc": "21585:25:12",
															"nodeType": "YulAssignment",
															"src": "21585:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21608:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "21608:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21590:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "21590:17:12"
																},
																"nativeSrc": "21590:20:12",
																"nodeType": "YulFunctionCall",
																"src": "21590:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21585:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "21585:1:12"
																}
															]
														},
														{
															"nativeSrc": "21619:25:12",
															"nodeType": "YulAssignment",
															"src": "21619:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21642:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "21642:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21624:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "21624:17:12"
																},
																"nativeSrc": "21624:20:12",
																"nodeType": "YulFunctionCall",
																"src": "21624:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21619:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "21619:1:12"
																}
															]
														},
														{
															"nativeSrc": "21653:16:12",
															"nodeType": "YulAssignment",
															"src": "21653:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21664:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "21664:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21667:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "21667:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21660:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21660:3:12"
																},
																"nativeSrc": "21660:9:12",
																"nodeType": "YulFunctionCall",
																"src": "21660:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "21653:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21653:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21693:22:12",
																"nodeType": "YulBlock",
																"src": "21693:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21695:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "21695:16:12"
																			},
																			"nativeSrc": "21695:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "21695:18:12"
																		},
																		"nativeSrc": "21695:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "21695:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21685:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "21685:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "21688:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21688:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21682:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "21682:2:12"
																},
																"nativeSrc": "21682:10:12",
																"nodeType": "YulFunctionCall",
																"src": "21682:10:12"
															},
															"nativeSrc": "21679:36:12",
															"nodeType": "YulIf",
															"src": "21679:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "21531:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21562:1:12",
														"nodeType": "YulTypedName",
														"src": "21562:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21565:1:12",
														"nodeType": "YulTypedName",
														"src": "21565:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "21571:3:12",
														"nodeType": "YulTypedName",
														"src": "21571:3:12",
														"type": ""
													}
												],
												"src": "21531:191:12"
											},
											{
												"body": {
													"nativeSrc": "21954:408:12",
													"nodeType": "YulBlock",
													"src": "21954:408:12",
													"statements": [
														{
															"nativeSrc": "21964:26:12",
															"nodeType": "YulAssignment",
															"src": "21964:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21976:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "21976:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21987:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21987:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21972:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21972:3:12"
																},
																"nativeSrc": "21972:18:12",
																"nodeType": "YulFunctionCall",
																"src": "21972:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21964:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21964:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22011:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22011:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22022:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22022:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22007:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22007:3:12"
																		},
																		"nativeSrc": "22007:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22007:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22030:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22030:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22036:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22036:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22026:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22026:3:12"
																		},
																		"nativeSrc": "22026:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22026:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22000:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22000:6:12"
																},
																"nativeSrc": "22000:47:12",
																"nodeType": "YulFunctionCall",
																"src": "22000:47:12"
															},
															"nativeSrc": "22000:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "22000:47:12"
														},
														{
															"nativeSrc": "22056:116:12",
															"nodeType": "YulAssignment",
															"src": "22056:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22158:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22158:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "22167:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22167:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "22064:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "22064:93:12"
																},
																"nativeSrc": "22064:108:12",
																"nodeType": "YulFunctionCall",
																"src": "22064:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22056:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22056:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22193:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22193:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22204:2:12",
																				"nodeType": "YulLiteral",
																				"src": "22204:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22189:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22189:3:12"
																		},
																		"nativeSrc": "22189:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22189:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22213:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22213:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22219:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22219:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22209:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22209:3:12"
																		},
																		"nativeSrc": "22209:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22209:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22182:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22182:6:12"
																},
																"nativeSrc": "22182:48:12",
																"nodeType": "YulFunctionCall",
																"src": "22182:48:12"
															},
															"nativeSrc": "22182:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "22182:48:12"
														},
														{
															"nativeSrc": "22239:116:12",
															"nodeType": "YulAssignment",
															"src": "22239:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22341:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22341:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "22350:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22350:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "22247:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "22247:93:12"
																},
																"nativeSrc": "22247:108:12",
																"nodeType": "YulFunctionCall",
																"src": "22247:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22239:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22239:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "21728:634:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21918:9:12",
														"nodeType": "YulTypedName",
														"src": "21918:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21930:6:12",
														"nodeType": "YulTypedName",
														"src": "21930:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21938:6:12",
														"nodeType": "YulTypedName",
														"src": "21938:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21949:4:12",
														"nodeType": "YulTypedName",
														"src": "21949:4:12",
														"type": ""
													}
												],
												"src": "21728:634:12"
											},
											{
												"body": {
													"nativeSrc": "22426:40:12",
													"nodeType": "YulBlock",
													"src": "22426:40:12",
													"statements": [
														{
															"nativeSrc": "22437:22:12",
															"nodeType": "YulAssignment",
															"src": "22437:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22453:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "22453:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "22447:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "22447:5:12"
																},
																"nativeSrc": "22447:12:12",
																"nodeType": "YulFunctionCall",
																"src": "22447:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "22437:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22437:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "22368:98:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22409:5:12",
														"nodeType": "YulTypedName",
														"src": "22409:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "22419:6:12",
														"nodeType": "YulTypedName",
														"src": "22419:6:12",
														"type": ""
													}
												],
												"src": "22368:98:12"
											},
											{
												"body": {
													"nativeSrc": "22567:73:12",
													"nodeType": "YulBlock",
													"src": "22567:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22584:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22584:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22589:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22589:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22577:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22577:6:12"
																},
																"nativeSrc": "22577:19:12",
																"nodeType": "YulFunctionCall",
																"src": "22577:19:12"
															},
															"nativeSrc": "22577:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "22577:19:12"
														},
														{
															"nativeSrc": "22605:29:12",
															"nodeType": "YulAssignment",
															"src": "22605:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22624:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22624:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22629:4:12",
																		"nodeType": "YulLiteral",
																		"src": "22629:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22620:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22620:3:12"
																},
																"nativeSrc": "22620:14:12",
																"nodeType": "YulFunctionCall",
																"src": "22620:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "22605:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "22605:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "22472:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22539:3:12",
														"nodeType": "YulTypedName",
														"src": "22539:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "22544:6:12",
														"nodeType": "YulTypedName",
														"src": "22544:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "22555:11:12",
														"nodeType": "YulTypedName",
														"src": "22555:11:12",
														"type": ""
													}
												],
												"src": "22472:168:12"
											},
											{
												"body": {
													"nativeSrc": "22736:283:12",
													"nodeType": "YulBlock",
													"src": "22736:283:12",
													"statements": [
														{
															"nativeSrc": "22746:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "22746:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22792:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "22792:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "22760:31:12",
																	"nodeType": "YulIdentifier",
																	"src": "22760:31:12"
																},
																"nativeSrc": "22760:38:12",
																"nodeType": "YulFunctionCall",
																"src": "22760:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "22750:6:12",
																	"nodeType": "YulTypedName",
																	"src": "22750:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22807:77:12",
															"nodeType": "YulAssignment",
															"src": "22807:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22872:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22872:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22877:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22877:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "22814:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "22814:57:12"
																},
																"nativeSrc": "22814:70:12",
																"nodeType": "YulFunctionCall",
																"src": "22814:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22807:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22807:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22932:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "22932:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22939:4:12",
																				"nodeType": "YulLiteral",
																				"src": "22939:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22928:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22928:3:12"
																		},
																		"nativeSrc": "22928:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22928:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "22946:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22946:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22951:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22951:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "22893:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "22893:34:12"
																},
																"nativeSrc": "22893:65:12",
																"nodeType": "YulFunctionCall",
																"src": "22893:65:12"
															},
															"nativeSrc": "22893:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "22893:65:12"
														},
														{
															"nativeSrc": "22967:46:12",
															"nodeType": "YulAssignment",
															"src": "22967:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22978:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22978:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "23005:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "23005:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "22983:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "22983:21:12"
																		},
																		"nativeSrc": "22983:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22983:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22974:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22974:3:12"
																},
																"nativeSrc": "22974:39:12",
																"nodeType": "YulFunctionCall",
																"src": "22974:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22967:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22967:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "22646:373:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22717:5:12",
														"nodeType": "YulTypedName",
														"src": "22717:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "22724:3:12",
														"nodeType": "YulTypedName",
														"src": "22724:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22732:3:12",
														"nodeType": "YulTypedName",
														"src": "22732:3:12",
														"type": ""
													}
												],
												"src": "22646:373:12"
											},
											{
												"body": {
													"nativeSrc": "23253:523:12",
													"nodeType": "YulBlock",
													"src": "23253:523:12",
													"statements": [
														{
															"nativeSrc": "23263:27:12",
															"nodeType": "YulAssignment",
															"src": "23263:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23275:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "23275:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23286:3:12",
																		"nodeType": "YulLiteral",
																		"src": "23286:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23271:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23271:3:12"
																},
																"nativeSrc": "23271:19:12",
																"nodeType": "YulFunctionCall",
																"src": "23271:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23263:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23263:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23344:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "23344:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23357:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23357:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23368:1:12",
																				"nodeType": "YulLiteral",
																				"src": "23368:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23353:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23353:3:12"
																		},
																		"nativeSrc": "23353:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23353:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23300:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "23300:43:12"
																},
																"nativeSrc": "23300:71:12",
																"nodeType": "YulFunctionCall",
																"src": "23300:71:12"
															},
															"nativeSrc": "23300:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "23300:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23425:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "23425:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23438:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23438:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23449:2:12",
																				"nodeType": "YulLiteral",
																				"src": "23449:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23434:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23434:3:12"
																		},
																		"nativeSrc": "23434:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23434:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23381:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "23381:43:12"
																},
																"nativeSrc": "23381:72:12",
																"nodeType": "YulFunctionCall",
																"src": "23381:72:12"
															},
															"nativeSrc": "23381:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "23381:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23507:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "23507:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23520:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23520:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23531:2:12",
																				"nodeType": "YulLiteral",
																				"src": "23531:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23516:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23516:3:12"
																		},
																		"nativeSrc": "23516:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23516:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23463:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "23463:43:12"
																},
																"nativeSrc": "23463:72:12",
																"nodeType": "YulFunctionCall",
																"src": "23463:72:12"
															},
															"nativeSrc": "23463:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "23463:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "23589:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "23589:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23602:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23602:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23613:2:12",
																				"nodeType": "YulLiteral",
																				"src": "23613:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23598:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23598:3:12"
																		},
																		"nativeSrc": "23598:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23598:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23545:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "23545:43:12"
																},
																"nativeSrc": "23545:72:12",
																"nodeType": "YulFunctionCall",
																"src": "23545:72:12"
															},
															"nativeSrc": "23545:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "23545:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23638:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23638:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23649:3:12",
																				"nodeType": "YulLiteral",
																				"src": "23649:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23634:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23634:3:12"
																		},
																		"nativeSrc": "23634:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23634:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23659:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "23659:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23665:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23665:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23655:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23655:3:12"
																		},
																		"nativeSrc": "23655:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23655:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23627:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23627:6:12"
																},
																"nativeSrc": "23627:49:12",
																"nodeType": "YulFunctionCall",
																"src": "23627:49:12"
															},
															"nativeSrc": "23627:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "23627:49:12"
														},
														{
															"nativeSrc": "23685:84:12",
															"nodeType": "YulAssignment",
															"src": "23685:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "23755:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "23755:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "23764:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23764:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "23693:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "23693:61:12"
																},
																"nativeSrc": "23693:76:12",
																"nodeType": "YulFunctionCall",
																"src": "23693:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23685:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23685:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "23025:751:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23193:9:12",
														"nodeType": "YulTypedName",
														"src": "23193:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "23205:6:12",
														"nodeType": "YulTypedName",
														"src": "23205:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "23213:6:12",
														"nodeType": "YulTypedName",
														"src": "23213:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23221:6:12",
														"nodeType": "YulTypedName",
														"src": "23221:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23229:6:12",
														"nodeType": "YulTypedName",
														"src": "23229:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23237:6:12",
														"nodeType": "YulTypedName",
														"src": "23237:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23248:4:12",
														"nodeType": "YulTypedName",
														"src": "23248:4:12",
														"type": ""
													}
												],
												"src": "23025:751:12"
											},
											{
												"body": {
													"nativeSrc": "23844:79:12",
													"nodeType": "YulBlock",
													"src": "23844:79:12",
													"statements": [
														{
															"nativeSrc": "23854:22:12",
															"nodeType": "YulAssignment",
															"src": "23854:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "23869:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "23869:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23863:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "23863:5:12"
																},
																"nativeSrc": "23863:13:12",
																"nodeType": "YulFunctionCall",
																"src": "23863:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23854:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "23854:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23911:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "23911:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "23885:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "23885:25:12"
																},
																"nativeSrc": "23885:32:12",
																"nodeType": "YulFunctionCall",
																"src": "23885:32:12"
															},
															"nativeSrc": "23885:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "23885:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "23782:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "23822:6:12",
														"nodeType": "YulTypedName",
														"src": "23822:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23830:3:12",
														"nodeType": "YulTypedName",
														"src": "23830:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "23838:5:12",
														"nodeType": "YulTypedName",
														"src": "23838:5:12",
														"type": ""
													}
												],
												"src": "23782:141:12"
											},
											{
												"body": {
													"nativeSrc": "24005:273:12",
													"nodeType": "YulBlock",
													"src": "24005:273:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "24051:83:12",
																"nodeType": "YulBlock",
																"src": "24051:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "24053:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "24053:77:12"
																			},
																			"nativeSrc": "24053:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "24053:79:12"
																		},
																		"nativeSrc": "24053:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "24053:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24026:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "24026:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24035:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24035:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24022:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24022:3:12"
																		},
																		"nativeSrc": "24022:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24022:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24047:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24047:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "24018:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24018:3:12"
																},
																"nativeSrc": "24018:32:12",
																"nodeType": "YulFunctionCall",
																"src": "24018:32:12"
															},
															"nativeSrc": "24015:119:12",
															"nodeType": "YulIf",
															"src": "24015:119:12"
														},
														{
															"nativeSrc": "24144:127:12",
															"nodeType": "YulBlock",
															"src": "24144:127:12",
															"statements": [
																{
																	"nativeSrc": "24159:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "24159:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "24173:1:12",
																		"nodeType": "YulLiteral",
																		"src": "24173:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "24163:6:12",
																			"nodeType": "YulTypedName",
																			"src": "24163:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "24188:73:12",
																	"nodeType": "YulAssignment",
																	"src": "24188:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "24233:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "24233:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "24244:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "24244:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "24229:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "24229:3:12"
																				},
																				"nativeSrc": "24229:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "24229:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24253:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "24253:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "24198:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "24198:30:12"
																		},
																		"nativeSrc": "24198:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24198:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "24188:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "24188:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "23929:349:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23975:9:12",
														"nodeType": "YulTypedName",
														"src": "23975:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "23986:7:12",
														"nodeType": "YulTypedName",
														"src": "23986:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "23998:6:12",
														"nodeType": "YulTypedName",
														"src": "23998:6:12",
														"type": ""
													}
												],
												"src": "23929:349:12"
											},
											{
												"body": {
													"nativeSrc": "24612:725:12",
													"nodeType": "YulBlock",
													"src": "24612:725:12",
													"statements": [
														{
															"nativeSrc": "24622:27:12",
															"nodeType": "YulAssignment",
															"src": "24622:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24634:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "24634:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24645:3:12",
																		"nodeType": "YulLiteral",
																		"src": "24645:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24630:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24630:3:12"
																},
																"nativeSrc": "24630:19:12",
																"nodeType": "YulFunctionCall",
																"src": "24630:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24622:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "24622:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24703:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "24703:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24716:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24716:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24727:1:12",
																				"nodeType": "YulLiteral",
																				"src": "24727:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24712:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24712:3:12"
																		},
																		"nativeSrc": "24712:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24712:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24659:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "24659:43:12"
																},
																"nativeSrc": "24659:71:12",
																"nodeType": "YulFunctionCall",
																"src": "24659:71:12"
															},
															"nativeSrc": "24659:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "24659:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24784:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "24784:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24797:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24797:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24808:2:12",
																				"nodeType": "YulLiteral",
																				"src": "24808:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24793:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24793:3:12"
																		},
																		"nativeSrc": "24793:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24793:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24740:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "24740:43:12"
																},
																"nativeSrc": "24740:72:12",
																"nodeType": "YulFunctionCall",
																"src": "24740:72:12"
															},
															"nativeSrc": "24740:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "24740:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24833:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24833:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24844:2:12",
																				"nodeType": "YulLiteral",
																				"src": "24844:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24829:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24829:3:12"
																		},
																		"nativeSrc": "24829:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24829:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24853:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "24853:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24859:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24859:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24849:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24849:3:12"
																		},
																		"nativeSrc": "24849:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24849:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24822:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "24822:6:12"
																},
																"nativeSrc": "24822:48:12",
																"nodeType": "YulFunctionCall",
																"src": "24822:48:12"
															},
															"nativeSrc": "24822:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "24822:48:12"
														},
														{
															"nativeSrc": "24879:116:12",
															"nodeType": "YulAssignment",
															"src": "24879:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "24981:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "24981:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "24990:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "24990:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "24887:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "24887:93:12"
																},
																"nativeSrc": "24887:108:12",
																"nodeType": "YulFunctionCall",
																"src": "24887:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24879:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "24879:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25016:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25016:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25027:2:12",
																				"nodeType": "YulLiteral",
																				"src": "25027:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25012:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25012:3:12"
																		},
																		"nativeSrc": "25012:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25012:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25036:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "25036:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25042:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25042:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25032:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25032:3:12"
																		},
																		"nativeSrc": "25032:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25032:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25005:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25005:6:12"
																},
																"nativeSrc": "25005:48:12",
																"nodeType": "YulFunctionCall",
																"src": "25005:48:12"
															},
															"nativeSrc": "25005:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "25005:48:12"
														},
														{
															"nativeSrc": "25062:116:12",
															"nodeType": "YulAssignment",
															"src": "25062:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "25164:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "25164:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "25173:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "25173:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "25070:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "25070:93:12"
																},
																"nativeSrc": "25070:108:12",
																"nodeType": "YulFunctionCall",
																"src": "25070:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25062:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "25062:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25199:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25199:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25210:3:12",
																				"nodeType": "YulLiteral",
																				"src": "25210:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25195:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25195:3:12"
																		},
																		"nativeSrc": "25195:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25195:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25220:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "25220:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25226:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25226:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25216:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25216:3:12"
																		},
																		"nativeSrc": "25216:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25216:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25188:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25188:6:12"
																},
																"nativeSrc": "25188:49:12",
																"nodeType": "YulFunctionCall",
																"src": "25188:49:12"
															},
															"nativeSrc": "25188:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "25188:49:12"
														},
														{
															"nativeSrc": "25246:84:12",
															"nodeType": "YulAssignment",
															"src": "25246:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "25316:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "25316:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "25325:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "25325:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "25254:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "25254:61:12"
																},
																"nativeSrc": "25254:76:12",
																"nodeType": "YulFunctionCall",
																"src": "25254:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25246:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "25246:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "24284:1053:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24552:9:12",
														"nodeType": "YulTypedName",
														"src": "24552:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "24564:6:12",
														"nodeType": "YulTypedName",
														"src": "24564:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "24572:6:12",
														"nodeType": "YulTypedName",
														"src": "24572:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24580:6:12",
														"nodeType": "YulTypedName",
														"src": "24580:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24588:6:12",
														"nodeType": "YulTypedName",
														"src": "24588:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24596:6:12",
														"nodeType": "YulTypedName",
														"src": "24596:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24607:4:12",
														"nodeType": "YulTypedName",
														"src": "24607:4:12",
														"type": ""
													}
												],
												"src": "24284:1053:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009b575f3560e01c80634e1273f4116100645780634e1273f414610167578063731133e914610197578063a22cb465146101b3578063e985e9c5146101cf578063f242432a146101ff5761009b565b8062fdd58e1461009f57806301ffc9a7146100cf5780630e89341c146100ff5780631f7fdffa1461012f5780632eb2c2d61461014b575b5f80fd5b6100b960048036038101906100b49190611479565b61021b565b6040516100c691906114c6565b60405180910390f35b6100e960048036038101906100e49190611534565b610270565b6040516100f69190611579565b60405180910390f35b61011960048036038101906101149190611592565b610351565b6040516101269190611647565b60405180910390f35b61014960048036038101906101449190611857565b6103e3565b005b6101656004803603810190610160919061190f565b6103f5565b005b610181600480360381019061017c9190611a9a565b61049c565b60405161018e9190611bc7565b60405180910390f35b6101b160048036038101906101ac9190611be7565b6105a3565b005b6101cd60048036038101906101c89190611c91565b6105b5565b005b6101e960048036038101906101e49190611ccf565b6105cb565b6040516101f69190611579565b60405180910390f35b61021960048036038101906102149190611d0d565b610659565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061033a57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061034a575061034982610700565b5b9050919050565b60606002805461036090611dcd565b80601f016020809104026020016040519081016040528092919081815260200182805461038c90611dcd565b80156103d75780601f106103ae576101008083540402835291602001916103d7565b820191905f5260205f20905b8154815290600101906020018083116103ba57829003601f168201915b50505050509050919050565b6103ef84848484610769565b50505050565b5f6103fe6107ec565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610443575061044186826105cb565b155b156104875780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161047e929190611e0c565b60405180910390fd5b61049486868686866107f3565b505050505050565b606081518351146104e857815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016104df929190611e33565b60405180910390fd5b5f835167ffffffffffffffff8111156105045761050361166b565b5b6040519080825280602002602001820160405280156105325781602001602082028036833780820191505090505b5090505f5b84518110156105985761056e61055682876108e790919063ffffffff16565b61056983876108fa90919063ffffffff16565b61021b565b82828151811061058157610580611e5a565b5b602002602001018181525050806001019050610537565b508091505092915050565b6105af8484848461090d565b50505050565b6105c76105c06107ec565b83836109a2565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f6106626107ec565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156106a757506106a586826105cb565b155b156106eb5780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016106e2929190611e0c565b60405180910390fd5b6106f88686868686610b0b565b505050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107d9575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016107d09190611e87565b60405180910390fd5b6107e65f85858585610c11565b50505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610863575f6040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161085a9190611e87565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036108d3575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016108ca9190611e87565b60405180910390fd5b6108e08585858585610c11565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361097d575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016109749190611e87565b60405180910390fd5b5f806109898585610cbd565b9150915061099a5f87848487610c11565b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a12575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610a099190611e87565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610afe9190611579565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b7b575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b729190611e87565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610beb575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610be29190611e87565b60405180910390fd5b5f80610bf78585610cbd565b91509150610c088787848487610c11565b50505050505050565b610c1d85858585610ced565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610cb6575f610c596107ec565b90506001845103610ca5575f610c785f866108fa90919063ffffffff16565b90505f610c8e5f866108fa90919063ffffffff16565b9050610c9e83898985858961107d565b5050610cb4565b610cb381878787878761122c565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610d3757815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610d2e929190611e33565b60405180910390fd5b5f610d406107ec565b90505f5b8351811015610f3c575f610d6182866108fa90919063ffffffff16565b90505f610d7783866108fa90919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610e9a575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e4657888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610e3d9493929190611ea0565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610f2f57805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610f279190611f10565b925050819055505b5050806001019050610d44565b506001835103610ff7575f610f5a5f856108fa90919063ffffffff16565b90505f610f705f856108fa90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610fe8929190611e33565b60405180910390a45050611076565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161106d929190611f43565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611224578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016110dd959493929190611fca565b6020604051808303815f875af192505050801561111857506040513d601f19601f820116820180604052508101906111159190612036565b60015b611199573d805f8114611146576040519150601f19603f3d011682016040523d82523d5f602084013e61114b565b606091505b505f81510361119157846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111889190611e87565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461122257846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016112199190611e87565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b11156113d3578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161128c959493929190612061565b6020604051808303815f875af19250505080156112c757506040513d601f19601f820116820180604052508101906112c49190612036565b60015b611348573d805f81146112f5576040519150601f19603f3d011682016040523d82523d5f602084013e6112fa565b606091505b505f81510361134057846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113379190611e87565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146113d157846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113c89190611e87565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611415826113ec565b9050919050565b6114258161140b565b811461142f575f80fd5b50565b5f813590506114408161141c565b92915050565b5f819050919050565b61145881611446565b8114611462575f80fd5b50565b5f813590506114738161144f565b92915050565b5f806040838503121561148f5761148e6113e4565b5b5f61149c85828601611432565b92505060206114ad85828601611465565b9150509250929050565b6114c081611446565b82525050565b5f6020820190506114d95f8301846114b7565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611513816114df565b811461151d575f80fd5b50565b5f8135905061152e8161150a565b92915050565b5f60208284031215611549576115486113e4565b5b5f61155684828501611520565b91505092915050565b5f8115159050919050565b6115738161155f565b82525050565b5f60208201905061158c5f83018461156a565b92915050565b5f602082840312156115a7576115a66113e4565b5b5f6115b484828501611465565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156115f45780820151818401526020810190506115d9565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611619826115bd565b61162381856115c7565b93506116338185602086016115d7565b61163c816115ff565b840191505092915050565b5f6020820190508181035f83015261165f818461160f565b905092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6116a1826115ff565b810181811067ffffffffffffffff821117156116c0576116bf61166b565b5b80604052505050565b5f6116d26113db565b90506116de8282611698565b919050565b5f67ffffffffffffffff8211156116fd576116fc61166b565b5b602082029050602081019050919050565b5f80fd5b5f61172461171f846116e3565b6116c9565b905080838252602082019050602084028301858111156117475761174661170e565b5b835b81811015611770578061175c8882611465565b845260208401935050602081019050611749565b5050509392505050565b5f82601f83011261178e5761178d611667565b5b813561179e848260208601611712565b91505092915050565b5f80fd5b5f67ffffffffffffffff8211156117c5576117c461166b565b5b6117ce826115ff565b9050602081019050919050565b828183375f83830152505050565b5f6117fb6117f6846117ab565b6116c9565b905082815260208101848484011115611817576118166117a7565b5b6118228482856117db565b509392505050565b5f82601f83011261183e5761183d611667565b5b813561184e8482602086016117e9565b91505092915050565b5f805f806080858703121561186f5761186e6113e4565b5b5f61187c87828801611432565b945050602085013567ffffffffffffffff81111561189d5761189c6113e8565b5b6118a98782880161177a565b935050604085013567ffffffffffffffff8111156118ca576118c96113e8565b5b6118d68782880161177a565b925050606085013567ffffffffffffffff8111156118f7576118f66113e8565b5b6119038782880161182a565b91505092959194509250565b5f805f805f60a08688031215611928576119276113e4565b5b5f61193588828901611432565b955050602061194688828901611432565b945050604086013567ffffffffffffffff811115611967576119666113e8565b5b6119738882890161177a565b935050606086013567ffffffffffffffff811115611994576119936113e8565b5b6119a08882890161177a565b925050608086013567ffffffffffffffff8111156119c1576119c06113e8565b5b6119cd8882890161182a565b9150509295509295909350565b5f67ffffffffffffffff8211156119f4576119f361166b565b5b602082029050602081019050919050565b5f611a17611a12846119da565b6116c9565b90508083825260208201905060208402830185811115611a3a57611a3961170e565b5b835b81811015611a635780611a4f8882611432565b845260208401935050602081019050611a3c565b5050509392505050565b5f82601f830112611a8157611a80611667565b5b8135611a91848260208601611a05565b91505092915050565b5f8060408385031215611ab057611aaf6113e4565b5b5f83013567ffffffffffffffff811115611acd57611acc6113e8565b5b611ad985828601611a6d565b925050602083013567ffffffffffffffff811115611afa57611af96113e8565b5b611b068582860161177a565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611b4281611446565b82525050565b5f611b538383611b39565b60208301905092915050565b5f602082019050919050565b5f611b7582611b10565b611b7f8185611b1a565b9350611b8a83611b2a565b805f5b83811015611bba578151611ba18882611b48565b9750611bac83611b5f565b925050600181019050611b8d565b5085935050505092915050565b5f6020820190508181035f830152611bdf8184611b6b565b905092915050565b5f805f8060808587031215611bff57611bfe6113e4565b5b5f611c0c87828801611432565b9450506020611c1d87828801611465565b9350506040611c2e87828801611465565b925050606085013567ffffffffffffffff811115611c4f57611c4e6113e8565b5b611c5b8782880161182a565b91505092959194509250565b611c708161155f565b8114611c7a575f80fd5b50565b5f81359050611c8b81611c67565b92915050565b5f8060408385031215611ca757611ca66113e4565b5b5f611cb485828601611432565b9250506020611cc585828601611c7d565b9150509250929050565b5f8060408385031215611ce557611ce46113e4565b5b5f611cf285828601611432565b9250506020611d0385828601611432565b9150509250929050565b5f805f805f60a08688031215611d2657611d256113e4565b5b5f611d3388828901611432565b9550506020611d4488828901611432565b9450506040611d5588828901611465565b9350506060611d6688828901611465565b925050608086013567ffffffffffffffff811115611d8757611d866113e8565b5b611d938882890161182a565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611de457607f821691505b602082108103611df757611df6611da0565b5b50919050565b611e068161140b565b82525050565b5f604082019050611e1f5f830185611dfd565b611e2c6020830184611dfd565b9392505050565b5f604082019050611e465f8301856114b7565b611e5360208301846114b7565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f602082019050611e9a5f830184611dfd565b92915050565b5f608082019050611eb35f830187611dfd565b611ec060208301866114b7565b611ecd60408301856114b7565b611eda60608301846114b7565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f1a82611446565b9150611f2583611446565b9250828201905080821115611f3d57611f3c611ee3565b5b92915050565b5f6040820190508181035f830152611f5b8185611b6b565b90508181036020830152611f6f8184611b6b565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f611f9c82611f78565b611fa68185611f82565b9350611fb68185602086016115d7565b611fbf816115ff565b840191505092915050565b5f60a082019050611fdd5f830188611dfd565b611fea6020830187611dfd565b611ff760408301866114b7565b61200460608301856114b7565b81810360808301526120168184611f92565b90509695505050505050565b5f815190506120308161150a565b92915050565b5f6020828403121561204b5761204a6113e4565b5b5f61205884828501612022565b91505092915050565b5f60a0820190506120745f830188611dfd565b6120816020830187611dfd565b81810360408301526120938186611b6b565b905081810360608301526120a78185611b6b565b905081810360808301526120bb8184611f92565b9050969550505050505056fea2646970667358221220435a15d91dfff23a56afe70aa6c418d16427b85e71be4960e94ce47ff39ddac664736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1FF JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x1647 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x1857 JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x190F JUMP JUMPDEST PUSH2 0x3F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x1A9A JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH2 0x5A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x5B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x33A JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x34A JUMPI POP PUSH2 0x349 DUP3 PUSH2 0x700 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x360 SWAP1 PUSH2 0x1DCD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38C SWAP1 PUSH2 0x1DCD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EF DUP5 DUP5 DUP5 DUP5 PUSH2 0x769 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3FE PUSH2 0x7EC JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x443 JUMPI POP PUSH2 0x441 DUP7 DUP3 PUSH2 0x5CB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x487 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47E SWAP3 SWAP2 SWAP1 PUSH2 0x1E0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x494 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x7F3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4E8 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DF SWAP3 SWAP2 SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x504 JUMPI PUSH2 0x503 PUSH2 0x166B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x532 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x598 JUMPI PUSH2 0x56E PUSH2 0x556 DUP3 DUP8 PUSH2 0x8E7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x569 DUP4 DUP8 PUSH2 0x8FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21B JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x581 JUMPI PUSH2 0x580 PUSH2 0x1E5A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x537 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5AF DUP5 DUP5 DUP5 DUP5 PUSH2 0x90D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5C7 PUSH2 0x5C0 PUSH2 0x7EC JUMP JUMPDEST DUP4 DUP4 PUSH2 0x9A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x662 PUSH2 0x7EC JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x6A7 JUMPI POP PUSH2 0x6A5 DUP7 DUP3 PUSH2 0x5CB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x6EB JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E2 SWAP3 SWAP2 SWAP1 PUSH2 0x1E0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F8 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xB0B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7D9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E6 PUSH0 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC11 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x863 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85A SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC11 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x97D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x974 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x989 DUP6 DUP6 PUSH2 0xCBD JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x99A PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xC11 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA12 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB7B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB72 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBEB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE2 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xBF7 DUP6 DUP6 PUSH2 0xCBD JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xC08 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xC11 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC1D DUP6 DUP6 DUP6 DUP6 PUSH2 0xCED JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCB6 JUMPI PUSH0 PUSH2 0xC59 PUSH2 0x7EC JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xCA5 JUMPI PUSH0 PUSH2 0xC78 PUSH0 DUP7 PUSH2 0x8FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC8E PUSH0 DUP7 PUSH2 0x8FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC9E DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x107D JUMP JUMPDEST POP POP PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0xCB3 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x122C JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xD37 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2E SWAP3 SWAP2 SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xD40 PUSH2 0x7EC JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xF3C JUMPI PUSH0 PUSH2 0xD61 DUP3 DUP7 PUSH2 0x8FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD77 DUP4 DUP7 PUSH2 0x8FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9A JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE46 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF2F JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF27 SWAP2 SWAP1 PUSH2 0x1F10 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xD44 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0xFF7 JUMPI PUSH0 PUSH2 0xF5A PUSH0 DUP6 PUSH2 0x8FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xF70 PUSH0 DUP6 PUSH2 0x8FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xFE8 SWAP3 SWAP2 SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1076 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x106D SWAP3 SWAP2 SWAP1 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1224 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1118 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1115 SWAP2 SWAP1 PUSH2 0x2036 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1199 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1146 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x114B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1191 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1188 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1222 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1219 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x13D3 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12C7 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12C4 SWAP2 SWAP1 PUSH2 0x2036 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1348 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x12F5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1340 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1337 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x13D1 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C8 SWAP2 SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1415 DUP3 PUSH2 0x13EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1425 DUP2 PUSH2 0x140B JUMP JUMPDEST DUP2 EQ PUSH2 0x142F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1440 DUP2 PUSH2 0x141C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1458 DUP2 PUSH2 0x1446 JUMP JUMPDEST DUP2 EQ PUSH2 0x1462 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1473 DUP2 PUSH2 0x144F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x148F JUMPI PUSH2 0x148E PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x149C DUP6 DUP3 DUP7 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14AD DUP6 DUP3 DUP7 ADD PUSH2 0x1465 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C0 DUP2 PUSH2 0x1446 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D9 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1513 DUP2 PUSH2 0x14DF JUMP JUMPDEST DUP2 EQ PUSH2 0x151D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x152E DUP2 PUSH2 0x150A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1549 JUMPI PUSH2 0x1548 PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1556 DUP5 DUP3 DUP6 ADD PUSH2 0x1520 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1573 DUP2 PUSH2 0x155F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x158C PUSH0 DUP4 ADD DUP5 PUSH2 0x156A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A7 JUMPI PUSH2 0x15A6 PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15B4 DUP5 DUP3 DUP6 ADD PUSH2 0x1465 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15F4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15D9 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1619 DUP3 PUSH2 0x15BD JUMP JUMPDEST PUSH2 0x1623 DUP2 DUP6 PUSH2 0x15C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1633 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x163C DUP2 PUSH2 0x15FF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x165F DUP2 DUP5 PUSH2 0x160F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x16A1 DUP3 PUSH2 0x15FF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x16C0 JUMPI PUSH2 0x16BF PUSH2 0x166B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16D2 PUSH2 0x13DB JUMP JUMPDEST SWAP1 POP PUSH2 0x16DE DUP3 DUP3 PUSH2 0x1698 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16FD JUMPI PUSH2 0x16FC PUSH2 0x166B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1724 PUSH2 0x171F DUP5 PUSH2 0x16E3 JUMP JUMPDEST PUSH2 0x16C9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1747 JUMPI PUSH2 0x1746 PUSH2 0x170E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1770 JUMPI DUP1 PUSH2 0x175C DUP9 DUP3 PUSH2 0x1465 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1749 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x178E JUMPI PUSH2 0x178D PUSH2 0x1667 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x179E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1712 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x166B JUMP JUMPDEST JUMPDEST PUSH2 0x17CE DUP3 PUSH2 0x15FF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17FB PUSH2 0x17F6 DUP5 PUSH2 0x17AB JUMP JUMPDEST PUSH2 0x16C9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1817 JUMPI PUSH2 0x1816 PUSH2 0x17A7 JUMP JUMPDEST JUMPDEST PUSH2 0x1822 DUP5 DUP3 DUP6 PUSH2 0x17DB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x183E JUMPI PUSH2 0x183D PUSH2 0x1667 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x184E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x186F JUMPI PUSH2 0x186E PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x187C DUP8 DUP3 DUP9 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x189D JUMPI PUSH2 0x189C PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x18A9 DUP8 DUP3 DUP9 ADD PUSH2 0x177A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18CA JUMPI PUSH2 0x18C9 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x18D6 DUP8 DUP3 DUP9 ADD PUSH2 0x177A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F7 JUMPI PUSH2 0x18F6 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x1903 DUP8 DUP3 DUP9 ADD PUSH2 0x182A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1928 JUMPI PUSH2 0x1927 PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1935 DUP9 DUP3 DUP10 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1946 DUP9 DUP3 DUP10 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1967 JUMPI PUSH2 0x1966 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x1973 DUP9 DUP3 DUP10 ADD PUSH2 0x177A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1994 JUMPI PUSH2 0x1993 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x19A0 DUP9 DUP3 DUP10 ADD PUSH2 0x177A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19C1 JUMPI PUSH2 0x19C0 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x19CD DUP9 DUP3 DUP10 ADD PUSH2 0x182A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19F4 JUMPI PUSH2 0x19F3 PUSH2 0x166B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A17 PUSH2 0x1A12 DUP5 PUSH2 0x19DA JUMP JUMPDEST PUSH2 0x16C9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1A3A JUMPI PUSH2 0x1A39 PUSH2 0x170E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A63 JUMPI DUP1 PUSH2 0x1A4F DUP9 DUP3 PUSH2 0x1432 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A3C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A81 JUMPI PUSH2 0x1A80 PUSH2 0x1667 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A91 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A05 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB0 JUMPI PUSH2 0x1AAF PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ACD JUMPI PUSH2 0x1ACC PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x1AD9 DUP6 DUP3 DUP7 ADD PUSH2 0x1A6D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AFA JUMPI PUSH2 0x1AF9 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x1B06 DUP6 DUP3 DUP7 ADD PUSH2 0x177A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B42 DUP2 PUSH2 0x1446 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B53 DUP4 DUP4 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B75 DUP3 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x1B7F DUP2 DUP6 PUSH2 0x1B1A JUMP JUMPDEST SWAP4 POP PUSH2 0x1B8A DUP4 PUSH2 0x1B2A JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BBA JUMPI DUP2 MLOAD PUSH2 0x1BA1 DUP9 DUP3 PUSH2 0x1B48 JUMP JUMPDEST SWAP8 POP PUSH2 0x1BAC DUP4 PUSH2 0x1B5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B8D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BDF DUP2 DUP5 PUSH2 0x1B6B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BFF JUMPI PUSH2 0x1BFE PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C0C DUP8 DUP3 DUP9 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C1D DUP8 DUP3 DUP9 ADD PUSH2 0x1465 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1C2E DUP8 DUP3 DUP9 ADD PUSH2 0x1465 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C4F JUMPI PUSH2 0x1C4E PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x1C5B DUP8 DUP3 DUP9 ADD PUSH2 0x182A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1C70 DUP2 PUSH2 0x155F JUMP JUMPDEST DUP2 EQ PUSH2 0x1C7A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C8B DUP2 PUSH2 0x1C67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CA7 JUMPI PUSH2 0x1CA6 PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CB4 DUP6 DUP3 DUP7 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CC5 DUP6 DUP3 DUP7 ADD PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CE5 JUMPI PUSH2 0x1CE4 PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CF2 DUP6 DUP3 DUP7 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D03 DUP6 DUP3 DUP7 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D26 JUMPI PUSH2 0x1D25 PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D33 DUP9 DUP3 DUP10 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1D44 DUP9 DUP3 DUP10 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1D55 DUP9 DUP3 DUP10 ADD PUSH2 0x1465 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1D66 DUP9 DUP3 DUP10 ADD PUSH2 0x1465 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D87 JUMPI PUSH2 0x1D86 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST PUSH2 0x1D93 DUP9 DUP3 DUP10 ADD PUSH2 0x182A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DE4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DF7 JUMPI PUSH2 0x1DF6 PUSH2 0x1DA0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E06 DUP2 PUSH2 0x140B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E1F PUSH0 DUP4 ADD DUP6 PUSH2 0x1DFD JUMP JUMPDEST PUSH2 0x1E2C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DFD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E46 PUSH0 DUP4 ADD DUP6 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x1E53 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14B7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E9A PUSH0 DUP4 ADD DUP5 PUSH2 0x1DFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EB3 PUSH0 DUP4 ADD DUP8 PUSH2 0x1DFD JUMP JUMPDEST PUSH2 0x1EC0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x1ECD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x1EDA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14B7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F1A DUP3 PUSH2 0x1446 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F25 DUP4 PUSH2 0x1446 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F3D JUMPI PUSH2 0x1F3C PUSH2 0x1EE3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F5B DUP2 DUP6 PUSH2 0x1B6B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1F6F DUP2 DUP5 PUSH2 0x1B6B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9C DUP3 PUSH2 0x1F78 JUMP JUMPDEST PUSH2 0x1FA6 DUP2 DUP6 PUSH2 0x1F82 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FB6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x1FBF DUP2 PUSH2 0x15FF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1FDD PUSH0 DUP4 ADD DUP9 PUSH2 0x1DFD JUMP JUMPDEST PUSH2 0x1FEA PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1DFD JUMP JUMPDEST PUSH2 0x1FF7 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x2004 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x14B7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2016 DUP2 DUP5 PUSH2 0x1F92 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2030 DUP2 PUSH2 0x150A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x204B JUMPI PUSH2 0x204A PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2058 DUP5 DUP3 DUP6 ADD PUSH2 0x2022 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2074 PUSH0 DUP4 ADD DUP9 PUSH2 0x1DFD JUMP JUMPDEST PUSH2 0x2081 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1DFD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2093 DUP2 DUP7 PUSH2 0x1B6B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x20A7 DUP2 DUP6 PUSH2 0x1B6B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x20BB DUP2 DUP5 PUSH2 0x1F92 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER GAS ISZERO 0xD9 SAR SELFDESTRUCT CALLCODE GASPRICE JUMP 0xAF 0xE7 EXP 0xA6 0xC4 XOR 0xD1 PUSH5 0x27B85E71BE 0x49 PUSH1 0xE9 0x4C 0xE4 PUSH32 0xF39DDAC664736F6C634300081600330000000000000000000000000000000000 ",
							"sourceMap": "177:424:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1380:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2084:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;440:158:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4014:429:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2536:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;292:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3156:144:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3367:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3591:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2247:132;2324:7;2350:9;:13;2360:2;2350:13;;;;;;;;;;;:22;2364:7;2350:22;;;;;;;;;;;;;;;;2343:29;;2247:132;;;;:::o;1380:305::-;1482:4;1532:26;1517:41;;;:11;:41;;;;:109;;;;1589:37;1574:52;;;:11;:52;;;;1517:109;:161;;;;1642:36;1666:11;1642:23;:36::i;:::-;1517:161;1498:180;;1380:305;;;:::o;2084:103::-;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;440:158:0:-;556:34;567:2;571:3;576:7;585:4;556:10;:34::i;:::-;440:158;;;;:::o;4014:429:2:-;4208:14;4225:12;:10;:12::i;:::-;4208:29;;4259:6;4251:14;;:4;:14;;;;:49;;;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4352:6;4360:4;4323:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;2536:552::-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:3;:10;2782:8;:15;2744:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2688:121;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;2972:68;2982:30;3010:1;2982:8;:27;;:30;;;;:::i;:::-;3014:25;3037:1;3014:3;:22;;:25;;;;:::i;:::-;2972:9;:68::i;:::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2934:3;;;;;2893:158;;;;3068:13;3061:20;;;2536:552;;;;:::o;292:136:0:-;388:32;394:7;403:2;407:6;415:4;388:5;:32::i;:::-;292:136;;;;:::o;3156:144:2:-;3241:52;3260:12;:10;:12::i;:::-;3274:8;3284;3241:18;:52::i;:::-;3156:144;;:::o;3367:157::-;3457:4;3480:18;:27;3499:7;3480:27;;;;;;;;;;;;;;;:37;3508:8;3480:37;;;;;;;;;;;;;;;;;;;;;;;;;3473:44;;3367:157;;;;:::o;3591:351::-;3714:14;3731:12;:10;:12::i;:::-;3714:29;;3765:6;3757:14;;:4;:14;;;;:49;;;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3858:6;3866:4;3829:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3753:129;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;:::-;3704:238;3591:351;;;;;:::o;763:146:9:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;11523:282:2:-;11658:1;11644:16;;:2;:16;;;11640:88;;11714:1;11683:34;;;;;;;;;;;:::i;:::-;;;;;;;;11640:88;11737:61;11772:1;11776:2;11780:3;11785:6;11793:4;11737:26;:61::i;:::-;11523:282;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;9015:445:2:-;9222:1;9208:16;;:2;:16;;;9204:88;;9278:1;9247:34;;;;;;;;;;;:::i;:::-;;;;;;;;9204:88;9321:1;9305:18;;:4;:18;;;9301:88;;9375:1;9346:32;;;;;;;;;;;:::i;:::-;;;;;;;;9301:88;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;4603:197:6:-;4689:11;4777:4;4772:3;4768:14;4761:4;4756:3;4752:14;4748:35;4742:42;4735:49;;4603:197;;;;:::o;4204:::-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;10746:346:2:-;10856:1;10842:16;;:2;:16;;;10838:88;;10912:1;10881:34;;;;;;;;;;;:::i;:::-;;;;;;;;10838:88;10936:20;10958:23;10985:29;11004:2;11008:5;10985:18;:29::i;:::-;10935:79;;;;11024:61;11059:1;11063:2;11067:3;11072:6;11080:4;11024:26;:61::i;:::-;10828:264;;10746:346;;;;:::o;13268:315::-;13395:1;13375:22;;:8;:22;;;13371:94;;13451:1;13420:34;;;;;;;;;;;:::i;:::-;;;;;;;;13371:94;13512:8;13474:18;:25;13493:5;13474:25;;;;;;;;;;;;;;;:35;13500:8;13474:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13557:8;13535:41;;13550:5;13535:41;;;13567:8;13535:41;;;;;;:::i;:::-;;;;;;;;13268:315;;;:::o;8151:463::-;8287:1;8273:16;;:2;:16;;;8269:88;;8343:1;8312:34;;;;;;;;;;;:::i;:::-;;;;;;;;8269:88;8386:1;8370:18;;:4;:18;;;8366:88;;8440:1;8411:32;;;;;;;;;;;:::i;:::-;;;;;;;;8366:88;8464:20;8486:23;8513:29;8532:2;8536:5;8513:18;:29::i;:::-;8463:79;;;;8552:55;8579:4;8585:2;8589:3;8594:6;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;:12::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;16082:849::-;16190:23;16215;16376:4;16370:11;16360:21;;16446:1;16438:6;16431:17;16584:8;16577:4;16569:6;16565:17;16558:35;16706:4;16698:6;16694:17;16684:27;;16739:1;16731:6;16724:17;16780:8;16773:4;16765:6;16761:17;16754:35;16909:4;16901:6;16897:17;16891:4;16884:31;16082:849;;;;;:::o;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;:12::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;13761:975::-;13984:1;13967:2;:14;;;:18;13963:767;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:719;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:350;;14488:2;14465:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:350;14658:6;14652:13;14643:6;14639:2;14635:15;14628:38;14001:719;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:767;13761:975;;;;;;:::o;14924:1042::-;15172:1;15155:2;:14;;;:18;15151:809;;;15210:2;15193:43;;;15237:8;15247:4;15253:3;15258:6;15266:4;15193:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15189:761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15607:1;15590:6;:13;:18;15586:350;;15718:2;15695:26;;;;;;;;;;;:::i;:::-;;;;;;;;15586:350;15888:6;15882:13;15873:6;15869:2;15865:15;15858:38;15189:761;15362:48;;;15350:60;;;:8;:60;;;;15346:179;;15503:2;15480:26;;;;;;;;;;;:::i;:::-;;;;;;;;15346:179;15272:267;15151:809;14924:1042;;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:246::-;3909:1;3919:113;3933:6;3930:1;3927:13;3919:113;;;4018:1;4013:3;4009:11;4003:18;3999:1;3994:3;3990:11;3983:39;3955:2;3952:1;3948:10;3943:15;;3919:113;;;4066:1;4057:6;4052:3;4048:16;4041:27;3890:184;3828:246;;;:::o;4080:102::-;4121:6;4172:2;4168:7;4163:2;4156:5;4152:14;4148:28;4138:38;;4080:102;;;:::o;4188:377::-;4276:3;4304:39;4337:5;4304:39;:::i;:::-;4359:71;4423:6;4418:3;4359:71;:::i;:::-;4352:78;;4439:65;4497:6;4492:3;4485:4;4478:5;4474:16;4439:65;:::i;:::-;4529:29;4551:6;4529:29;:::i;:::-;4524:3;4520:39;4513:46;;4280:285;4188:377;;;;:::o;4571:313::-;4684:4;4722:2;4711:9;4707:18;4699:26;;4771:9;4765:4;4761:20;4757:1;4746:9;4742:17;4735:47;4799:78;4872:4;4863:6;4799:78;:::i;:::-;4791:86;;4571:313;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:180;5061:77;5058:1;5051:88;5158:4;5155:1;5148:15;5182:4;5179:1;5172:15;5199:281;5282:27;5304:4;5282:27;:::i;:::-;5274:6;5270:40;5412:6;5400:10;5397:22;5376:18;5364:10;5361:34;5358:62;5355:88;;;5423:18;;:::i;:::-;5355:88;5463:10;5459:2;5452:22;5242:238;5199:281;;:::o;5486:129::-;5520:6;5547:20;;:::i;:::-;5537:30;;5576:33;5604:4;5596:6;5576:33;:::i;:::-;5486:129;;;:::o;5621:311::-;5698:4;5788:18;5780:6;5777:30;5774:56;;;5810:18;;:::i;:::-;5774:56;5860:4;5852:6;5848:17;5840:25;;5920:4;5914;5910:15;5902:23;;5621:311;;;:::o;5938:117::-;6047:1;6044;6037:12;6078:710;6174:5;6199:81;6215:64;6272:6;6215:64;:::i;:::-;6199:81;:::i;:::-;6190:90;;6300:5;6329:6;6322:5;6315:21;6363:4;6356:5;6352:16;6345:23;;6416:4;6408:6;6404:17;6396:6;6392:30;6445:3;6437:6;6434:15;6431:122;;;6464:79;;:::i;:::-;6431:122;6579:6;6562:220;6596:6;6591:3;6588:15;6562:220;;;6671:3;6700:37;6733:3;6721:10;6700:37;:::i;:::-;6695:3;6688:50;6767:4;6762:3;6758:14;6751:21;;6638:144;6622:4;6617:3;6613:14;6606:21;;6562:220;;;6566:21;6180:608;;6078:710;;;;;:::o;6811:370::-;6882:5;6931:3;6924:4;6916:6;6912:17;6908:27;6898:122;;6939:79;;:::i;:::-;6898:122;7056:6;7043:20;7081:94;7171:3;7163:6;7156:4;7148:6;7144:17;7081:94;:::i;:::-;7072:103;;6888:293;6811:370;;;;:::o;7187:117::-;7296:1;7293;7286:12;7310:307;7371:4;7461:18;7453:6;7450:30;7447:56;;;7483:18;;:::i;:::-;7447:56;7521:29;7543:6;7521:29;:::i;:::-;7513:37;;7605:4;7599;7595:15;7587:23;;7310:307;;;:::o;7623:146::-;7720:6;7715:3;7710;7697:30;7761:1;7752:6;7747:3;7743:16;7736:27;7623:146;;;:::o;7775:423::-;7852:5;7877:65;7893:48;7934:6;7893:48;:::i;:::-;7877:65;:::i;:::-;7868:74;;7965:6;7958:5;7951:21;8003:4;7996:5;7992:16;8041:3;8032:6;8027:3;8023:16;8020:25;8017:112;;;8048:79;;:::i;:::-;8017:112;8138:54;8185:6;8180:3;8175;8138:54;:::i;:::-;7858:340;7775:423;;;;;:::o;8217:338::-;8272:5;8321:3;8314:4;8306:6;8302:17;8298:27;8288:122;;8329:79;;:::i;:::-;8288:122;8446:6;8433:20;8471:78;8545:3;8537:6;8530:4;8522:6;8518:17;8471:78;:::i;:::-;8462:87;;8278:277;8217:338;;;;:::o;8561:1363::-;8706:6;8714;8722;8730;8779:3;8767:9;8758:7;8754:23;8750:33;8747:120;;;8786:79;;:::i;:::-;8747:120;8906:1;8931:53;8976:7;8967:6;8956:9;8952:22;8931:53;:::i;:::-;8921:63;;8877:117;9061:2;9050:9;9046:18;9033:32;9092:18;9084:6;9081:30;9078:117;;;9114:79;;:::i;:::-;9078:117;9219:78;9289:7;9280:6;9269:9;9265:22;9219:78;:::i;:::-;9209:88;;9004:303;9374:2;9363:9;9359:18;9346:32;9405:18;9397:6;9394:30;9391:117;;;9427:79;;:::i;:::-;9391:117;9532:78;9602:7;9593:6;9582:9;9578:22;9532:78;:::i;:::-;9522:88;;9317:303;9687:2;9676:9;9672:18;9659:32;9718:18;9710:6;9707:30;9704:117;;;9740:79;;:::i;:::-;9704:117;9845:62;9899:7;9890:6;9879:9;9875:22;9845:62;:::i;:::-;9835:72;;9630:287;8561:1363;;;;;;;:::o;9930:1509::-;10084:6;10092;10100;10108;10116;10165:3;10153:9;10144:7;10140:23;10136:33;10133:120;;;10172:79;;:::i;:::-;10133:120;10292:1;10317:53;10362:7;10353:6;10342:9;10338:22;10317:53;:::i;:::-;10307:63;;10263:117;10419:2;10445:53;10490:7;10481:6;10470:9;10466:22;10445:53;:::i;:::-;10435:63;;10390:118;10575:2;10564:9;10560:18;10547:32;10606:18;10598:6;10595:30;10592:117;;;10628:79;;:::i;:::-;10592:117;10733:78;10803:7;10794:6;10783:9;10779:22;10733:78;:::i;:::-;10723:88;;10518:303;10888:2;10877:9;10873:18;10860:32;10919:18;10911:6;10908:30;10905:117;;;10941:79;;:::i;:::-;10905:117;11046:78;11116:7;11107:6;11096:9;11092:22;11046:78;:::i;:::-;11036:88;;10831:303;11201:3;11190:9;11186:19;11173:33;11233:18;11225:6;11222:30;11219:117;;;11255:79;;:::i;:::-;11219:117;11360:62;11414:7;11405:6;11394:9;11390:22;11360:62;:::i;:::-;11350:72;;11144:288;9930:1509;;;;;;;;:::o;11445:311::-;11522:4;11612:18;11604:6;11601:30;11598:56;;;11634:18;;:::i;:::-;11598:56;11684:4;11676:6;11672:17;11664:25;;11744:4;11738;11734:15;11726:23;;11445:311;;;:::o;11779:710::-;11875:5;11900:81;11916:64;11973:6;11916:64;:::i;:::-;11900:81;:::i;:::-;11891:90;;12001:5;12030:6;12023:5;12016:21;12064:4;12057:5;12053:16;12046:23;;12117:4;12109:6;12105:17;12097:6;12093:30;12146:3;12138:6;12135:15;12132:122;;;12165:79;;:::i;:::-;12132:122;12280:6;12263:220;12297:6;12292:3;12289:15;12263:220;;;12372:3;12401:37;12434:3;12422:10;12401:37;:::i;:::-;12396:3;12389:50;12468:4;12463:3;12459:14;12452:21;;12339:144;12323:4;12318:3;12314:14;12307:21;;12263:220;;;12267:21;11881:608;;11779:710;;;;;:::o;12512:370::-;12583:5;12632:3;12625:4;12617:6;12613:17;12609:27;12599:122;;12640:79;;:::i;:::-;12599:122;12757:6;12744:20;12782:94;12872:3;12864:6;12857:4;12849:6;12845:17;12782:94;:::i;:::-;12773:103;;12589:293;12512:370;;;;:::o;12888:894::-;13006:6;13014;13063:2;13051:9;13042:7;13038:23;13034:32;13031:119;;;13069:79;;:::i;:::-;13031:119;13217:1;13206:9;13202:17;13189:31;13247:18;13239:6;13236:30;13233:117;;;13269:79;;:::i;:::-;13233:117;13374:78;13444:7;13435:6;13424:9;13420:22;13374:78;:::i;:::-;13364:88;;13160:302;13529:2;13518:9;13514:18;13501:32;13560:18;13552:6;13549:30;13546:117;;;13582:79;;:::i;:::-;13546:117;13687:78;13757:7;13748:6;13737:9;13733:22;13687:78;:::i;:::-;13677:88;;13472:303;12888:894;;;;;:::o;13788:114::-;13855:6;13889:5;13883:12;13873:22;;13788:114;;;:::o;13908:184::-;14007:11;14041:6;14036:3;14029:19;14081:4;14076:3;14072:14;14057:29;;13908:184;;;;:::o;14098:132::-;14165:4;14188:3;14180:11;;14218:4;14213:3;14209:14;14201:22;;14098:132;;;:::o;14236:108::-;14313:24;14331:5;14313:24;:::i;:::-;14308:3;14301:37;14236:108;;:::o;14350:179::-;14419:10;14440:46;14482:3;14474:6;14440:46;:::i;:::-;14518:4;14513:3;14509:14;14495:28;;14350:179;;;;:::o;14535:113::-;14605:4;14637;14632:3;14628:14;14620:22;;14535:113;;;:::o;14684:732::-;14803:3;14832:54;14880:5;14832:54;:::i;:::-;14902:86;14981:6;14976:3;14902:86;:::i;:::-;14895:93;;15012:56;15062:5;15012:56;:::i;:::-;15091:7;15122:1;15107:284;15132:6;15129:1;15126:13;15107:284;;;15208:6;15202:13;15235:63;15294:3;15279:13;15235:63;:::i;:::-;15228:70;;15321:60;15374:6;15321:60;:::i;:::-;15311:70;;15167:224;15154:1;15151;15147:9;15142:14;;15107:284;;;15111:14;15407:3;15400:10;;14808:608;;;14684:732;;;;:::o;15422:373::-;15565:4;15603:2;15592:9;15588:18;15580:26;;15652:9;15646:4;15642:20;15638:1;15627:9;15623:17;15616:47;15680:108;15783:4;15774:6;15680:108;:::i;:::-;15672:116;;15422:373;;;;:::o;15801:943::-;15896:6;15904;15912;15920;15969:3;15957:9;15948:7;15944:23;15940:33;15937:120;;;15976:79;;:::i;:::-;15937:120;16096:1;16121:53;16166:7;16157:6;16146:9;16142:22;16121:53;:::i;:::-;16111:63;;16067:117;16223:2;16249:53;16294:7;16285:6;16274:9;16270:22;16249:53;:::i;:::-;16239:63;;16194:118;16351:2;16377:53;16422:7;16413:6;16402:9;16398:22;16377:53;:::i;:::-;16367:63;;16322:118;16507:2;16496:9;16492:18;16479:32;16538:18;16530:6;16527:30;16524:117;;;16560:79;;:::i;:::-;16524:117;16665:62;16719:7;16710:6;16699:9;16695:22;16665:62;:::i;:::-;16655:72;;16450:287;15801:943;;;;;;;:::o;16750:116::-;16820:21;16835:5;16820:21;:::i;:::-;16813:5;16810:32;16800:60;;16856:1;16853;16846:12;16800:60;16750:116;:::o;16872:133::-;16915:5;16953:6;16940:20;16931:29;;16969:30;16993:5;16969:30;:::i;:::-;16872:133;;;;:::o;17011:468::-;17076:6;17084;17133:2;17121:9;17112:7;17108:23;17104:32;17101:119;;;17139:79;;:::i;:::-;17101:119;17259:1;17284:53;17329:7;17320:6;17309:9;17305:22;17284:53;:::i;:::-;17274:63;;17230:117;17386:2;17412:50;17454:7;17445:6;17434:9;17430:22;17412:50;:::i;:::-;17402:60;;17357:115;17011:468;;;;;:::o;17485:474::-;17553:6;17561;17610:2;17598:9;17589:7;17585:23;17581:32;17578:119;;;17616:79;;:::i;:::-;17578:119;17736:1;17761:53;17806:7;17797:6;17786:9;17782:22;17761:53;:::i;:::-;17751:63;;17707:117;17863:2;17889:53;17934:7;17925:6;17914:9;17910:22;17889:53;:::i;:::-;17879:63;;17834:118;17485:474;;;;;:::o;17965:1089::-;18069:6;18077;18085;18093;18101;18150:3;18138:9;18129:7;18125:23;18121:33;18118:120;;;18157:79;;:::i;:::-;18118:120;18277:1;18302:53;18347:7;18338:6;18327:9;18323:22;18302:53;:::i;:::-;18292:63;;18248:117;18404:2;18430:53;18475:7;18466:6;18455:9;18451:22;18430:53;:::i;:::-;18420:63;;18375:118;18532:2;18558:53;18603:7;18594:6;18583:9;18579:22;18558:53;:::i;:::-;18548:63;;18503:118;18660:2;18686:53;18731:7;18722:6;18711:9;18707:22;18686:53;:::i;:::-;18676:63;;18631:118;18816:3;18805:9;18801:19;18788:33;18848:18;18840:6;18837:30;18834:117;;;18870:79;;:::i;:::-;18834:117;18975:62;19029:7;19020:6;19009:9;19005:22;18975:62;:::i;:::-;18965:72;;18759:288;17965:1089;;;;;;;;:::o;19060:180::-;19108:77;19105:1;19098:88;19205:4;19202:1;19195:15;19229:4;19226:1;19219:15;19246:320;19290:6;19327:1;19321:4;19317:12;19307:22;;19374:1;19368:4;19364:12;19395:18;19385:81;;19451:4;19443:6;19439:17;19429:27;;19385:81;19513:2;19505:6;19502:14;19482:18;19479:38;19476:84;;19532:18;;:::i;:::-;19476:84;19297:269;19246:320;;;:::o;19572:118::-;19659:24;19677:5;19659:24;:::i;:::-;19654:3;19647:37;19572:118;;:::o;19696:332::-;19817:4;19855:2;19844:9;19840:18;19832:26;;19868:71;19936:1;19925:9;19921:17;19912:6;19868:71;:::i;:::-;19949:72;20017:2;20006:9;20002:18;19993:6;19949:72;:::i;:::-;19696:332;;;;;:::o;20034:::-;20155:4;20193:2;20182:9;20178:18;20170:26;;20206:71;20274:1;20263:9;20259:17;20250:6;20206:71;:::i;:::-;20287:72;20355:2;20344:9;20340:18;20331:6;20287:72;:::i;:::-;20034:332;;;;;:::o;20372:180::-;20420:77;20417:1;20410:88;20517:4;20514:1;20507:15;20541:4;20538:1;20531:15;20558:222;20651:4;20689:2;20678:9;20674:18;20666:26;;20702:71;20770:1;20759:9;20755:17;20746:6;20702:71;:::i;:::-;20558:222;;;;:::o;20786:553::-;20963:4;21001:3;20990:9;20986:19;20978:27;;21015:71;21083:1;21072:9;21068:17;21059:6;21015:71;:::i;:::-;21096:72;21164:2;21153:9;21149:18;21140:6;21096:72;:::i;:::-;21178;21246:2;21235:9;21231:18;21222:6;21178:72;:::i;:::-;21260;21328:2;21317:9;21313:18;21304:6;21260:72;:::i;:::-;20786:553;;;;;;;:::o;21345:180::-;21393:77;21390:1;21383:88;21490:4;21487:1;21480:15;21514:4;21511:1;21504:15;21531:191;21571:3;21590:20;21608:1;21590:20;:::i;:::-;21585:25;;21624:20;21642:1;21624:20;:::i;:::-;21619:25;;21667:1;21664;21660:9;21653:16;;21688:3;21685:1;21682:10;21679:36;;;21695:18;;:::i;:::-;21679:36;21531:191;;;;:::o;21728:634::-;21949:4;21987:2;21976:9;21972:18;21964:26;;22036:9;22030:4;22026:20;22022:1;22011:9;22007:17;22000:47;22064:108;22167:4;22158:6;22064:108;:::i;:::-;22056:116;;22219:9;22213:4;22209:20;22204:2;22193:9;22189:18;22182:48;22247:108;22350:4;22341:6;22247:108;:::i;:::-;22239:116;;21728:634;;;;;:::o;22368:98::-;22419:6;22453:5;22447:12;22437:22;;22368:98;;;:::o;22472:168::-;22555:11;22589:6;22584:3;22577:19;22629:4;22624:3;22620:14;22605:29;;22472:168;;;;:::o;22646:373::-;22732:3;22760:38;22792:5;22760:38;:::i;:::-;22814:70;22877:6;22872:3;22814:70;:::i;:::-;22807:77;;22893:65;22951:6;22946:3;22939:4;22932:5;22928:16;22893:65;:::i;:::-;22983:29;23005:6;22983:29;:::i;:::-;22978:3;22974:39;22967:46;;22736:283;22646:373;;;;:::o;23025:751::-;23248:4;23286:3;23275:9;23271:19;23263:27;;23300:71;23368:1;23357:9;23353:17;23344:6;23300:71;:::i;:::-;23381:72;23449:2;23438:9;23434:18;23425:6;23381:72;:::i;:::-;23463;23531:2;23520:9;23516:18;23507:6;23463:72;:::i;:::-;23545;23613:2;23602:9;23598:18;23589:6;23545:72;:::i;:::-;23665:9;23659:4;23655:20;23649:3;23638:9;23634:19;23627:49;23693:76;23764:4;23755:6;23693:76;:::i;:::-;23685:84;;23025:751;;;;;;;;:::o;23782:141::-;23838:5;23869:6;23863:13;23854:22;;23885:32;23911:5;23885:32;:::i;:::-;23782:141;;;;:::o;23929:349::-;23998:6;24047:2;24035:9;24026:7;24022:23;24018:32;24015:119;;;24053:79;;:::i;:::-;24015:119;24173:1;24198:63;24253:7;24244:6;24233:9;24229:22;24198:63;:::i;:::-;24188:73;;24144:127;23929:349;;;;:::o;24284:1053::-;24607:4;24645:3;24634:9;24630:19;24622:27;;24659:71;24727:1;24716:9;24712:17;24703:6;24659:71;:::i;:::-;24740:72;24808:2;24797:9;24793:18;24784:6;24740:72;:::i;:::-;24859:9;24853:4;24849:20;24844:2;24833:9;24829:18;24822:48;24887:108;24990:4;24981:6;24887:108;:::i;:::-;24879:116;;25042:9;25036:4;25032:20;25027:2;25016:9;25012:18;25005:48;25070:108;25173:4;25164:6;25070:108;:::i;:::-;25062:116;;25226:9;25220:4;25216:20;25210:3;25199:9;25195:19;25188:49;25254:76;25325:4;25316:6;25254:76;:::i;:::-;25246:84;;24284:1053;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1689000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,uint256,bytes)": "infinite",
								"mintBatch(address,uint256[],uint256[],bytes)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "786",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 177,
									"end": 601,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 177,
									"end": 601,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 177,
									"end": 601,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 219,
									"end": 284,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 219,
									"end": 284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 219,
									"end": 284,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 219,
									"end": 284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 219,
									"end": 284,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 219,
									"end": 284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 219,
									"end": 284,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 219,
									"end": 284,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 219,
									"end": 284,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 219,
									"end": 284,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH data",
									"source": 2,
									"value": "BE7838470A3C26528D43BAE23565234ED295A39BDE7B6C68AC16C023B38BF94F"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 177,
									"end": 601,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 177,
									"end": 601,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10355,
									"end": 10361,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 10348,
									"end": 10361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10282,
									"end": 10368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 177,
									"end": 601,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 177,
									"end": 601,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 177,
									"end": 601,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 601,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 177,
									"end": 601,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 601,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 601,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 177,
									"end": 601,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 601,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220435a15d91dfff23a56afe70aa6c418d16427b85e71be4960e94ce47ff39ddac664736f6c63430008160033",
									".code": [
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "731133E9"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "1F7FDFFA"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 601,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 440,
											"end": 598,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 440,
											"end": 598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 440,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 440,
											"end": 598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 440,
											"end": 598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 440,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 440,
											"end": 598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 440,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 440,
											"end": 598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 292,
											"end": 428,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 292,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 292,
											"end": 428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 292,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 292,
											"end": 428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 292,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 292,
											"end": 428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1642,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 440,
											"end": 598,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 440,
											"end": 598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 556,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 567,
											"end": 569,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 571,
											"end": 574,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 576,
											"end": 583,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 585,
											"end": 589,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 556,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 556,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 556,
											"end": 590,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4225,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4225,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4255,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4270,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4300,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4323,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4385,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4198,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2707,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2790,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2744,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2852,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3017,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2972,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2953,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 292,
											"end": 428,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 292,
											"end": 428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 394,
											"end": 401,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 403,
											"end": 405,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 407,
											"end": 413,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 415,
											"end": 419,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 388,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 388,
											"end": 420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 420,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 388,
											"end": 420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 292,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3260,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3260,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3282,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3292,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3241,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3506,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3516,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3731,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3731,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3761,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3776,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3829,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3891,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11658,
											"end": 11659,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11644,
											"end": 11646,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11640,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 11640,
											"end": 11728,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11714,
											"end": 11715,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 11683,
											"end": 11717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11640,
											"end": 11728,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 11640,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11737,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 11772,
											"end": 11773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11776,
											"end": 11778,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11780,
											"end": 11783,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11785,
											"end": 11791,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11793,
											"end": 11797,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11737,
											"end": 11763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 11737,
											"end": 11798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11737,
											"end": 11798,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 11737,
											"end": 11798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11523,
											"end": 11805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9210,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 9247,
											"end": 9281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9309,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 9346,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 9425,
											"end": 9429,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 9398,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4290,
											"end": 4301,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4373,
											"end": 4376,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4383,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4360,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4353,
											"end": 4367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4343,
											"end": 4385,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10912,
											"end": 10913,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 10881,
											"end": 10915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10958,
											"end": 10981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 11004,
											"end": 11006,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11008,
											"end": 11013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 10985,
											"end": 11014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 11059,
											"end": 11060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11065,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11067,
											"end": 11070,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11080,
											"end": 11084,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 11024,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13395,
											"end": 13396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13383,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13451,
											"end": 13452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "CED3E10000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 13420,
											"end": 13454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13512,
											"end": 13520,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13493,
											"end": 13498,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13508,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13557,
											"end": 13565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13550,
											"end": 13555,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13567,
											"end": 13575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 13535,
											"end": 13576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 8312,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8374,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 8411,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8536,
											"end": 8541,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 8513,
											"end": 8542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 8552,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 7205,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7251,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7300,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7300,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 7514,
											"end": 7522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7538,
											"end": 7543,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7483,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7625,
											"end": 7633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 7589,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7267,
											"end": 7688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16082,
											"end": 16931,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 16082,
											"end": 16931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16190,
											"end": 16213,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 16215,
											"end": 16238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16376,
											"end": 16380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16370,
											"end": 16381,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16360,
											"end": 16381,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16360,
											"end": 16381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16446,
											"end": 16447,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16438,
											"end": 16444,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16431,
											"end": 16448,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16584,
											"end": 16592,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16577,
											"end": 16581,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16569,
											"end": 16575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16565,
											"end": 16582,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16558,
											"end": 16593,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16706,
											"end": 16710,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16698,
											"end": 16704,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16694,
											"end": 16711,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16684,
											"end": 16711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16684,
											"end": 16711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16739,
											"end": 16740,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16731,
											"end": 16737,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16724,
											"end": 16741,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16780,
											"end": 16788,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16773,
											"end": 16777,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16765,
											"end": 16771,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16754,
											"end": 16789,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16909,
											"end": 16913,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16901,
											"end": 16907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16897,
											"end": 16914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16891,
											"end": 16895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16884,
											"end": 16915,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16082,
											"end": 16931,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16082,
											"end": 16931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16082,
											"end": 16931,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16082,
											"end": 16931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16082,
											"end": 16931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16082,
											"end": 16931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5292,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5315,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5407,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5407,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5559,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5604,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5672,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5715,
											"end": 5720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5784,
											"end": 5795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5797,
											"end": 5802,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 5751,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5952,
											"end": 5954,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 6016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6080,
											"end": 6082,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6070,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6182,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6260,
											"end": 6261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6240,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 6281,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6362,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14736,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 13761,
											"end": 14736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13985,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14730,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 13963,
											"end": 14730,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14377,
											"end": 14378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14360,
											"end": 14373,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14356,
											"end": 14706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 14356,
											"end": 14706,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14488,
											"end": 14490,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 14465,
											"end": 14491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14465,
											"end": 14491,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14356,
											"end": 14706,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 14356,
											"end": 14706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14658,
											"end": 14664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14652,
											"end": 14665,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14643,
											"end": 14649,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14639,
											"end": 14641,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14635,
											"end": 14650,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14628,
											"end": 14666,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 14001,
											"end": 14720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14273,
											"end": 14275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 14250,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14077,
											"end": 14309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14730,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 13963,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14924,
											"end": 15966,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 14924,
											"end": 15966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15172,
											"end": 15173,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15155,
											"end": 15157,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15155,
											"end": 15169,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15155,
											"end": 15169,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15155,
											"end": 15169,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15151,
											"end": 15960,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15151,
											"end": 15960,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 15151,
											"end": 15960,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15210,
											"end": 15212,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15236,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15193,
											"end": 15236,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15236,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 15237,
											"end": 15245,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15247,
											"end": 15251,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15253,
											"end": 15256,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15258,
											"end": 15264,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15266,
											"end": 15270,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 15193,
											"end": 15271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 15193,
											"end": 15271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 15193,
											"end": 15271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15607,
											"end": 15608,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15590,
											"end": 15596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15590,
											"end": 15603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15590,
											"end": 15608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15586,
											"end": 15936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 15586,
											"end": 15936,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15718,
											"end": 15720,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 15695,
											"end": 15721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15586,
											"end": 15936,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 15586,
											"end": 15936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15888,
											"end": 15894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15882,
											"end": 15895,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15873,
											"end": 15879,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15869,
											"end": 15871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15865,
											"end": 15880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15858,
											"end": 15896,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 15189,
											"end": 15950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15362,
											"end": 15410,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 15362,
											"end": 15410,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15362,
											"end": 15410,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15350,
											"end": 15410,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15350,
											"end": 15410,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15350,
											"end": 15410,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15350,
											"end": 15358,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15350,
											"end": 15410,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15350,
											"end": 15410,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15350,
											"end": 15410,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15350,
											"end": 15410,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 15346,
											"end": 15525,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15503,
											"end": 15505,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 15480,
											"end": 15506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15525,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 15346,
											"end": 15525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15272,
											"end": 15539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15151,
											"end": 15960,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 15151,
											"end": 15960,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14924,
											"end": 15966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14924,
											"end": 15966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14924,
											"end": 15966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14924,
											"end": 15966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14924,
											"end": 15966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14924,
											"end": 15966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14924,
											"end": 15966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 3327,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 3910,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3933,
											"end": 3939,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3930,
											"end": 3931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3927,
											"end": 3940,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4013,
											"end": 4016,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4009,
											"end": 4020,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4003,
											"end": 4021,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3999,
											"end": 4000,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4022,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3955,
											"end": 3957,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3953,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3948,
											"end": 3958,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4063,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4052,
											"end": 4055,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4048,
											"end": 4064,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4068,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3890,
											"end": 4074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 4074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4121,
											"end": 4127,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4174,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4165,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4156,
											"end": 4161,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4152,
											"end": 4166,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4148,
											"end": 4176,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4138,
											"end": 4176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4138,
											"end": 4176,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4080,
											"end": 4182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 4337,
											"end": 4342,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 4304,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 4359,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4352,
											"end": 4430,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4352,
											"end": 4430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 4497,
											"end": 4503,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4492,
											"end": 4495,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4483,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4474,
											"end": 4490,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 4439,
											"end": 4504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 4529,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4524,
											"end": 4527,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4520,
											"end": 4559,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4513,
											"end": 4559,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4513,
											"end": 4559,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4280,
											"end": 4565,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4188,
											"end": 4565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4684,
											"end": 4688,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4724,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4771,
											"end": 4780,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4742,
											"end": 4759,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4735,
											"end": 4782,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 4872,
											"end": 4876,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 4869,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 4799,
											"end": 4877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4791,
											"end": 4877,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4791,
											"end": 4877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4571,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4999,
											"end": 5000,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5001,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5193,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 5013,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5061,
											"end": 5138,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5058,
											"end": 5059,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5139,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5158,
											"end": 5162,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 5155,
											"end": 5156,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5148,
											"end": 5163,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5182,
											"end": 5186,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5179,
											"end": 5180,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5187,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 5304,
											"end": 5308,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 5282,
											"end": 5309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5274,
											"end": 5280,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5310,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5412,
											"end": 5418,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5400,
											"end": 5410,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5419,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5376,
											"end": 5394,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5374,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5361,
											"end": 5395,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5358,
											"end": 5420,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 5423,
											"end": 5441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5463,
											"end": 5473,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5459,
											"end": 5461,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5452,
											"end": 5474,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5199,
											"end": 5480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 5547,
											"end": 5567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5537,
											"end": 5567,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5537,
											"end": 5567,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 5604,
											"end": 5608,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5596,
											"end": 5602,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 5576,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5486,
											"end": 5615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5698,
											"end": 5702,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 5810,
											"end": 5828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5860,
											"end": 5864,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5848,
											"end": 5865,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5865,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5865,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5920,
											"end": 5924,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5918,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5910,
											"end": 5925,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5902,
											"end": 5925,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5902,
											"end": 5925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5621,
											"end": 5932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5938,
											"end": 6055,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 5938,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6047,
											"end": 6048,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6037,
											"end": 6049,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6174,
											"end": 6179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 6272,
											"end": 6278,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 6215,
											"end": 6279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 6199,
											"end": 6280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6190,
											"end": 6280,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6190,
											"end": 6280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6300,
											"end": 6305,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6329,
											"end": 6335,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6322,
											"end": 6327,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6315,
											"end": 6336,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6363,
											"end": 6367,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6356,
											"end": 6361,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6352,
											"end": 6368,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6345,
											"end": 6368,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6345,
											"end": 6368,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6416,
											"end": 6420,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6408,
											"end": 6414,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6422,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6445,
											"end": 6448,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6437,
											"end": 6443,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6434,
											"end": 6449,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 6464,
											"end": 6543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6579,
											"end": 6585,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6602,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6594,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6588,
											"end": 6603,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6671,
											"end": 6674,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 6733,
											"end": 6736,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6721,
											"end": 6731,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 6700,
											"end": 6737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6695,
											"end": 6698,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6738,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6767,
											"end": 6771,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6762,
											"end": 6765,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6758,
											"end": 6772,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6751,
											"end": 6772,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6751,
											"end": 6772,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6638,
											"end": 6782,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6622,
											"end": 6626,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6617,
											"end": 6620,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6606,
											"end": 6627,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6606,
											"end": 6627,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6566,
											"end": 6587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6180,
											"end": 6788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6180,
											"end": 6788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6882,
											"end": 6887,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 6934,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6924,
											"end": 6928,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6916,
											"end": 6922,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6912,
											"end": 6929,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6908,
											"end": 6935,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 6939,
											"end": 7018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 7062,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7043,
											"end": 7063,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 7171,
											"end": 7174,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7169,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7160,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7148,
											"end": 7154,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7144,
											"end": 7161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 7081,
											"end": 7175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7072,
											"end": 7175,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7072,
											"end": 7175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6888,
											"end": 7181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 7181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7187,
											"end": 7304,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 7187,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7296,
											"end": 7297,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7294,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7286,
											"end": 7298,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7371,
											"end": 7375,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7453,
											"end": 7459,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 7483,
											"end": 7501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 7543,
											"end": 7549,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 7521,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7513,
											"end": 7550,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7513,
											"end": 7550,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7605,
											"end": 7609,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7599,
											"end": 7603,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7595,
											"end": 7610,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7587,
											"end": 7610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7587,
											"end": 7610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7310,
											"end": 7617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7715,
											"end": 7718,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7710,
											"end": 7713,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7697,
											"end": 7727,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 7761,
											"end": 7762,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7752,
											"end": 7758,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7747,
											"end": 7750,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7743,
											"end": 7759,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7736,
											"end": 7763,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7623,
											"end": 7769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7852,
											"end": 7857,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 7893,
											"end": 7941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 7877,
											"end": 7942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7868,
											"end": 7942,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7868,
											"end": 7942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7965,
											"end": 7971,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7958,
											"end": 7963,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7951,
											"end": 7972,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8003,
											"end": 8007,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7996,
											"end": 8001,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7992,
											"end": 8008,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8041,
											"end": 8044,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8032,
											"end": 8038,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8027,
											"end": 8030,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8023,
											"end": 8039,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 8048,
											"end": 8127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 8185,
											"end": 8191,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8180,
											"end": 8183,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8175,
											"end": 8178,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 8138,
											"end": 8192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7858,
											"end": 8198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 8198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8272,
											"end": 8277,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8324,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8314,
											"end": 8318,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8306,
											"end": 8312,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8302,
											"end": 8319,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8298,
											"end": 8325,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 8329,
											"end": 8408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8433,
											"end": 8453,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 8545,
											"end": 8548,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8537,
											"end": 8543,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8530,
											"end": 8534,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8522,
											"end": 8528,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8518,
											"end": 8535,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 8471,
											"end": 8549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8462,
											"end": 8549,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8462,
											"end": 8549,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8278,
											"end": 8555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8706,
											"end": 8712,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8714,
											"end": 8720,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8722,
											"end": 8728,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8730,
											"end": 8736,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8779,
											"end": 8782,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8767,
											"end": 8776,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8758,
											"end": 8765,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8754,
											"end": 8777,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8750,
											"end": 8783,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8747,
											"end": 8867,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8747,
											"end": 8867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 8747,
											"end": 8867,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8786,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 8786,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 8786,
											"end": 8865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8786,
											"end": 8865,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 8786,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8747,
											"end": 8867,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 8747,
											"end": 8867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8906,
											"end": 8907,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8931,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 8976,
											"end": 8983,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8967,
											"end": 8973,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8956,
											"end": 8965,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 8974,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8931,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 8931,
											"end": 8984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8931,
											"end": 8984,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 8931,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8921,
											"end": 8984,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8921,
											"end": 8984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8877,
											"end": 8994,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9061,
											"end": 9063,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9050,
											"end": 9059,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9064,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9033,
											"end": 9065,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9092,
											"end": 9110,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9084,
											"end": 9090,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9081,
											"end": 9111,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9078,
											"end": 9195,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9078,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 9078,
											"end": 9195,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9114,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 9114,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 9114,
											"end": 9193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9114,
											"end": 9193,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 9114,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9078,
											"end": 9195,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 9078,
											"end": 9195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9219,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 9289,
											"end": 9296,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9280,
											"end": 9286,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9269,
											"end": 9278,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9265,
											"end": 9287,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9219,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 9219,
											"end": 9297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9219,
											"end": 9297,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 9219,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9209,
											"end": 9297,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9209,
											"end": 9297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9004,
											"end": 9307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9374,
											"end": 9376,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9363,
											"end": 9372,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9405,
											"end": 9423,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9397,
											"end": 9403,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9394,
											"end": 9424,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9391,
											"end": 9508,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9391,
											"end": 9508,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 9391,
											"end": 9508,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9427,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 9427,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 9427,
											"end": 9506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9427,
											"end": 9506,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 9427,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9391,
											"end": 9508,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 9391,
											"end": 9508,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9532,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 9602,
											"end": 9609,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9593,
											"end": 9599,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9582,
											"end": 9591,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9578,
											"end": 9600,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9532,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 9532,
											"end": 9610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9532,
											"end": 9610,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 9532,
											"end": 9610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9522,
											"end": 9610,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9522,
											"end": 9610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9317,
											"end": 9620,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9687,
											"end": 9689,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9676,
											"end": 9685,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9672,
											"end": 9690,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9659,
											"end": 9691,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9718,
											"end": 9736,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9710,
											"end": 9716,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9707,
											"end": 9737,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9704,
											"end": 9821,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9704,
											"end": 9821,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 9704,
											"end": 9821,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9740,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 9740,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 9740,
											"end": 9819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9740,
											"end": 9819,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 9740,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9704,
											"end": 9821,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 9704,
											"end": 9821,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9845,
											"end": 9907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 9899,
											"end": 9906,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9890,
											"end": 9896,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9879,
											"end": 9888,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9875,
											"end": 9897,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9845,
											"end": 9907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 9845,
											"end": 9907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9845,
											"end": 9907,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 9845,
											"end": 9907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9835,
											"end": 9907,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9835,
											"end": 9907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9630,
											"end": 9917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8561,
											"end": 9924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10084,
											"end": 10090,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10092,
											"end": 10098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10100,
											"end": 10106,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10108,
											"end": 10114,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10116,
											"end": 10122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10165,
											"end": 10168,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 10153,
											"end": 10162,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10144,
											"end": 10151,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10140,
											"end": 10163,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10136,
											"end": 10169,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10133,
											"end": 10253,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10133,
											"end": 10253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 10133,
											"end": 10253,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10172,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 10172,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 10172,
											"end": 10251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10172,
											"end": 10251,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 10172,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10133,
											"end": 10253,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 10133,
											"end": 10253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10292,
											"end": 10293,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10317,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 10362,
											"end": 10369,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10353,
											"end": 10359,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10342,
											"end": 10351,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 10338,
											"end": 10360,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10317,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 10317,
											"end": 10370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10317,
											"end": 10370,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 10317,
											"end": 10370,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10307,
											"end": 10370,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 10307,
											"end": 10370,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10263,
											"end": 10380,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10419,
											"end": 10421,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10445,
											"end": 10498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 10490,
											"end": 10497,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10481,
											"end": 10487,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10470,
											"end": 10479,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 10466,
											"end": 10488,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10445,
											"end": 10498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 10445,
											"end": 10498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10445,
											"end": 10498,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 10445,
											"end": 10498,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10435,
											"end": 10498,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 10435,
											"end": 10498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10390,
											"end": 10508,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10575,
											"end": 10577,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10564,
											"end": 10573,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10560,
											"end": 10578,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10547,
											"end": 10579,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10598,
											"end": 10604,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10595,
											"end": 10625,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10592,
											"end": 10709,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10592,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 10592,
											"end": 10709,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10628,
											"end": 10707,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 10628,
											"end": 10707,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 10628,
											"end": 10707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10628,
											"end": 10707,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 10628,
											"end": 10707,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10592,
											"end": 10709,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 10592,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10733,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 10803,
											"end": 10810,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10794,
											"end": 10800,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10783,
											"end": 10792,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 10779,
											"end": 10801,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10733,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 10733,
											"end": 10811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10733,
											"end": 10811,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 10733,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10723,
											"end": 10811,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10723,
											"end": 10811,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10518,
											"end": 10821,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10888,
											"end": 10890,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10877,
											"end": 10886,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10860,
											"end": 10892,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10911,
											"end": 10917,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10908,
											"end": 10938,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10905,
											"end": 11022,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10905,
											"end": 11022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 10905,
											"end": 11022,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10941,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 10941,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 10941,
											"end": 11020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10941,
											"end": 11020,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 10941,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10905,
											"end": 11022,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 10905,
											"end": 11022,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11046,
											"end": 11124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 11116,
											"end": 11123,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 11107,
											"end": 11113,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11096,
											"end": 11105,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 11092,
											"end": 11114,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11046,
											"end": 11124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 11046,
											"end": 11124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11046,
											"end": 11124,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 11046,
											"end": 11124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11036,
											"end": 11124,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11036,
											"end": 11124,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10831,
											"end": 11134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11201,
											"end": 11204,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 11190,
											"end": 11199,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11186,
											"end": 11205,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11173,
											"end": 11206,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 11233,
											"end": 11251,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11225,
											"end": 11231,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11222,
											"end": 11252,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 11255,
											"end": 11334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11360,
											"end": 11422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 11414,
											"end": 11421,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 11405,
											"end": 11411,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11394,
											"end": 11403,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 11390,
											"end": 11412,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11360,
											"end": 11422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 11360,
											"end": 11422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11360,
											"end": 11422,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 11360,
											"end": 11422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11350,
											"end": 11422,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11350,
											"end": 11422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11144,
											"end": 11432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9930,
											"end": 11439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11445,
											"end": 11756,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 11445,
											"end": 11756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11522,
											"end": 11526,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11612,
											"end": 11630,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11604,
											"end": 11610,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11601,
											"end": 11631,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11598,
											"end": 11654,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11598,
											"end": 11654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 11598,
											"end": 11654,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 11634,
											"end": 11652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11598,
											"end": 11654,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 11598,
											"end": 11654,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11684,
											"end": 11688,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11672,
											"end": 11689,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 11664,
											"end": 11689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11664,
											"end": 11689,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11744,
											"end": 11748,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11738,
											"end": 11742,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11734,
											"end": 11749,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11726,
											"end": 11749,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11726,
											"end": 11749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11445,
											"end": 11756,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11445,
											"end": 11756,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11445,
											"end": 11756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11445,
											"end": 11756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11875,
											"end": 11880,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11900,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 11916,
											"end": 11980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 11973,
											"end": 11979,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11916,
											"end": 11980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 11916,
											"end": 11980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11916,
											"end": 11980,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 11916,
											"end": 11980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11900,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 11900,
											"end": 11981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11900,
											"end": 11981,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 11900,
											"end": 11981,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11891,
											"end": 11981,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11891,
											"end": 11981,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12001,
											"end": 12006,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12030,
											"end": 12036,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12023,
											"end": 12028,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12016,
											"end": 12037,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12064,
											"end": 12068,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12057,
											"end": 12062,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12053,
											"end": 12069,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12046,
											"end": 12069,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12046,
											"end": 12069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12117,
											"end": 12121,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12109,
											"end": 12115,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12105,
											"end": 12122,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 12097,
											"end": 12103,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12093,
											"end": 12123,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12146,
											"end": 12149,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12138,
											"end": 12144,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12132,
											"end": 12254,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12132,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 12132,
											"end": 12254,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12165,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 12165,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 12165,
											"end": 12244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12165,
											"end": 12244,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 12165,
											"end": 12244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12132,
											"end": 12254,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 12132,
											"end": 12254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12280,
											"end": 12286,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12297,
											"end": 12303,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12292,
											"end": 12295,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12289,
											"end": 12304,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12372,
											"end": 12375,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12401,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 12434,
											"end": 12437,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 12422,
											"end": 12432,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12401,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 12401,
											"end": 12438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12401,
											"end": 12438,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 12401,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12396,
											"end": 12399,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12389,
											"end": 12439,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12468,
											"end": 12472,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12463,
											"end": 12466,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12459,
											"end": 12473,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12452,
											"end": 12473,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12452,
											"end": 12473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12339,
											"end": 12483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12323,
											"end": 12327,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12318,
											"end": 12321,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12314,
											"end": 12328,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12307,
											"end": 12328,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12307,
											"end": 12328,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12267,
											"end": 12288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11881,
											"end": 12489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11881,
											"end": 12489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11779,
											"end": 12489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12583,
											"end": 12588,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12632,
											"end": 12635,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12625,
											"end": 12629,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 12617,
											"end": 12623,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12613,
											"end": 12630,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12609,
											"end": 12636,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 12599,
											"end": 12721,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 12599,
											"end": 12721,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12640,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 12640,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 12640,
											"end": 12719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12640,
											"end": 12719,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 12640,
											"end": 12719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12599,
											"end": 12721,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 12599,
											"end": 12721,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12757,
											"end": 12763,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12744,
											"end": 12764,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 12782,
											"end": 12876,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 12872,
											"end": 12875,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12864,
											"end": 12870,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12857,
											"end": 12861,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12849,
											"end": 12855,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12845,
											"end": 12862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12782,
											"end": 12876,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 12782,
											"end": 12876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12782,
											"end": 12876,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 12782,
											"end": 12876,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12773,
											"end": 12876,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12773,
											"end": 12876,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12589,
											"end": 12882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12512,
											"end": 12882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13006,
											"end": 13012,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13014,
											"end": 13020,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13063,
											"end": 13065,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13051,
											"end": 13060,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13042,
											"end": 13049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13038,
											"end": 13061,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13034,
											"end": 13066,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 13031,
											"end": 13150,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13031,
											"end": 13150,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 13031,
											"end": 13150,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13069,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 13069,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 13069,
											"end": 13148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13069,
											"end": 13148,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 13069,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13031,
											"end": 13150,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 13031,
											"end": 13150,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13217,
											"end": 13218,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13206,
											"end": 13215,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13202,
											"end": 13219,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13189,
											"end": 13220,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 13247,
											"end": 13265,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13239,
											"end": 13245,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13236,
											"end": 13266,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13233,
											"end": 13350,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13233,
											"end": 13350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 13233,
											"end": 13350,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13269,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 13269,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 13269,
											"end": 13348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13269,
											"end": 13348,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 13269,
											"end": 13348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13233,
											"end": 13350,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 13233,
											"end": 13350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13374,
											"end": 13452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 13444,
											"end": 13451,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13435,
											"end": 13441,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13424,
											"end": 13433,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13420,
											"end": 13442,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13374,
											"end": 13452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 13374,
											"end": 13452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13374,
											"end": 13452,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 13374,
											"end": 13452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13364,
											"end": 13452,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13364,
											"end": 13452,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13160,
											"end": 13462,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13529,
											"end": 13531,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13518,
											"end": 13527,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13514,
											"end": 13532,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13501,
											"end": 13533,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 13560,
											"end": 13578,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13552,
											"end": 13558,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13549,
											"end": 13579,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13546,
											"end": 13663,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13546,
											"end": 13663,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 13546,
											"end": 13663,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13582,
											"end": 13661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 13582,
											"end": 13661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 13582,
											"end": 13661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13582,
											"end": 13661,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 13582,
											"end": 13661,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13546,
											"end": 13663,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 13546,
											"end": 13663,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13687,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 13757,
											"end": 13764,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13748,
											"end": 13754,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13737,
											"end": 13746,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13733,
											"end": 13755,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13687,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 13687,
											"end": 13765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13687,
											"end": 13765,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 13687,
											"end": 13765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13677,
											"end": 13765,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13677,
											"end": 13765,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13472,
											"end": 13775,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12888,
											"end": 13782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 13902,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 13788,
											"end": 13902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13855,
											"end": 13861,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13889,
											"end": 13894,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13883,
											"end": 13895,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13873,
											"end": 13895,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13873,
											"end": 13895,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 13902,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 13902,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 13902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 13902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14007,
											"end": 14018,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14041,
											"end": 14047,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14036,
											"end": 14039,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14029,
											"end": 14048,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14081,
											"end": 14085,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14076,
											"end": 14079,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14072,
											"end": 14086,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14057,
											"end": 14086,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14057,
											"end": 14086,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13908,
											"end": 14092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14098,
											"end": 14230,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 14098,
											"end": 14230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14165,
											"end": 14169,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14188,
											"end": 14191,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14180,
											"end": 14191,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14180,
											"end": 14191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14218,
											"end": 14222,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14213,
											"end": 14216,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14209,
											"end": 14223,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14201,
											"end": 14223,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14201,
											"end": 14223,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14098,
											"end": 14230,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14098,
											"end": 14230,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14098,
											"end": 14230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14098,
											"end": 14230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14236,
											"end": 14344,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 14236,
											"end": 14344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14313,
											"end": 14337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 14331,
											"end": 14336,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14313,
											"end": 14337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 14313,
											"end": 14337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14313,
											"end": 14337,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 14313,
											"end": 14337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14308,
											"end": 14311,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14301,
											"end": 14338,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14236,
											"end": 14344,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14236,
											"end": 14344,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14236,
											"end": 14344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14419,
											"end": 14429,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14440,
											"end": 14486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 14482,
											"end": 14485,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14474,
											"end": 14480,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14440,
											"end": 14486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 14440,
											"end": 14486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14440,
											"end": 14486,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 14440,
											"end": 14486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14518,
											"end": 14522,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14513,
											"end": 14516,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14509,
											"end": 14523,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14495,
											"end": 14523,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14495,
											"end": 14523,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14350,
											"end": 14529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14535,
											"end": 14648,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 14535,
											"end": 14648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14605,
											"end": 14609,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14637,
											"end": 14641,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14632,
											"end": 14635,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14628,
											"end": 14642,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14620,
											"end": 14642,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14620,
											"end": 14642,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14535,
											"end": 14648,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14535,
											"end": 14648,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14535,
											"end": 14648,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14535,
											"end": 14648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14803,
											"end": 14806,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14832,
											"end": 14886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 14880,
											"end": 14885,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14832,
											"end": 14886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 14832,
											"end": 14886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14832,
											"end": 14886,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 14832,
											"end": 14886,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14902,
											"end": 14988,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 14981,
											"end": 14987,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14976,
											"end": 14979,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14902,
											"end": 14988,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 14902,
											"end": 14988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14902,
											"end": 14988,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 14902,
											"end": 14988,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14895,
											"end": 14988,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14895,
											"end": 14988,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 15062,
											"end": 15067,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 15012,
											"end": 15068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15068,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 15012,
											"end": 15068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15091,
											"end": 15098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15122,
											"end": 15123,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15132,
											"end": 15138,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15129,
											"end": 15130,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15126,
											"end": 15139,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15208,
											"end": 15214,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15202,
											"end": 15215,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15235,
											"end": 15298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 15294,
											"end": 15297,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 15279,
											"end": 15292,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15235,
											"end": 15298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 15235,
											"end": 15298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15235,
											"end": 15298,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 15235,
											"end": 15298,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15228,
											"end": 15298,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 15228,
											"end": 15298,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15321,
											"end": 15381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 15374,
											"end": 15380,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15321,
											"end": 15381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 15321,
											"end": 15381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15321,
											"end": 15381,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 15321,
											"end": 15381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15311,
											"end": 15381,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15311,
											"end": 15381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15167,
											"end": 15391,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15154,
											"end": 15155,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15151,
											"end": 15152,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15147,
											"end": 15156,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15142,
											"end": 15156,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15142,
											"end": 15156,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15111,
											"end": 15125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15407,
											"end": 15410,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15400,
											"end": 15410,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15400,
											"end": 15410,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14808,
											"end": 15416,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14808,
											"end": 15416,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14808,
											"end": 15416,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14684,
											"end": 15416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15565,
											"end": 15569,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15603,
											"end": 15605,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15592,
											"end": 15601,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15588,
											"end": 15606,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15580,
											"end": 15606,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15580,
											"end": 15606,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15652,
											"end": 15661,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15646,
											"end": 15650,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15642,
											"end": 15662,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15638,
											"end": 15639,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15627,
											"end": 15636,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15623,
											"end": 15640,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15616,
											"end": 15663,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15680,
											"end": 15788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 15783,
											"end": 15787,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15774,
											"end": 15780,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15680,
											"end": 15788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 15680,
											"end": 15788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15680,
											"end": 15788,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 15680,
											"end": 15788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15672,
											"end": 15788,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15672,
											"end": 15788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15422,
											"end": 15795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15801,
											"end": 16744,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 15801,
											"end": 16744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15896,
											"end": 15902,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15904,
											"end": 15910,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15912,
											"end": 15918,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15920,
											"end": 15926,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15969,
											"end": 15972,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 15957,
											"end": 15966,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15948,
											"end": 15955,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 15944,
											"end": 15967,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15940,
											"end": 15973,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 15937,
											"end": 16057,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15937,
											"end": 16057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 15937,
											"end": 16057,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15976,
											"end": 16055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 15976,
											"end": 16055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 15976,
											"end": 16055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15976,
											"end": 16055,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 15976,
											"end": 16055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15937,
											"end": 16057,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 15937,
											"end": 16057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16096,
											"end": 16097,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16121,
											"end": 16174,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 16166,
											"end": 16173,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 16157,
											"end": 16163,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16146,
											"end": 16155,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 16142,
											"end": 16164,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16121,
											"end": 16174,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 16121,
											"end": 16174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16121,
											"end": 16174,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 16121,
											"end": 16174,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16111,
											"end": 16174,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 16111,
											"end": 16174,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16067,
											"end": 16184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16223,
											"end": 16225,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16249,
											"end": 16302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 16294,
											"end": 16301,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 16285,
											"end": 16291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16274,
											"end": 16283,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 16270,
											"end": 16292,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16249,
											"end": 16302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 16249,
											"end": 16302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16249,
											"end": 16302,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 16249,
											"end": 16302,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16239,
											"end": 16302,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16239,
											"end": 16302,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16194,
											"end": 16312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16351,
											"end": 16353,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16377,
											"end": 16430,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 16422,
											"end": 16429,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 16413,
											"end": 16419,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16402,
											"end": 16411,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 16398,
											"end": 16420,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16377,
											"end": 16430,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 16377,
											"end": 16430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16377,
											"end": 16430,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 16377,
											"end": 16430,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16367,
											"end": 16430,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16367,
											"end": 16430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16440,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16507,
											"end": 16509,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 16496,
											"end": 16505,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16492,
											"end": 16510,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16479,
											"end": 16511,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 16538,
											"end": 16556,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16530,
											"end": 16536,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16527,
											"end": 16557,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 16524,
											"end": 16641,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16524,
											"end": 16641,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 16524,
											"end": 16641,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16560,
											"end": 16639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 16560,
											"end": 16639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 16560,
											"end": 16639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16560,
											"end": 16639,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 16560,
											"end": 16639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16524,
											"end": 16641,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 16524,
											"end": 16641,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16665,
											"end": 16727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 16719,
											"end": 16726,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 16710,
											"end": 16716,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16699,
											"end": 16708,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 16695,
											"end": 16717,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16665,
											"end": 16727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 16665,
											"end": 16727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16665,
											"end": 16727,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 16665,
											"end": 16727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16655,
											"end": 16727,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16655,
											"end": 16727,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16450,
											"end": 16737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15801,
											"end": 16744,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15801,
											"end": 16744,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 15801,
											"end": 16744,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15801,
											"end": 16744,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 15801,
											"end": 16744,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15801,
											"end": 16744,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15801,
											"end": 16744,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15801,
											"end": 16744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16750,
											"end": 16866,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 16750,
											"end": 16866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16820,
											"end": 16841,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 16835,
											"end": 16840,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16820,
											"end": 16841,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 16820,
											"end": 16841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16820,
											"end": 16841,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 16820,
											"end": 16841,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16813,
											"end": 16818,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16810,
											"end": 16842,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 16800,
											"end": 16860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 16800,
											"end": 16860,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16856,
											"end": 16857,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16853,
											"end": 16854,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16846,
											"end": 16858,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16800,
											"end": 16860,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 16800,
											"end": 16860,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16750,
											"end": 16866,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16750,
											"end": 16866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16872,
											"end": 17005,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 16872,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16915,
											"end": 16920,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16953,
											"end": 16959,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16940,
											"end": 16960,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 16931,
											"end": 16960,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16931,
											"end": 16960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16969,
											"end": 16999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 16993,
											"end": 16998,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16969,
											"end": 16999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 16969,
											"end": 16999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16969,
											"end": 16999,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 16969,
											"end": 16999,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16872,
											"end": 17005,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16872,
											"end": 17005,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16872,
											"end": 17005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16872,
											"end": 17005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16872,
											"end": 17005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17011,
											"end": 17479,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 17011,
											"end": 17479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17076,
											"end": 17082,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17084,
											"end": 17090,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17133,
											"end": 17135,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17121,
											"end": 17130,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17112,
											"end": 17119,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17108,
											"end": 17131,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17104,
											"end": 17136,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 17101,
											"end": 17220,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17101,
											"end": 17220,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 17101,
											"end": 17220,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17139,
											"end": 17218,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 17139,
											"end": 17218,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 17139,
											"end": 17218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17139,
											"end": 17218,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 17139,
											"end": 17218,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17101,
											"end": 17220,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 17101,
											"end": 17220,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17259,
											"end": 17260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17284,
											"end": 17337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 17329,
											"end": 17336,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17320,
											"end": 17326,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17309,
											"end": 17318,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17305,
											"end": 17327,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17284,
											"end": 17337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 17284,
											"end": 17337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17284,
											"end": 17337,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 17284,
											"end": 17337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17274,
											"end": 17337,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17274,
											"end": 17337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17230,
											"end": 17347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17386,
											"end": 17388,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17412,
											"end": 17462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 17454,
											"end": 17461,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17445,
											"end": 17451,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17434,
											"end": 17443,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17430,
											"end": 17452,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17412,
											"end": 17462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 17412,
											"end": 17462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17412,
											"end": 17462,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 17412,
											"end": 17462,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17402,
											"end": 17462,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17402,
											"end": 17462,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17357,
											"end": 17472,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17011,
											"end": 17479,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17011,
											"end": 17479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17011,
											"end": 17479,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17011,
											"end": 17479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17011,
											"end": 17479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17011,
											"end": 17479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17485,
											"end": 17959,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 17485,
											"end": 17959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17553,
											"end": 17559,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17561,
											"end": 17567,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17610,
											"end": 17612,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17598,
											"end": 17607,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17589,
											"end": 17596,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17585,
											"end": 17608,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17581,
											"end": 17613,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 17578,
											"end": 17697,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17578,
											"end": 17697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 17578,
											"end": 17697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17616,
											"end": 17695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 17616,
											"end": 17695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 17616,
											"end": 17695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17616,
											"end": 17695,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 17616,
											"end": 17695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17578,
											"end": 17697,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 17578,
											"end": 17697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17736,
											"end": 17737,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17761,
											"end": 17814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 17806,
											"end": 17813,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17797,
											"end": 17803,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17786,
											"end": 17795,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17782,
											"end": 17804,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17761,
											"end": 17814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 17761,
											"end": 17814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17761,
											"end": 17814,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 17761,
											"end": 17814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17751,
											"end": 17814,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17751,
											"end": 17814,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17707,
											"end": 17824,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17863,
											"end": 17865,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17889,
											"end": 17942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 17934,
											"end": 17941,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17925,
											"end": 17931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17914,
											"end": 17923,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17910,
											"end": 17932,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17889,
											"end": 17942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 17889,
											"end": 17942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17889,
											"end": 17942,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 17889,
											"end": 17942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17879,
											"end": 17942,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17879,
											"end": 17942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17834,
											"end": 17952,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17485,
											"end": 17959,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17485,
											"end": 17959,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17485,
											"end": 17959,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17485,
											"end": 17959,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17485,
											"end": 17959,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17485,
											"end": 17959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17965,
											"end": 19054,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 17965,
											"end": 19054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18069,
											"end": 18075,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18077,
											"end": 18083,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18085,
											"end": 18091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18093,
											"end": 18099,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18101,
											"end": 18107,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18150,
											"end": 18153,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 18138,
											"end": 18147,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18129,
											"end": 18136,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 18125,
											"end": 18148,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18121,
											"end": 18154,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 18118,
											"end": 18238,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18118,
											"end": 18238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 18118,
											"end": 18238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18157,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 18157,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 18157,
											"end": 18236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18157,
											"end": 18236,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 18157,
											"end": 18236,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18118,
											"end": 18238,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 18118,
											"end": 18238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18277,
											"end": 18278,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18302,
											"end": 18355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 18347,
											"end": 18354,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 18338,
											"end": 18344,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18327,
											"end": 18336,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 18323,
											"end": 18345,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18302,
											"end": 18355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 18302,
											"end": 18355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18302,
											"end": 18355,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 18302,
											"end": 18355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18292,
											"end": 18355,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 18292,
											"end": 18355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18248,
											"end": 18365,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18404,
											"end": 18406,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18430,
											"end": 18483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 18475,
											"end": 18482,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 18466,
											"end": 18472,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18455,
											"end": 18464,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 18451,
											"end": 18473,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18430,
											"end": 18483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 18430,
											"end": 18483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18430,
											"end": 18483,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 18430,
											"end": 18483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18420,
											"end": 18483,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 18420,
											"end": 18483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18375,
											"end": 18493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18532,
											"end": 18534,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18558,
											"end": 18611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 18603,
											"end": 18610,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 18594,
											"end": 18600,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18583,
											"end": 18592,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 18579,
											"end": 18601,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18558,
											"end": 18611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 18558,
											"end": 18611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18558,
											"end": 18611,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 18558,
											"end": 18611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18548,
											"end": 18611,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 18548,
											"end": 18611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18503,
											"end": 18621,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18660,
											"end": 18662,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 18686,
											"end": 18739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 18731,
											"end": 18738,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 18722,
											"end": 18728,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18711,
											"end": 18720,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 18707,
											"end": 18729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18686,
											"end": 18739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 18686,
											"end": 18739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18686,
											"end": 18739,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 18686,
											"end": 18739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18676,
											"end": 18739,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18676,
											"end": 18739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18631,
											"end": 18749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18816,
											"end": 18819,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 18805,
											"end": 18814,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18801,
											"end": 18820,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18788,
											"end": 18821,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 18848,
											"end": 18866,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18840,
											"end": 18846,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18837,
											"end": 18867,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 18834,
											"end": 18951,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18834,
											"end": 18951,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 18834,
											"end": 18951,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18870,
											"end": 18949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 18870,
											"end": 18949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 18870,
											"end": 18949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18870,
											"end": 18949,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 18870,
											"end": 18949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18834,
											"end": 18951,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 18834,
											"end": 18951,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18975,
											"end": 19037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 19029,
											"end": 19036,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 19020,
											"end": 19026,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19009,
											"end": 19018,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 19005,
											"end": 19027,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18975,
											"end": 19037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 18975,
											"end": 19037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18975,
											"end": 19037,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 18975,
											"end": 19037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18965,
											"end": 19037,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18965,
											"end": 19037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18759,
											"end": 19047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17965,
											"end": 19054,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17965,
											"end": 19054,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 17965,
											"end": 19054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17965,
											"end": 19054,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17965,
											"end": 19054,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 17965,
											"end": 19054,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17965,
											"end": 19054,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17965,
											"end": 19054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17965,
											"end": 19054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19060,
											"end": 19240,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 19060,
											"end": 19240,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19108,
											"end": 19185,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19105,
											"end": 19106,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19098,
											"end": 19186,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19205,
											"end": 19209,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 19202,
											"end": 19203,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 19195,
											"end": 19210,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19229,
											"end": 19233,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 19226,
											"end": 19227,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19219,
											"end": 19234,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 19246,
											"end": 19566,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 19246,
											"end": 19566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19290,
											"end": 19296,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19327,
											"end": 19328,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 19321,
											"end": 19325,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19317,
											"end": 19329,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 19307,
											"end": 19329,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19307,
											"end": 19329,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19374,
											"end": 19375,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 19368,
											"end": 19372,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19364,
											"end": 19376,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19395,
											"end": 19413,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19385,
											"end": 19466,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 19385,
											"end": 19466,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19451,
											"end": 19455,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 19443,
											"end": 19449,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19439,
											"end": 19456,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19429,
											"end": 19456,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19429,
											"end": 19456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19385,
											"end": 19466,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 19385,
											"end": 19466,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19513,
											"end": 19515,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19505,
											"end": 19511,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19502,
											"end": 19516,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 19482,
											"end": 19500,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19479,
											"end": 19517,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19476,
											"end": 19560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 19476,
											"end": 19560,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19532,
											"end": 19550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 19532,
											"end": 19550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 19532,
											"end": 19550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19532,
											"end": 19550,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 19532,
											"end": 19550,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19476,
											"end": 19560,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 19476,
											"end": 19560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19297,
											"end": 19566,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19246,
											"end": 19566,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19246,
											"end": 19566,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19246,
											"end": 19566,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19246,
											"end": 19566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19572,
											"end": 19690,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 19572,
											"end": 19690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19659,
											"end": 19683,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 19677,
											"end": 19682,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19659,
											"end": 19683,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 19659,
											"end": 19683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19659,
											"end": 19683,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 19659,
											"end": 19683,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19654,
											"end": 19657,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19647,
											"end": 19684,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19572,
											"end": 19690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19572,
											"end": 19690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19572,
											"end": 19690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19696,
											"end": 20028,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 19696,
											"end": 20028,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19817,
											"end": 19821,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19855,
											"end": 19857,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19844,
											"end": 19853,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19840,
											"end": 19858,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19832,
											"end": 19858,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19832,
											"end": 19858,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19868,
											"end": 19939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 19936,
											"end": 19937,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19925,
											"end": 19934,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19921,
											"end": 19938,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19912,
											"end": 19918,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19868,
											"end": 19939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 19868,
											"end": 19939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19868,
											"end": 19939,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 19868,
											"end": 19939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19949,
											"end": 20021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 20017,
											"end": 20019,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20006,
											"end": 20015,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20002,
											"end": 20020,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19993,
											"end": 19999,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19949,
											"end": 20021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 19949,
											"end": 20021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19949,
											"end": 20021,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 19949,
											"end": 20021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19696,
											"end": 20028,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 19696,
											"end": 20028,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19696,
											"end": 20028,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19696,
											"end": 20028,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19696,
											"end": 20028,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19696,
											"end": 20028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20034,
											"end": 20366,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 20034,
											"end": 20366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20155,
											"end": 20159,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20193,
											"end": 20195,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 20182,
											"end": 20191,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20178,
											"end": 20196,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20170,
											"end": 20196,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20170,
											"end": 20196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20206,
											"end": 20277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 20274,
											"end": 20275,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20263,
											"end": 20272,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20259,
											"end": 20276,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20250,
											"end": 20256,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20206,
											"end": 20277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 20206,
											"end": 20277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20206,
											"end": 20277,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 20206,
											"end": 20277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20287,
											"end": 20359,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 20355,
											"end": 20357,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20344,
											"end": 20353,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20340,
											"end": 20358,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20331,
											"end": 20337,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20287,
											"end": 20359,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 20287,
											"end": 20359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20287,
											"end": 20359,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 20287,
											"end": 20359,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20034,
											"end": 20366,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 20034,
											"end": 20366,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20034,
											"end": 20366,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20034,
											"end": 20366,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20034,
											"end": 20366,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20034,
											"end": 20366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20372,
											"end": 20552,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 20372,
											"end": 20552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20420,
											"end": 20497,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20417,
											"end": 20418,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20410,
											"end": 20498,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20517,
											"end": 20521,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 20514,
											"end": 20515,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 20507,
											"end": 20522,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20541,
											"end": 20545,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 20538,
											"end": 20539,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20531,
											"end": 20546,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 20558,
											"end": 20780,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 20558,
											"end": 20780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20651,
											"end": 20655,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20689,
											"end": 20691,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20678,
											"end": 20687,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20674,
											"end": 20692,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20666,
											"end": 20692,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20666,
											"end": 20692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20702,
											"end": 20773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 20770,
											"end": 20771,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20759,
											"end": 20768,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20755,
											"end": 20772,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20746,
											"end": 20752,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20702,
											"end": 20773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 20702,
											"end": 20773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20702,
											"end": 20773,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 20702,
											"end": 20773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20558,
											"end": 20780,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20558,
											"end": 20780,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20558,
											"end": 20780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20558,
											"end": 20780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20558,
											"end": 20780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20786,
											"end": 21339,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 20786,
											"end": 21339,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20963,
											"end": 20967,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21001,
											"end": 21004,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 20990,
											"end": 20999,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20986,
											"end": 21005,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20978,
											"end": 21005,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20978,
											"end": 21005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21015,
											"end": 21086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 21083,
											"end": 21084,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21072,
											"end": 21081,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21068,
											"end": 21085,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21059,
											"end": 21065,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 21015,
											"end": 21086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 21015,
											"end": 21086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21015,
											"end": 21086,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 21015,
											"end": 21086,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21096,
											"end": 21168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 21164,
											"end": 21166,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21153,
											"end": 21162,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21149,
											"end": 21167,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21140,
											"end": 21146,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21096,
											"end": 21168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 21096,
											"end": 21168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21096,
											"end": 21168,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 21096,
											"end": 21168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21178,
											"end": 21250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 21246,
											"end": 21248,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 21235,
											"end": 21244,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21231,
											"end": 21249,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21222,
											"end": 21228,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21178,
											"end": 21250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 21178,
											"end": 21250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21178,
											"end": 21250,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 21178,
											"end": 21250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21260,
											"end": 21332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 21328,
											"end": 21330,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 21317,
											"end": 21326,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21313,
											"end": 21331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21304,
											"end": 21310,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21260,
											"end": 21332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 21260,
											"end": 21332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21260,
											"end": 21332,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 21260,
											"end": 21332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20786,
											"end": 21339,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 20786,
											"end": 21339,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 20786,
											"end": 21339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20786,
											"end": 21339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20786,
											"end": 21339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20786,
											"end": 21339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20786,
											"end": 21339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20786,
											"end": 21339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21345,
											"end": 21525,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 21345,
											"end": 21525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21393,
											"end": 21470,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21390,
											"end": 21391,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21383,
											"end": 21471,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21490,
											"end": 21494,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 21487,
											"end": 21488,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 21480,
											"end": 21495,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21514,
											"end": 21518,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 21511,
											"end": 21512,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21504,
											"end": 21519,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 21531,
											"end": 21722,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 21531,
											"end": 21722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21571,
											"end": 21574,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21590,
											"end": 21610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 21608,
											"end": 21609,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21590,
											"end": 21610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 21590,
											"end": 21610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21590,
											"end": 21610,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 21590,
											"end": 21610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21585,
											"end": 21610,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21585,
											"end": 21610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21624,
											"end": 21644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 21642,
											"end": 21643,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21624,
											"end": 21644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 21624,
											"end": 21644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21624,
											"end": 21644,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 21624,
											"end": 21644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21619,
											"end": 21644,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21619,
											"end": 21644,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21667,
											"end": 21668,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21664,
											"end": 21665,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21660,
											"end": 21669,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21653,
											"end": 21669,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21653,
											"end": 21669,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21688,
											"end": 21691,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 21685,
											"end": 21686,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21682,
											"end": 21692,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 21679,
											"end": 21715,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 21679,
											"end": 21715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 21679,
											"end": 21715,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21695,
											"end": 21713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 21695,
											"end": 21713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 21695,
											"end": 21713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21695,
											"end": 21713,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 21695,
											"end": 21713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21679,
											"end": 21715,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 21679,
											"end": 21715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21531,
											"end": 21722,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21531,
											"end": 21722,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21531,
											"end": 21722,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21531,
											"end": 21722,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21531,
											"end": 21722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21728,
											"end": 22362,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 21728,
											"end": 22362,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21949,
											"end": 21953,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21987,
											"end": 21989,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 21976,
											"end": 21985,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21972,
											"end": 21990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21964,
											"end": 21990,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21964,
											"end": 21990,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22036,
											"end": 22045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22030,
											"end": 22034,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22026,
											"end": 22046,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22022,
											"end": 22023,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22011,
											"end": 22020,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22007,
											"end": 22024,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22000,
											"end": 22047,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22064,
											"end": 22172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 22167,
											"end": 22171,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22158,
											"end": 22164,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22064,
											"end": 22172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 22064,
											"end": 22172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22064,
											"end": 22172,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 22064,
											"end": 22172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22056,
											"end": 22172,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22056,
											"end": 22172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22219,
											"end": 22228,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22213,
											"end": 22217,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22209,
											"end": 22229,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22204,
											"end": 22206,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22193,
											"end": 22202,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22189,
											"end": 22207,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22182,
											"end": 22230,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22247,
											"end": 22355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 22350,
											"end": 22354,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22341,
											"end": 22347,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22247,
											"end": 22355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 22247,
											"end": 22355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22247,
											"end": 22355,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 22247,
											"end": 22355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22239,
											"end": 22355,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22239,
											"end": 22355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21728,
											"end": 22362,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 21728,
											"end": 22362,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21728,
											"end": 22362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21728,
											"end": 22362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21728,
											"end": 22362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21728,
											"end": 22362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22368,
											"end": 22466,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 22368,
											"end": 22466,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22419,
											"end": 22425,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22453,
											"end": 22458,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22447,
											"end": 22459,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 22437,
											"end": 22459,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22437,
											"end": 22459,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22368,
											"end": 22466,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22368,
											"end": 22466,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22368,
											"end": 22466,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22368,
											"end": 22466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22472,
											"end": 22640,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 22472,
											"end": 22640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22555,
											"end": 22566,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22589,
											"end": 22595,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22584,
											"end": 22587,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22577,
											"end": 22596,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22629,
											"end": 22633,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22624,
											"end": 22627,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22620,
											"end": 22634,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22605,
											"end": 22634,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22605,
											"end": 22634,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22472,
											"end": 22640,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22472,
											"end": 22640,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22472,
											"end": 22640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22472,
											"end": 22640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22472,
											"end": 22640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22646,
											"end": 23019,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 22646,
											"end": 23019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22732,
											"end": 22735,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22760,
											"end": 22798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 22792,
											"end": 22797,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22760,
											"end": 22798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 22760,
											"end": 22798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22760,
											"end": 22798,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 22760,
											"end": 22798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22814,
											"end": 22884,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 22877,
											"end": 22883,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22872,
											"end": 22875,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22814,
											"end": 22884,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 22814,
											"end": 22884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22814,
											"end": 22884,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 22814,
											"end": 22884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22807,
											"end": 22884,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 22807,
											"end": 22884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22893,
											"end": 22958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 22951,
											"end": 22957,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22946,
											"end": 22949,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22939,
											"end": 22943,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22932,
											"end": 22937,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 22928,
											"end": 22944,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22893,
											"end": 22958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 22893,
											"end": 22958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22893,
											"end": 22958,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 22893,
											"end": 22958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22983,
											"end": 23012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 23005,
											"end": 23011,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22983,
											"end": 23012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 22983,
											"end": 23012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22983,
											"end": 23012,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 22983,
											"end": 23012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22978,
											"end": 22981,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22974,
											"end": 23013,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22967,
											"end": 23013,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22967,
											"end": 23013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22736,
											"end": 23019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22646,
											"end": 23019,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22646,
											"end": 23019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22646,
											"end": 23019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22646,
											"end": 23019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22646,
											"end": 23019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23025,
											"end": 23776,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 23025,
											"end": 23776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23248,
											"end": 23252,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23286,
											"end": 23289,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 23275,
											"end": 23284,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23271,
											"end": 23290,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23263,
											"end": 23290,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23263,
											"end": 23290,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23300,
											"end": 23371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 23368,
											"end": 23369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23357,
											"end": 23366,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23353,
											"end": 23370,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23344,
											"end": 23350,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 23300,
											"end": 23371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 23300,
											"end": 23371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23300,
											"end": 23371,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 23300,
											"end": 23371,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23381,
											"end": 23453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 23449,
											"end": 23451,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23438,
											"end": 23447,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23434,
											"end": 23452,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23425,
											"end": 23431,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 23381,
											"end": 23453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 23381,
											"end": 23453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23381,
											"end": 23453,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 23381,
											"end": 23453,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23463,
											"end": 23535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 23531,
											"end": 23533,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 23520,
											"end": 23529,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23516,
											"end": 23534,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23507,
											"end": 23513,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 23463,
											"end": 23535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 23463,
											"end": 23535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23463,
											"end": 23535,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 23463,
											"end": 23535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23545,
											"end": 23617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 23613,
											"end": 23615,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 23602,
											"end": 23611,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23598,
											"end": 23616,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23589,
											"end": 23595,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23545,
											"end": 23617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 23545,
											"end": 23617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23545,
											"end": 23617,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 23545,
											"end": 23617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23665,
											"end": 23674,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23659,
											"end": 23663,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23655,
											"end": 23675,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 23649,
											"end": 23652,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 23638,
											"end": 23647,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23634,
											"end": 23653,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23627,
											"end": 23676,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23693,
											"end": 23769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 23764,
											"end": 23768,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23755,
											"end": 23761,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23693,
											"end": 23769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 23693,
											"end": 23769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23693,
											"end": 23769,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 23693,
											"end": 23769,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23685,
											"end": 23769,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23685,
											"end": 23769,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23025,
											"end": 23776,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 23025,
											"end": 23776,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 23025,
											"end": 23776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23025,
											"end": 23776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23025,
											"end": 23776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23025,
											"end": 23776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23025,
											"end": 23776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23025,
											"end": 23776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23025,
											"end": 23776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23782,
											"end": 23923,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 23782,
											"end": 23923,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23838,
											"end": 23843,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23869,
											"end": 23875,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23863,
											"end": 23876,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 23854,
											"end": 23876,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23854,
											"end": 23876,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23885,
											"end": 23917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 23911,
											"end": 23916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23885,
											"end": 23917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 23885,
											"end": 23917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23885,
											"end": 23917,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 23885,
											"end": 23917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23782,
											"end": 23923,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23782,
											"end": 23923,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23782,
											"end": 23923,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23782,
											"end": 23923,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23782,
											"end": 23923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23929,
											"end": 24278,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 23929,
											"end": 24278,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23998,
											"end": 24004,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24047,
											"end": 24049,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24035,
											"end": 24044,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24026,
											"end": 24033,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24022,
											"end": 24045,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24018,
											"end": 24050,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 24015,
											"end": 24134,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 24015,
											"end": 24134,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 24015,
											"end": 24134,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 24053,
											"end": 24132,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 24053,
											"end": 24132,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 24053,
											"end": 24132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24053,
											"end": 24132,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 24053,
											"end": 24132,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24015,
											"end": 24134,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 24015,
											"end": 24134,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24173,
											"end": 24174,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24198,
											"end": 24261,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 24253,
											"end": 24260,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24244,
											"end": 24250,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24233,
											"end": 24242,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 24229,
											"end": 24251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24198,
											"end": 24261,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 24198,
											"end": 24261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24198,
											"end": 24261,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 24198,
											"end": 24261,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24188,
											"end": 24261,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24188,
											"end": 24261,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24144,
											"end": 24271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23929,
											"end": 24278,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23929,
											"end": 24278,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23929,
											"end": 24278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23929,
											"end": 24278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23929,
											"end": 24278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24284,
											"end": 25337,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 24284,
											"end": 25337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24607,
											"end": 24611,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24645,
											"end": 24648,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 24634,
											"end": 24643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24630,
											"end": 24649,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24622,
											"end": 24649,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24622,
											"end": 24649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24659,
											"end": 24730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 24727,
											"end": 24728,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24716,
											"end": 24725,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24712,
											"end": 24729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24703,
											"end": 24709,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 24659,
											"end": 24730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 24659,
											"end": 24730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24659,
											"end": 24730,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 24659,
											"end": 24730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24740,
											"end": 24812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 24808,
											"end": 24810,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24797,
											"end": 24806,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24793,
											"end": 24811,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24784,
											"end": 24790,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 24740,
											"end": 24812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 24740,
											"end": 24812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24740,
											"end": 24812,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 24740,
											"end": 24812,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24859,
											"end": 24868,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24853,
											"end": 24857,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24849,
											"end": 24869,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24844,
											"end": 24846,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 24833,
											"end": 24842,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24829,
											"end": 24847,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24822,
											"end": 24870,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24887,
											"end": 24995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 24990,
											"end": 24994,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24981,
											"end": 24987,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 24887,
											"end": 24995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 24887,
											"end": 24995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24887,
											"end": 24995,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 24887,
											"end": 24995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24879,
											"end": 24995,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24879,
											"end": 24995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25042,
											"end": 25051,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25036,
											"end": 25040,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25032,
											"end": 25052,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 25027,
											"end": 25029,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 25016,
											"end": 25025,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25012,
											"end": 25030,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25005,
											"end": 25053,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25070,
											"end": 25178,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 25173,
											"end": 25177,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25164,
											"end": 25170,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 25070,
											"end": 25178,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 25070,
											"end": 25178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25070,
											"end": 25178,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 25070,
											"end": 25178,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25062,
											"end": 25178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25062,
											"end": 25178,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25226,
											"end": 25235,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25220,
											"end": 25224,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25216,
											"end": 25236,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 25210,
											"end": 25213,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 25199,
											"end": 25208,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25195,
											"end": 25214,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25188,
											"end": 25237,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25254,
											"end": 25330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 25325,
											"end": 25329,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25316,
											"end": 25322,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 25254,
											"end": 25330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 25254,
											"end": 25330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25254,
											"end": 25330,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 25254,
											"end": 25330,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25246,
											"end": 25330,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25246,
											"end": 25330,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24284,
											"end": 25337,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 24284,
											"end": 25337,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 24284,
											"end": 25337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24284,
											"end": 25337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24284,
											"end": 25337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24284,
											"end": 25337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24284,
											"end": 25337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24284,
											"end": 25337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24284,
											"end": 25337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								},
								"BE7838470A3C26528D43BAE23565234ED295A39BDE7B6C68AC16C023B38BF94F": "68747470733a2f2f6d796170692e636f6d2f6170692f746f6b656e2f7b69647d2e6a736f6e"
							},
							"sourceList": [
								"contracts/SimpleERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256,bytes)": "731133e9",
							"mintBatch(address,uint256[],uint256[],bytes)": "1f7fdffa",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleERC1155.sol\":\"MyERC1155Token\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SimpleERC1155.sol\":{\"keccak256\":\"0x1b96f67f70af4550f0912b8032c69b8d621a5cbe9d618ebca8fc21f6080c71db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19c917a28739c9eabf6b46db5186514b88ef886197f03edf9a57d6df87bb8b3f\",\"dweb:/ipfs/QmZWmxviGpXkyecZkjvxGAXndQDnggzmbWbM62233FjXeh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd05803ef6ae7b7307c409e7bd3e6e8ba54470f09e9594dad8f8bf3a1c7973af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://faa944ac1ba1a80f474815678cc3c90316ae22b26f08cdc3038f393f19f5eb58\",\"dweb:/ipfs/QmS5osseSJwvPzWjRk5jmitQRHp5FjHZA4NxZ1Tk6ohEYG\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xb88683ee1e740b187c66ad4d0671d2e2008d80c629a3a6b4c58a9ce884507718\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aeb2f36a4b5eba9ac00d2a1fe8dbd4d948fd5b008760a37d134d85ff9ba2805\",\"dweb:/ipfs/QmTb7Zs7TCv73hDoUD4n1dgPebssfnniQrCS5E2sUBqwUQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x0f8b8696348d5a57b13d44f5cc63894f0368038c06f6d00bdeda6f9aa13127e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://718159abc22da25c2de7e70f6b7bbbf6b6e20c3db6681893f8049b57f4ee65ce\",\"dweb:/ipfs/QmPJeQ7Qj7mrAwfR69sLjyjUSb44B7yAJXvMG1NFtoTJKv\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x553c1a345186dbf3b85ff238887acf290d5e1fafcc99eb8bf14c48a346a8ca34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39dfd17d675251ba895aff3a3727a48badbb76e40d3d94ae092e8cdbf2ea45f9\",\"dweb:/ipfs/QmQHrDH3fvHoxCFAppEm55Ttp9A4fibNoZgLC3VqJY5arL\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x94ead5f501c98a6e8e612388db946b6d44b38cb32751ff275324efb5d4f19d17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://410dfe51b7c1f073fc8626456d2eab862e7d949c5065e67bd4688990e405868f\",\"dweb:/ipfs/QmfUo3r8GqELwFK8oHmy5WGUbw2kfV1BcS9MBhwqtFynKJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 231,
								"contract": "contracts/SimpleERC1155.sol:MyERC1155Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 237,
								"contract": "contracts/SimpleERC1155.sol:MyERC1155Token",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 239,
								"contract": "contracts/SimpleERC1155.sol:MyERC1155Token",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd05803ef6ae7b7307c409e7bd3e6e8ba54470f09e9594dad8f8bf3a1c7973af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://faa944ac1ba1a80f474815678cc3c90316ae22b26f08cdc3038f393f19f5eb58\",\"dweb:/ipfs/QmS5osseSJwvPzWjRk5jmitQRHp5FjHZA4NxZ1Tk6ohEYG\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xb88683ee1e740b187c66ad4d0671d2e2008d80c629a3a6b4c58a9ce884507718\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aeb2f36a4b5eba9ac00d2a1fe8dbd4d948fd5b008760a37d134d85ff9ba2805\",\"dweb:/ipfs/QmTb7Zs7TCv73hDoUD4n1dgPebssfnniQrCS5E2sUBqwUQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x0f8b8696348d5a57b13d44f5cc63894f0368038c06f6d00bdeda6f9aa13127e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://718159abc22da25c2de7e70f6b7bbbf6b6e20c3db6681893f8049b57f4ee65ce\",\"dweb:/ipfs/QmPJeQ7Qj7mrAwfR69sLjyjUSb44B7yAJXvMG1NFtoTJKv\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x553c1a345186dbf3b85ff238887acf290d5e1fafcc99eb8bf14c48a346a8ca34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39dfd17d675251ba895aff3a3727a48badbb76e40d3d94ae092e8cdbf2ea45f9\",\"dweb:/ipfs/QmQHrDH3fvHoxCFAppEm55Ttp9A4fibNoZgLC3VqJY5arL\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x94ead5f501c98a6e8e612388db946b6d44b38cb32751ff275324efb5d4f19d17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://410dfe51b7c1f073fc8626456d2eab862e7d949c5065e67bd4688990e405868f\",\"dweb:/ipfs/QmfUo3r8GqELwFK8oHmy5WGUbw2kfV1BcS9MBhwqtFynKJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 231,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 237,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 239,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xb88683ee1e740b187c66ad4d0671d2e2008d80c629a3a6b4c58a9ce884507718\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aeb2f36a4b5eba9ac00d2a1fe8dbd4d948fd5b008760a37d134d85ff9ba2805\",\"dweb:/ipfs/QmTb7Zs7TCv73hDoUD4n1dgPebssfnniQrCS5E2sUBqwUQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x0f8b8696348d5a57b13d44f5cc63894f0368038c06f6d00bdeda6f9aa13127e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://718159abc22da25c2de7e70f6b7bbbf6b6e20c3db6681893f8049b57f4ee65ce\",\"dweb:/ipfs/QmPJeQ7Qj7mrAwfR69sLjyjUSb44B7yAJXvMG1NFtoTJKv\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xb88683ee1e740b187c66ad4d0671d2e2008d80c629a3a6b4c58a9ce884507718\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aeb2f36a4b5eba9ac00d2a1fe8dbd4d948fd5b008760a37d134d85ff9ba2805\",\"dweb:/ipfs/QmTb7Zs7TCv73hDoUD4n1dgPebssfnniQrCS5E2sUBqwUQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x553c1a345186dbf3b85ff238887acf290d5e1fafcc99eb8bf14c48a346a8ca34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39dfd17d675251ba895aff3a3727a48badbb76e40d3d94ae092e8cdbf2ea45f9\",\"dweb:/ipfs/QmQHrDH3fvHoxCFAppEm55Ttp9A4fibNoZgLC3VqJY5arL\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cd410f4f3a07594b369520fafc74a06ad246be2a109c361ce738dc474e2dddc364736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cd410f4f3a07594b369520fafc74a06ad246be2a109c361ce738dc474e2dddc364736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD COINBASE 0xF 0x4F GASPRICE SMOD MSIZE 0x4B CALLDATASIZE SWAP6 KECCAK256 STATICCALL 0xFC PUSH21 0xA06AD246BE2A109C361CE738DC474E2DDDC364736F PUSH13 0x63430008160033000000000000 ",
							"sourceMap": "276:4526:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cd410f4f3a07594b369520fafc74a06ad246be2a109c361ce738dc474e2dddc364736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD COINBASE 0xF 0x4F GASPRICE SMOD MSIZE 0x4B CALLDATASIZE SWAP6 KECCAK256 STATICCALL 0xFC PUSH21 0xA06AD246BE2A109C361CE738DC474E2DDDC364736F PUSH13 0x63430008160033000000000000 ",
							"sourceMap": "276:4526:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd410f4f3a07594b369520fafc74a06ad246be2a109c361ce738dc474e2dddc364736f6c63430008160033",
									".code": [
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/SimpleERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x94ead5f501c98a6e8e612388db946b6d44b38cb32751ff275324efb5d4f19d17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://410dfe51b7c1f073fc8626456d2eab862e7d949c5065e67bd4688990e405868f\",\"dweb:/ipfs/QmfUo3r8GqELwFK8oHmy5WGUbw2kfV1BcS9MBhwqtFynKJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":1246:3931  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":1246:3931  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203f80062afc6c3b3281bb447cdf61d9e0488beeaccd54424023b6bc394335562564736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203f80062afc6c3b3281bb447cdf61d9e0488beeaccd54424023b6bc394335562564736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH DUP1 MOD 0x2A 0xFC PUSH13 0x3B3281BB447CDF61D9E0488BEE 0xAC 0xCD SLOAD TIMESTAMP BLOCKHASH 0x23 0xB6 0xBC CODECOPY NUMBER CALLDATALOAD JUMP 0x25 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1246:2685:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203f80062afc6c3b3281bb447cdf61d9e0488beeaccd54424023b6bc394335562564736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH DUP1 MOD 0x2A 0xFC PUSH13 0x3B3281BB447CDF61D9E0488BEE 0xAC 0xCD SLOAD TIMESTAMP BLOCKHASH 0x23 0xB6 0xBC CODECOPY NUMBER CALLDATALOAD JUMP 0x25 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1246:2685:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f80062afc6c3b3281bb447cdf61d9e0488beeaccd54424023b6bc394335562564736f6c63430008160033",
									".code": [
										{
											"begin": 1246,
											"end": 3931,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"contracts/SimpleERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":203:15453  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":203:15453  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122047bb97db57b7926122781c5a07a2050fa567afddabb8a452ae4b0578773cc65464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047bb97db57b7926122781c5a07a2050fa567afddabb8a452ae4b0578773cc65464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xBB SWAP8 0xDB JUMPI 0xB7 SWAP3 PUSH2 0x2278 SHR GAS SMOD LOG2 SDIV 0xF 0xA5 PUSH8 0xAFDDABB8A452AE4B SDIV PUSH25 0x773CC65464736F6C6343000816003300000000000000000000 ",
							"sourceMap": "203:15250:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047bb97db57b7926122781c5a07a2050fa567afddabb8a452ae4b0578773cc65464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xBB SWAP8 0xDB JUMPI 0xB7 SWAP3 PUSH2 0x2278 SHR GAS SMOD LOG2 SDIV 0xF 0xA5 PUSH8 0xAFDDABB8A452AE4B SDIV PUSH25 0x773CC65464736F6C6343000816003300000000000000000000 ",
							"sourceMap": "203:15250:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15453,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047bb97db57b7926122781c5a07a2050fa567afddabb8a452ae4b0578773cc65464736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15453,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15453,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15453,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15453,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15453,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15453,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15453,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15453,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15453,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"contracts/SimpleERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x94ead5f501c98a6e8e612388db946b6d44b38cb32751ff275324efb5d4f19d17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://410dfe51b7c1f073fc8626456d2eab862e7d949c5065e67bd4688990e405868f\",\"dweb:/ipfs/QmfUo3r8GqELwFK8oHmy5WGUbw2kfV1BcS9MBhwqtFynKJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/SimpleERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1604
						],
						"Context": [
							1626
						],
						"ERC1155": [
							1240
						],
						"ERC165": [
							1760
						],
						"IERC1155": [
							1363
						],
						"IERC1155Errors": [
							189
						],
						"IERC1155MetadataURI": [
							1421
						],
						"IERC1155Receiver": [
							1405
						],
						"IERC165": [
							1772
						],
						"MyERC1155Token": [
							52
						]
					},
					"id": 53,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 53,
							"sourceUnit": 1241,
							"src": "61:112:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC1155",
										"nameLocations": [
											"204:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1240,
										"src": "204:7:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "204:7:0"
								}
							],
							"canonicalName": "MyERC1155Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 52,
							"linearizedBaseContracts": [
								52,
								1240,
								189,
								1421,
								1363,
								1760,
								1772,
								1626
							],
							"name": "MyERC1155Token",
							"nameLocation": "186:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "282:2:0",
										"statements": []
									},
									"id": 11,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f6d796170692e636f6d2f6170692f746f6b656e2f7b69647d2e6a736f6e",
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "241:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_be7838470a3c26528d43bae23565234ed295a39bde7b6c68ac16c023b38bf94f",
														"typeString": "literal_string \"https://myapi.com/api/token/{id}.json\""
													},
													"value": "https://myapi.com/api/token/{id}.json"
												}
											],
											"id": 8,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 6,
												"name": "ERC1155",
												"nameLocations": [
													"233:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1240,
												"src": "233:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "233:48:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "230:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "282:0:0"
									},
									"scope": 52,
									"src": "219:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "377:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 23,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "394:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 24,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "403:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 25,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "407:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 26,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "415:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 22,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "388:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "388:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "388:32:0"
											}
										]
									},
									"functionSelector": "731133e9",
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "301:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "314:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "306:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "331:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "323:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "343:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "335:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "364:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "351:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 18,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "351:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:64:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "377:0:0"
									},
									"scope": 52,
									"src": "292:136:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "545:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 44,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "567:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 45,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "571:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 46,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "576:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 47,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "585:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 43,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "556:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "556:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "556:34:0"
											}
										]
									},
									"functionSelector": "1f7fdffa",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintBatch",
									"nameLocation": "449:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "467:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "459:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "488:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "471:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 33,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "471:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 34,
													"nodeType": "ArrayTypeName",
													"src": "471:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "510:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "493:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 36,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "493:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 37,
													"nodeType": "ArrayTypeName",
													"src": "493:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "532:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "519:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 39,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "519:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:79:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "545:0:0"
									},
									"scope": 52,
									"src": "440:158:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 53,
							"src": "177:424:0",
							"usedErrors": [
								154,
								159,
								164,
								171,
								176,
								181,
								188
							],
							"usedEvents": [
								1260,
								1275,
								1284,
								1291
							]
						}
					],
					"src": "33:568:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							189
						],
						"IERC20Errors": [
							94
						],
						"IERC721Errors": [
							142
						]
					},
					"id": 190,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 54,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 55,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 94,
							"linearizedBaseContracts": [
								94
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 64,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 69,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 74,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 83,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 88,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 93,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 190,
							"src": "280:1764:1",
							"usedErrors": [
								64,
								69,
								74,
								83,
								88,
								93
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 95,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 100,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 105,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 114,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 119,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 124,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 131,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 136,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 141,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 190,
							"src": "2190:2092:1",
							"usedErrors": [
								100,
								105,
								114,
								119,
								124,
								131,
								136,
								141
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 143,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 154,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 159,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 164,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 171,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 176,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 181,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 188,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 190,
							"src": "4430:2107:1",
							"usedErrors": [
								154,
								159,
								164,
								171,
								176,
								181,
								188
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1604
						],
						"Context": [
							1626
						],
						"ERC1155": [
							1240
						],
						"ERC165": [
							1760
						],
						"IERC1155": [
							1363
						],
						"IERC1155Errors": [
							189
						],
						"IERC1155MetadataURI": [
							1421
						],
						"IERC1155Receiver": [
							1405
						],
						"IERC165": [
							1772
						]
					},
					"id": 1241,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 191,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 193,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1241,
							"sourceUnit": 1364,
							"src": "135:40:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 192,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1363,
										"src": "143:8:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 195,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1241,
							"sourceUnit": 1406,
							"src": "176:56:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 194,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1405,
										"src": "184:16:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 197,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1241,
							"sourceUnit": 1422,
							"src": "233:73:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 196,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1421,
										"src": "241:19:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1241,
							"sourceUnit": 1627,
							"src": "307:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 198,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1626,
										"src": "315:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1241,
							"sourceUnit": 1761,
							"src": "356:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 200,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1772,
										"src": "364:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 201,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1760,
										"src": "373:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 204,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1241,
							"sourceUnit": 1605,
							"src": "426:46:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 203,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1604,
										"src": "434:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 206,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1241,
							"sourceUnit": 190,
							"src": "473:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 205,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "481:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 208,
										"name": "Context",
										"nameLocations": [
											"756:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1626,
										"src": "756:7:2"
									},
									"id": 209,
									"nodeType": "InheritanceSpecifier",
									"src": "756:7:2"
								},
								{
									"baseName": {
										"id": 210,
										"name": "ERC165",
										"nameLocations": [
											"765:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1760,
										"src": "765:6:2"
									},
									"id": 211,
									"nodeType": "InheritanceSpecifier",
									"src": "765:6:2"
								},
								{
									"baseName": {
										"id": 212,
										"name": "IERC1155",
										"nameLocations": [
											"773:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1363,
										"src": "773:8:2"
									},
									"id": 213,
									"nodeType": "InheritanceSpecifier",
									"src": "773:8:2"
								},
								{
									"baseName": {
										"id": 214,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"783:19:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1421,
										"src": "783:19:2"
									},
									"id": 215,
									"nodeType": "InheritanceSpecifier",
									"src": "783:19:2"
								},
								{
									"baseName": {
										"id": 216,
										"name": "IERC1155Errors",
										"nameLocations": [
											"804:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "804:14:2"
									},
									"id": 217,
									"nodeType": "InheritanceSpecifier",
									"src": "804:14:2"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 207,
								"nodeType": "StructuredDocumentation",
								"src": "542:184:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1240,
							"linearizedBaseContracts": [
								1240,
								189,
								1421,
								1363,
								1760,
								1772,
								1626
							],
							"name": "ERC1155",
							"nameLocation": "745:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 221,
									"libraryName": {
										"id": 218,
										"name": "Arrays",
										"nameLocations": [
											"831:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1604,
										"src": "831:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "825:27:2",
									"typeName": {
										"baseType": {
											"id": 219,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 220,
										"nodeType": "ArrayTypeName",
										"src": "842:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 225,
									"libraryName": {
										"id": 222,
										"name": "Arrays",
										"nameLocations": [
											"863:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1604,
										"src": "863:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "857:27:2",
									"typeName": {
										"baseType": {
											"id": 223,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 224,
										"nodeType": "ArrayTypeName",
										"src": "874:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 231,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "957:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1240,
									"src": "890:76:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 230,
										"keyName": "id",
										"keyNameLocation": "906:2:2",
										"keyType": {
											"id": 226,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "890:58:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 229,
											"keyName": "account",
											"keyNameLocation": "928:7:2",
											"keyType": {
												"id": 227,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "912:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 228,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 237,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1043:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1240,
									"src": "973:88:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 236,
										"keyName": "account",
										"keyNameLocation": "989:7:2",
										"keyType": {
											"id": 232,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "973:61:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 235,
											"keyName": "operator",
											"keyNameLocation": "1016:8:2",
											"keyType": {
												"id": 233,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1000:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 234,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1028:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 239,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1197:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1240,
									"src": "1182:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 238,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1182:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "1283:30:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 246,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "1301:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 245,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "1293:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "1293:13:2"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1208:38:2",
										"text": " @dev See {_setURI}."
									},
									"id": 250,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1277:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1263:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:2"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:2"
									},
									"scope": 1240,
									"src": "1251:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1759,
										1771
									],
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "1488:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 261,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "1517:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 263,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "1537:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1363_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1363_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 262,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1532:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1532:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1363",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1547:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1532:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1517:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 267,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "1574:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 269,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "1594:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1421_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1421_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 268,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1589:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1589:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1421",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1615:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1589:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1574:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1517:109:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 276,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "1666:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 274,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1642:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1240_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1648:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1759,
															"src": "1642:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:161:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 260,
												"id": 279,
												"nodeType": "Return",
												"src": "1498:180:2"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "1319:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1389:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 257,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 255,
												"name": "ERC165",
												"nameLocations": [
													"1456:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1760,
												"src": "1456:6:2"
											},
											{
												"id": 256,
												"name": "IERC165",
												"nameLocations": [
													"1464:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1772,
												"src": "1464:7:2"
											}
										],
										"src": "1447:25:2"
									},
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1414:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1407:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 252,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1407:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:20:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1482:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:6:2"
									},
									"scope": 1240,
									"src": "1380:305:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1420
									],
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "2159:28:2",
										"statements": [
											{
												"expression": {
													"id": 289,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 239,
													"src": "2176:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 288,
												"id": 290,
												"nodeType": "Return",
												"src": "2169:11:2"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "1691:388:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2093:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "2097:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "2144:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 286,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:2"
									},
									"scope": 1240,
									"src": "2084:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1301
									],
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "2333:46:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 302,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2350:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 304,
														"indexExpression": {
															"id": 303,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "2360:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2350:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 306,
													"indexExpression": {
														"id": 305,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2364:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2350:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 301,
												"id": 307,
												"nodeType": "Return",
												"src": "2343:29:2"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "2193:49:2",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "2266:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2291:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "2283:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:29:2"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "2324:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:2"
									},
									"scope": 1240,
									"src": "2247:132:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1314
									],
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "2678:410:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 322,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "2692:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2701:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2692:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 324,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "2711:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2715:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 335,
												"nodeType": "IfStatement",
												"src": "2688:121:2",
												"trueBody": {
													"id": 334,
													"nodeType": "Block",
													"src": "2723:86:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 328,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 316,
																			"src": "2770:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2774:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2770:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 330,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 313,
																			"src": "2782:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2791:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2782:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 327,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "2744:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:54:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 333,
															"nodeType": "RevertStatement",
															"src": "2737:61:2"
														}
													]
												}
											},
											{
												"assignments": [
													340
												],
												"declarations": [
													{
														"constant": false,
														"id": 340,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2836:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 378,
														"src": "2819:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 338,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2819:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 339,
															"nodeType": "ArrayTypeName",
															"src": "2819:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 347,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 344,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "2866:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2875:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2866:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2852:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 341,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2856:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 342,
															"nodeType": "ArrayTypeName",
															"src": "2856:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2819:63:2"
											},
											{
												"body": {
													"id": 374,
													"nodeType": "Block",
													"src": "2939:112:2",
													"statements": [
														{
															"expression": {
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 359,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "2953:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 361,
																	"indexExpression": {
																		"id": 360,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 349,
																		"src": "2967:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2953:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 365,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 349,
																					"src": "3010:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 363,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 313,
																					"src": "2982:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2991:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1603,
																				"src": "2982:27:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2982:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 369,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 349,
																					"src": "3037:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 367,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 316,
																					"src": "3014:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3018:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1590,
																				"src": "3014:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3014:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 362,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "2972:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2972:68:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:87:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 373,
															"nodeType": "ExpressionStatement",
															"src": "2953:87:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 352,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "2913:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 353,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "2917:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2917:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2913:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 375,
												"initializationExpression": {
													"assignments": [
														349
													],
													"declarations": [
														{
															"constant": false,
															"id": 349,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2906:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 375,
															"src": "2898:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 348,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2898:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 351,
													"initialValue": {
														"hexValue": "30",
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2910:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2898:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2934:3:2",
														"subExpression": {
															"id": 356,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "2936:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 358,
													"nodeType": "ExpressionStatement",
													"src": "2934:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2893:158:2"
											},
											{
												"expression": {
													"id": 376,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 340,
													"src": "3068:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 321,
												"id": 377,
												"nodeType": "Return",
												"src": "3061:20:2"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "2385:146:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2545:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2586:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2569:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 311,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2569:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 312,
													"nodeType": "ArrayTypeName",
													"src": "2569:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2621:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2604:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 314,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2604:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 315,
													"nodeType": "ArrayTypeName",
													"src": "2604:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2559:71:2"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2660:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 318,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 319,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:18:2"
									},
									"scope": 1240,
									"src": "2536:552:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1322
									],
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "3231:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 388,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1616,
																"src": "3260:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 390,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "3274:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 391,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "3284:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 387,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "3241:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "3241:52:2"
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "3094:57:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3165:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3191:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "3183:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3206:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "3201:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3201:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:33:2"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:2"
									},
									"scope": 1240,
									"src": "3156:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1332
									],
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "3463:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 405,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3480:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 407,
														"indexExpression": {
															"id": 406,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "3499:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3480:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 409,
													"indexExpression": {
														"id": 408,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "3508:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3480:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 404,
												"id": 410,
												"nodeType": "Return",
												"src": "3473:44:2"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "3306:56:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3376:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3401:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3393:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3418:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3410:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:35:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3457:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3457:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:6:2"
									},
									"scope": 1240,
									"src": "3367:157:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1346
									],
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "3704:238:2",
										"statements": [
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3722:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "3714:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 426,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3714:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 430,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 428,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "3731:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3714:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 431,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3757:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 432,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "3765:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3757:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3775:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 435,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "3793:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 436,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "3799:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 434,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "3776:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3776:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3757:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 446,
												"nodeType": "IfStatement",
												"src": "3753:129:2",
												"trueBody": {
													"id": 445,
													"nodeType": "Block",
													"src": "3808:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 441,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 427,
																		"src": "3858:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 442,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "3866:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 440,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "3829:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3829:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 444,
															"nodeType": "RevertStatement",
															"src": "3822:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 448,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3909:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3915:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 450,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "3919:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 451,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3923:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 452,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "3930:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 447,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "3891:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "3891:44:2"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "3530:56:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3600:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3625:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3617:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3639:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3631:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3651:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3643:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3670:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 422,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3670:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:72:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:2"
									},
									"scope": 1240,
									"src": "3591:351:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1362
									],
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "4198:245:2",
										"statements": [
											{
												"assignments": [
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4216:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "4208:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 472,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4208:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 476,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 474,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "4225:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 477,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "4251:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 478,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "4259:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4251:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4269:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 481,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "4287:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 482,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 473,
																	"src": "4293:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 480,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "4270:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4270:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4251:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"nodeType": "IfStatement",
												"src": "4247:129:2",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "4302:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 487,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 473,
																		"src": "4352:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 488,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "4360:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 486,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "4323:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 490,
															"nodeType": "RevertStatement",
															"src": "4316:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "4408:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "4414:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "4418:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 497,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "4423:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 498,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "4431:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 493,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "4385:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4385:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "4385:51:2"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "3948:61:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4023:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4062:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4054:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4084:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4076:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4113:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4096:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 462,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4096:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 463,
													"nodeType": "ArrayTypeName",
													"src": "4096:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4143:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4126:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 465,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4126:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 466,
													"nodeType": "ArrayTypeName",
													"src": "4126:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4172:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4159:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4159:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:138:2"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:0:2"
									},
									"scope": 1240,
									"src": "4014:429:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "5251:1174:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 516,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "5265:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5265:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 518,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "5279:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5279:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5265:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 529,
												"nodeType": "IfStatement",
												"src": "5261:117:2",
												"trueBody": {
													"id": 528,
													"nodeType": "Block",
													"src": "5294:84:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 522,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 510,
																			"src": "5341:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5345:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5341:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 524,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 513,
																			"src": "5353:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5360:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5353:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 521,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "5315:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:52:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 527,
															"nodeType": "RevertStatement",
															"src": "5308:59:2"
														}
													]
												}
											},
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5396:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "5388:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 530,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5388:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 534,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 532,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "5407:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5388:31:2"
											},
											{
												"body": {
													"id": 615,
													"nodeType": "Block",
													"src": "5471:650:2",
													"statements": [
														{
															"assignments": [
																547
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 547,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5493:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 615,
																	"src": "5485:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 546,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5485:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 552,
															"initialValue": {
																"arguments": [
																	{
																		"id": 550,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "5521:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 548,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "5498:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5502:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1590,
																	"src": "5498:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5485:38:2"
														},
														{
															"assignments": [
																554
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 554,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5545:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 615,
																	"src": "5537:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 553,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5537:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 559,
															"initialValue": {
																"arguments": [
																	{
																		"id": 557,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "5579:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 555,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "5553:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5560:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1590,
																	"src": "5553:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5553:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5537:44:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 560,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "5600:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5616:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5608:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 561,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5608:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5608:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5600:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 598,
															"nodeType": "IfStatement",
															"src": "5596:420:2",
															"trueBody": {
																"id": 597,
																"nodeType": "Block",
																"src": "5620:396:2",
																"statements": [
																	{
																		"assignments": [
																			567
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 567,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5646:11:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 597,
																				"src": "5638:19:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 566,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5638:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 573,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 568,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 231,
																					"src": "5660:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 570,
																				"indexExpression": {
																					"id": 569,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 547,
																					"src": "5670:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5660:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 572,
																			"indexExpression": {
																				"id": 571,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 505,
																				"src": "5674:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5660:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5638:41:2"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 574,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 567,
																				"src": "5701:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 575,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 554,
																				"src": "5715:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5701:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 585,
																		"nodeType": "IfStatement",
																		"src": "5697:129:2",
																		"trueBody": {
																			"id": 584,
																			"nodeType": "Block",
																			"src": "5722:104:2",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 578,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 505,
																								"src": "5778:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 579,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 567,
																								"src": "5784:11:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 580,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 554,
																								"src": "5797:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 581,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 547,
																								"src": "5804:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 577,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 154,
																							"src": "5751:26:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 582,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5751:56:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 583,
																					"nodeType": "RevertStatement",
																					"src": "5744:63:2"
																				}
																			]
																		}
																	},
																	{
																		"id": 596,
																		"nodeType": "UncheckedBlock",
																		"src": "5843:159:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 594,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 586,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 231,
																								"src": "5942:9:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 589,
																							"indexExpression": {
																								"id": 587,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 547,
																								"src": "5952:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5942:13:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 590,
																						"indexExpression": {
																							"id": 588,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 505,
																							"src": "5956:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5942:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 593,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 591,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 567,
																							"src": "5964:11:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 592,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 554,
																							"src": "5978:5:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5964:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5942:41:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 595,
																				"nodeType": "ExpressionStatement",
																				"src": "5942:41:2"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 599,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "6034:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6048:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6040:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 600,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6040:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6040:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6034:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 614,
															"nodeType": "IfStatement",
															"src": "6030:81:2",
															"trueBody": {
																"id": 613,
																"nodeType": "Block",
																"src": "6052:59:2",
																"statements": [
																	{
																		"expression": {
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 605,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 231,
																						"src": "6070:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 608,
																					"indexExpression": {
																						"id": 606,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 547,
																						"src": "6080:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6070:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 609,
																				"indexExpression": {
																					"id": 607,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 507,
																					"src": "6084:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6070:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 610,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 554,
																				"src": "6091:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6070:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 612,
																		"nodeType": "ExpressionStatement",
																		"src": "6070:26:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "5450:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 540,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "5454:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5458:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5454:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5450:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 616,
												"initializationExpression": {
													"assignments": [
														536
													],
													"declarations": [
														{
															"constant": false,
															"id": 536,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5443:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 616,
															"src": "5435:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 535,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5435:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 538,
													"initialValue": {
														"hexValue": "30",
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5447:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5435:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5466:3:2",
														"subExpression": {
															"id": 543,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "5468:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 545,
													"nodeType": "ExpressionStatement",
													"src": "5466:3:2"
												},
												"nodeType": "ForStatement",
												"src": "5430:691:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 617,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "6135:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6139:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6135:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6149:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6135:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "6343:76:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 645,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "6376:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 646,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "6386:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 647,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "6392:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 648,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "6396:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 649,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "6401:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 644,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "6362:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6362:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "EmitStatement",
															"src": "6357:51:2"
														}
													]
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "6131:288:2",
												"trueBody": {
													"id": 643,
													"nodeType": "Block",
													"src": "6152:185:2",
													"statements": [
														{
															"assignments": [
																622
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 622,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6174:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 643,
																	"src": "6166:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6166:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 627,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6202:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 623,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "6179:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6183:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1590,
																	"src": "6179:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6166:38:2"
														},
														{
															"assignments": [
																629
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 629,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6226:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 643,
																	"src": "6218:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 628,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 634,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6260:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 630,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "6234:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6241:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1590,
																	"src": "6234:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6234:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6218:44:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 636,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "6296:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 637,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "6306:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 638,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "6312:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "6316:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 640,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 629,
																		"src": "6320:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 635,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "6281:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6281:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 642,
															"nodeType": "EmitStatement",
															"src": "6276:50:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "4449:690:2",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5153:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5169:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5161:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5183:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5175:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5204:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5187:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 508,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5187:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 509,
													"nodeType": "ArrayTypeName",
													"src": "5187:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5226:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5209:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 511,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5209:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 512,
													"nodeType": "ArrayTypeName",
													"src": "5209:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:73:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5251:0:2"
									},
									"scope": 1240,
									"src": "5144:1281:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "7195:499:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 672,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "7213:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 673,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "7219:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "7223:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 675,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "7228:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 671,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "7205:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7205:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "7205:30:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 678,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "7249:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7263:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7255:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 679,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7255:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7255:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7249:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 729,
												"nodeType": "IfStatement",
												"src": "7245:443:2",
												"trueBody": {
													"id": 728,
													"nodeType": "Block",
													"src": "7267:421:2",
													"statements": [
														{
															"assignments": [
																685
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 685,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7289:8:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 728,
																	"src": "7281:16:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 684,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 688,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 686,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "7300:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7300:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7281:31:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 689,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "7330:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7334:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7330:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7344:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7330:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 726,
																"nodeType": "Block",
																"src": "7571:107:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 718,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 685,
																					"src": "7625:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 719,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 658,
																					"src": "7635:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 720,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 660,
																					"src": "7641:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 721,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 663,
																					"src": "7645:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 722,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 666,
																					"src": "7650:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 723,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 668,
																					"src": "7658:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 717,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1223,
																				"src": "7589:35:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7589:74:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 725,
																		"nodeType": "ExpressionStatement",
																		"src": "7589:74:2"
																	}
																]
															},
															"id": 727,
															"nodeType": "IfStatement",
															"src": "7326:352:2",
															"trueBody": {
																"id": 716,
																"nodeType": "Block",
																"src": "7347:218:2",
																"statements": [
																	{
																		"assignments": [
																			694
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 694,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7373:2:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 716,
																				"src": "7365:10:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 693,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7365:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 699,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 697,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7401:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 695,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 663,
																					"src": "7378:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 696,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7382:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1590,
																				"src": "7378:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7378:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7365:38:2"
																	},
																	{
																		"assignments": [
																			701
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 701,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7429:5:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 716,
																				"src": "7421:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 700,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7421:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 706,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 704,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7463:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 702,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 666,
																					"src": "7437:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 703,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7444:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1590,
																				"src": "7437:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7437:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7421:44:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 708,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 685,
																					"src": "7514:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 709,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 658,
																					"src": "7524:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 710,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 660,
																					"src": "7530:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 711,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 694,
																					"src": "7534:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 712,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "7538:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 713,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 668,
																					"src": "7545:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 707,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1153,
																				"src": "7483:30:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7483:67:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 715,
																		"nodeType": "ExpressionStatement",
																		"src": "7483:67:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "6431:568:2",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7013:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7057:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "7049:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7079:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "7071:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7071:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7108:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "7091:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 661,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7091:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 662,
													"nodeType": "ArrayTypeName",
													"src": "7091:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7138:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "7121:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 664,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 665,
													"nodeType": "ArrayTypeName",
													"src": "7121:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7167:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "7154:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 667,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7154:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:138:2"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:0:2"
									},
									"scope": 1240,
									"src": "7004:690:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "8259:355:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 745,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "8273:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8287:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 746,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8273:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "8269:88:2",
												"trueBody": {
													"id": 758,
													"nodeType": "Block",
													"src": "8291:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 754,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8343:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8335:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 752,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8335:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8335:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 751,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8312:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 757,
															"nodeType": "RevertStatement",
															"src": "8305:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 760,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "8370:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8386:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 761,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8378:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8378:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8370:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "8366:88:2",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "8390:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8440:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8432:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 767,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8432:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8432:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 766,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "8411:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8411:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 772,
															"nodeType": "RevertStatement",
															"src": "8404:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													779,
													782
												],
												"declarations": [
													{
														"constant": false,
														"id": 779,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8481:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 796,
														"src": "8464:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 777,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8464:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 778,
															"nodeType": "ArrayTypeName",
															"src": "8464:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 782,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8503:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 796,
														"src": "8486:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 780,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8486:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 781,
															"nodeType": "ArrayTypeName",
															"src": "8486:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 787,
												"initialValue": {
													"arguments": [
														{
															"id": 784,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "8532:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 785,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "8536:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 783,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "8513:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8463:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "8579:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 790,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "8585:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 791,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "8589:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 792,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "8594:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 793,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "8602:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 788,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "8552:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8552:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "8552:55:2"
											}
										]
									},
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "7700:446:2",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8160:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8186:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "8178:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8200:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "8192:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8212:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "8204:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8224:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "8216:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8244:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "8231:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8231:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:72:2"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8259:0:2"
									},
									"scope": 1240,
									"src": "8151:463:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "9194:266:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "9208:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9222:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9214:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 814,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9214:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9214:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9208:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 827,
												"nodeType": "IfStatement",
												"src": "9204:88:2",
												"trueBody": {
													"id": 826,
													"nodeType": "Block",
													"src": "9226:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9278:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9270:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 820,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9270:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9270:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 819,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "9247:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9247:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 825,
															"nodeType": "RevertStatement",
															"src": "9240:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 828,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "9305:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9321:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9313:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 829,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9313:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9313:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9305:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 842,
												"nodeType": "IfStatement",
												"src": "9301:88:2",
												"trueBody": {
													"id": 841,
													"nodeType": "Block",
													"src": "9325:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9375:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9367:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 835,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9367:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9367:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 834,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "9346:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 840,
															"nodeType": "RevertStatement",
															"src": "9339:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 844,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "9425:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "9431:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 846,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "9435:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 847,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "9440:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 848,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "9448:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 843,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "9398:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9398:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "9398:55:2"
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "8620:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9024:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9064:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "9056:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9086:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "9078:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9115:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "9098:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 803,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 804,
													"nodeType": "ArrayTypeName",
													"src": "9098:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9145:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "9128:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 806,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9128:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 807,
													"nodeType": "ArrayTypeName",
													"src": "9128:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9174:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "9161:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 809,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9161:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9046:138:2"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9194:0:2"
									},
									"scope": 1240,
									"src": "9015:445:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "10338:30:2",
										"statements": [
											{
												"expression": {
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 858,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "10348:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 859,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "10355:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10348:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "10348:13:2"
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "9466:811:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10291:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10313:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10299:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 854,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10299:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10298:22:2"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:2"
									},
									"scope": 1240,
									"src": "10282:86:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "10828:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "10842:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10856:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10848:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10848:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10848:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10842:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "10838:88:2",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "10860:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10912:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10904:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10904:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10904:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "10881:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10881:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "10874:41:2"
														}
													]
												}
											},
											{
												"assignments": [
													894,
													897
												],
												"declarations": [
													{
														"constant": false,
														"id": 894,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10953:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "10936:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 892,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10936:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 893,
															"nodeType": "ArrayTypeName",
															"src": "10936:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 897,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10975:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "10958:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 895,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10958:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 896,
															"nodeType": "ArrayTypeName",
															"src": "10958:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"arguments": [
														{
															"id": 899,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "11004:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 900,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "11008:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 898,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "10985:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10985:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10935:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11059:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11051:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 904,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11051:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11051:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 908,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "11063:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "11067:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 910,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "11072:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 911,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "11080:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 903,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "11024:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11024:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "11024:61:2"
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "10374:367:2",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10755:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10769:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10761:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10781:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10773:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10773:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10793:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10785:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10785:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10813:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10800:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 871,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10800:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:58:2"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10828:0:2"
									},
									"scope": 1240,
									"src": "10746:346:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "11630:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 929,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "11644:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11658:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11650:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 930,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11650:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11650:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11644:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 943,
												"nodeType": "IfStatement",
												"src": "11640:88:2",
												"trueBody": {
													"id": 942,
													"nodeType": "Block",
													"src": "11662:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11714:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11706:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 936,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11706:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11706:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 935,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "11683:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 941,
															"nodeType": "RevertStatement",
															"src": "11676:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11764:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 945,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11764:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11764:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11776:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 950,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "11780:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 951,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "11785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 952,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "11793:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 944,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "11737:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11737:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "11737:61:2"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "11098:420:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11532:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11551:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "11543:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11543:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11572:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "11555:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 919,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11555:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 920,
													"nodeType": "ArrayTypeName",
													"src": "11555:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11594:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "11577:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 922,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11577:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 923,
													"nodeType": "ArrayTypeName",
													"src": "11577:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11615:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "11602:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 925,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11602:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11542:78:2"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:2"
									},
									"scope": 1240,
									"src": "11523:282:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "12164:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 966,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "12178:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12194:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12186:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 967,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12186:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12186:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12178:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 980,
												"nodeType": "IfStatement",
												"src": "12174:88:2",
												"trueBody": {
													"id": 979,
													"nodeType": "Block",
													"src": "12198:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12248:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12240:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 973,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12240:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12240:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 972,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "12219:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12219:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 978,
															"nodeType": "RevertStatement",
															"src": "12212:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													985,
													988
												],
												"declarations": [
													{
														"constant": false,
														"id": 985,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12289:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "12272:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 983,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12272:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 984,
															"nodeType": "ArrayTypeName",
															"src": "12272:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 988,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12311:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "12294:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 986,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 987,
															"nodeType": "ArrayTypeName",
															"src": "12294:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"arguments": [
														{
															"id": 990,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "12340:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 991,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "12344:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 989,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "12321:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12321:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12271:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 995,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "12387:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12401:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12393:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 996,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12393:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12393:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1000,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "12405:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1001,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "12410:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12418:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 994,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "12360:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "12360:61:2"
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "11811:283:2",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12108:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12122:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "12114:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12136:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "12128:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12128:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12148:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "12140:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12113:41:2"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12164:0:2"
									},
									"scope": 1240,
									"src": "12099:329:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "12874:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1018,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "12888:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12904:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12896:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1019,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12896:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12896:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12888:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "12884:88:2",
												"trueBody": {
													"id": 1031,
													"nodeType": "Block",
													"src": "12908:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12950:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1025,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12950:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12950:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1024,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "12929:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12929:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1030,
															"nodeType": "RevertStatement",
															"src": "12922:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1034,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "13008:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13022:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13014:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1035,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13014:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13014:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1039,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "13026:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1040,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "13031:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13039:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1033,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "12981:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12981:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "12981:61:2"
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "12434:345:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12793:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12812:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "12804:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12804:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12835:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "12818:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1010,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12818:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1011,
													"nodeType": "ArrayTypeName",
													"src": "12818:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12857:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "12840:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1013,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12840:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1014,
													"nodeType": "ArrayTypeName",
													"src": "12840:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12803:61:2"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12874:0:2"
									},
									"scope": 1240,
									"src": "12784:265:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "13361:222:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1055,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "13375:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13395:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13387:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1056,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13387:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13387:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13375:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1069,
												"nodeType": "IfStatement",
												"src": "13371:94:2",
												"trueBody": {
													"id": 1068,
													"nodeType": "Block",
													"src": "13399:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1064,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13451:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13443:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1062,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13443:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13443:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1061,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "13420:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1067,
															"nodeType": "RevertStatement",
															"src": "13413:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1070,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "13474:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1073,
															"indexExpression": {
																"id": 1071,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1048,
																"src": "13493:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13474:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1074,
														"indexExpression": {
															"id": 1072,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "13500:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13474:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1075,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "13512:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13474:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "13474:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1079,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "13550:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "13557:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1081,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "13567:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1078,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "13535:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13535:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "EmitStatement",
												"src": "13530:46:2"
											}
										]
									},
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "13055:208:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13277:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13304:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "13296:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13296:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13319:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "13311:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13334:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "13329:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1051,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13329:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13295:48:2"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13361:0:2"
									},
									"scope": 1240,
									"src": "13268:315:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "13953:783:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1101,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "13967:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13970:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13967:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13975:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13967:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13984:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13967:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1151,
												"nodeType": "IfStatement",
												"src": "13963:767:2",
												"trueBody": {
													"id": 1150,
													"nodeType": "Block",
													"src": "13987:743:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1130,
																		"nodeType": "Block",
																		"src": "14103:206:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1123,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1119,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1117,
																						"src": "14125:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1120,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1405,
																								"src": "14137:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1405_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1121,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14154:17:2",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1386,
																							"src": "14137:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1122,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14172:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14137:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14125:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1129,
																				"nodeType": "IfStatement",
																				"src": "14121:174:2",
																				"trueBody": {
																					"id": 1128,
																					"nodeType": "Block",
																					"src": "14182:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1125,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1092,
																										"src": "14273:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1124,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 164,
																									"src": "14250:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1126,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14250:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1127,
																							"nodeType": "RevertStatement",
																							"src": "14243:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1131,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1118,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1117,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14093:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1131,
																				"src": "14086:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1116,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14086:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14085:17:2"
																	},
																	"src": "14077:232:2"
																},
																{
																	"block": {
																		"id": 1147,
																		"nodeType": "Block",
																		"src": "14338:382:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1138,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1135,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1133,
																							"src": "14360:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1136,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14367:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14360:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1137,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14377:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14360:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1145,
																					"nodeType": "Block",
																					"src": "14516:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14602:86:2",
																								"nodeType": "YulBlock",
																								"src": "14602:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14639:2:2",
																															"nodeType": "YulLiteral",
																															"src": "14639:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14643:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "14643:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14635:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "14635:3:2"
																													},
																													"nativeSrc": "14635:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "14635:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14658:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "14658:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14652:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "14652:5:2"
																													},
																													"nativeSrc": "14652:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "14652:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14628:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "14628:6:2"
																											},
																											"nativeSrc": "14628:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "14628:38:2"
																										},
																										"nativeSrc": "14628:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "14628:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1133,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14643:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1133,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14658:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1144,
																							"nodeType": "InlineAssembly",
																							"src": "14593:95:2"
																						}
																					]
																				},
																				"id": 1146,
																				"nodeType": "IfStatement",
																				"src": "14356:350:2",
																				"trueBody": {
																					"id": 1143,
																					"nodeType": "Block",
																					"src": "14380:130:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1140,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1092,
																										"src": "14488:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1139,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 164,
																									"src": "14465:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1141,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14465:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1142,
																							"nodeType": "RevertStatement",
																							"src": "14458:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1148,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1134,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1133,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14330:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1148,
																				"src": "14317:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1132,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14317:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14316:21:2"
																	},
																	"src": "14310:410:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1110,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "14044:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1111,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "14054:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1112,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "14060:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1113,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1096,
																		"src": "14064:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1114,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "14071:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1107,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1092,
																				"src": "14022:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1106,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1405,
																			"src": "14005:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1405_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14005:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1405",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14026:17:2",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1386,
																	"src": "14005:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14005:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1149,
															"nodeType": "TryStatement",
															"src": "14001:719:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "13589:167:2",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13770:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13818:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "13810:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13844:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "13836:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13866:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "13858:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13886:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "13878:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13906:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "13898:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13934:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "13921:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1097,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13921:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:144:2"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13953:0:2"
									},
									"scope": 1240,
									"src": "13761:975:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "15141:825:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1171,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "15155:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15158:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15155:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15163:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15155:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15172:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15155:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1221,
												"nodeType": "IfStatement",
												"src": "15151:809:2",
												"trueBody": {
													"id": 1220,
													"nodeType": "Block",
													"src": "15175:785:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1200,
																		"nodeType": "Block",
																		"src": "15328:211:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1193,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1189,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1187,
																						"src": "15350:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1190,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1405,
																								"src": "15362:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1405_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1191,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15379:22:2",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1404,
																							"src": "15362:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1192,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15402:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15362:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15350:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1199,
																				"nodeType": "IfStatement",
																				"src": "15346:179:2",
																				"trueBody": {
																					"id": 1198,
																					"nodeType": "Block",
																					"src": "15412:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1195,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1160,
																										"src": "15503:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1194,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 164,
																									"src": "15480:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1196,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15480:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1197,
																							"nodeType": "RevertStatement",
																							"src": "15473:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1201,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1188,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1187,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15305:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1201,
																				"src": "15298:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1186,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15298:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15280:47:2"
																	},
																	"src": "15272:267:2"
																},
																{
																	"block": {
																		"id": 1217,
																		"nodeType": "Block",
																		"src": "15568:382:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1208,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1205,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1203,
																							"src": "15590:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1206,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15597:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15590:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1207,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15607:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15590:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1215,
																					"nodeType": "Block",
																					"src": "15746:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "15832:86:2",
																								"nodeType": "YulBlock",
																								"src": "15832:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "15869:2:2",
																															"nodeType": "YulLiteral",
																															"src": "15869:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "15873:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "15873:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "15865:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "15865:3:2"
																													},
																													"nativeSrc": "15865:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "15865:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "15888:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "15888:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "15882:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "15882:5:2"
																													},
																													"nativeSrc": "15882:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "15882:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "15858:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "15858:6:2"
																											},
																											"nativeSrc": "15858:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "15858:38:2"
																										},
																										"nativeSrc": "15858:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "15858:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1203,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15873:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1203,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15888:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1214,
																							"nodeType": "InlineAssembly",
																							"src": "15823:95:2"
																						}
																					]
																				},
																				"id": 1216,
																				"nodeType": "IfStatement",
																				"src": "15586:350:2",
																				"trueBody": {
																					"id": 1213,
																					"nodeType": "Block",
																					"src": "15610:130:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1210,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1160,
																										"src": "15718:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1209,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 164,
																									"src": "15695:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1211,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15695:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1212,
																							"nodeType": "RevertStatement",
																							"src": "15688:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1218,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1204,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1203,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15560:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1218,
																				"src": "15547:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1202,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15547:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15546:21:2"
																	},
																	"src": "15540:410:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1180,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "15237:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1181,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "15247:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1182,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1163,
																		"src": "15253:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1183,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1166,
																		"src": "15258:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1184,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1168,
																		"src": "15266:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1177,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "15210:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1176,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1405,
																			"src": "15193:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1405_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15193:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1405",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15214:22:2",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1404,
																	"src": "15193:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15193:78:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1219,
															"nodeType": "TryStatement",
															"src": "15189:761:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1154,
										"nodeType": "StructuredDocumentation",
										"src": "14742:177:2",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14933:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14986:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "14978:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14978:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15012:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "15004:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15034:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "15026:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15026:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15063:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "15046:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1161,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15046:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1162,
													"nodeType": "ArrayTypeName",
													"src": "15046:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15093:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "15076:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1164,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15076:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1165,
													"nodeType": "ArrayTypeName",
													"src": "15076:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15122:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "15109:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15109:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14968:164:2"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15141:0:2"
									},
									"scope": 1240,
									"src": "14924:1042:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "16240:691:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16302:623:2",
													"nodeType": "YulBlock",
													"src": "16302:623:2",
													"statements": [
														{
															"nativeSrc": "16360:21:2",
															"nodeType": "YulAssignment",
															"src": "16360:21:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16376:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16376:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16370:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "16370:5:2"
																},
																"nativeSrc": "16370:11:2",
																"nodeType": "YulFunctionCall",
																"src": "16370:11:2"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nativeSrc": "16360:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16360:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16438:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16438:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16446:1:2",
																		"nodeType": "YulLiteral",
																		"src": "16446:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16431:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16431:6:2"
																},
																"nativeSrc": "16431:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16431:17:2"
															},
															"nativeSrc": "16431:17:2",
															"nodeType": "YulExpressionStatement",
															"src": "16431:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nativeSrc": "16569:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16569:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16577:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16577:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16565:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16565:3:2"
																		},
																		"nativeSrc": "16565:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16565:17:2"
																	},
																	{
																		"name": "element1",
																		"nativeSrc": "16584:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "16584:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16558:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16558:6:2"
																},
																"nativeSrc": "16558:35:2",
																"nodeType": "YulFunctionCall",
																"src": "16558:35:2"
															},
															"nativeSrc": "16558:35:2",
															"nodeType": "YulExpressionStatement",
															"src": "16558:35:2"
														},
														{
															"nativeSrc": "16684:27:2",
															"nodeType": "YulAssignment",
															"src": "16684:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16698:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16698:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16706:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16706:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16694:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "16694:3:2"
																},
																"nativeSrc": "16694:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16694:17:2"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nativeSrc": "16684:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16684:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nativeSrc": "16731:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16731:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16739:1:2",
																		"nodeType": "YulLiteral",
																		"src": "16739:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16724:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16724:6:2"
																},
																"nativeSrc": "16724:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16724:17:2"
															},
															"nativeSrc": "16724:17:2",
															"nodeType": "YulExpressionStatement",
															"src": "16724:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16765:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16765:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16773:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16773:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16761:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16761:3:2"
																		},
																		"nativeSrc": "16761:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16761:17:2"
																	},
																	{
																		"name": "element2",
																		"nativeSrc": "16780:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "16780:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16754:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16754:6:2"
																},
																"nativeSrc": "16754:35:2",
																"nodeType": "YulFunctionCall",
																"src": "16754:35:2"
															},
															"nativeSrc": "16754:35:2",
															"nodeType": "YulExpressionStatement",
															"src": "16754:35:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16891:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16891:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16901:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16901:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16909:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16909:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16897:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16897:3:2"
																		},
																		"nativeSrc": "16897:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16897:17:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16884:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16884:6:2"
																},
																"nativeSrc": "16884:31:2",
																"nodeType": "YulFunctionCall",
																"src": "16884:31:2"
															},
															"nativeSrc": "16884:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "16884:31:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1232,
														"isOffset": false,
														"isSlot": false,
														"src": "16360:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1232,
														"isOffset": false,
														"isSlot": false,
														"src": "16438:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1232,
														"isOffset": false,
														"isSlot": false,
														"src": "16569:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1232,
														"isOffset": false,
														"isSlot": false,
														"src": "16698:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1235,
														"isOffset": false,
														"isSlot": false,
														"src": "16684:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1235,
														"isOffset": false,
														"isSlot": false,
														"src": "16731:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1235,
														"isOffset": false,
														"isSlot": false,
														"src": "16765:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1235,
														"isOffset": false,
														"isSlot": false,
														"src": "16901:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1226,
														"isOffset": false,
														"isSlot": false,
														"src": "16584:8:2",
														"valueSize": 1
													},
													{
														"declaration": 1228,
														"isOffset": false,
														"isSlot": false,
														"src": "16780:8:2",
														"valueSize": 1
													}
												],
												"id": 1237,
												"nodeType": "InlineAssembly",
												"src": "16293:632:2"
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "15972:105:2",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "16091:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "16127:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "16119:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16119:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "16153:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "16145:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16145:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16109:58:2"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "16207:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "16190:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1230,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16190:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1231,
													"nodeType": "ArrayTypeName",
													"src": "16190:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "16232:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "16215:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1233,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16215:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1234,
													"nodeType": "ArrayTypeName",
													"src": "16215:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16189:50:2"
									},
									"scope": 1240,
									"src": "16082:849:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1241,
							"src": "727:16206:2",
							"usedErrors": [
								154,
								159,
								164,
								171,
								176,
								181,
								188
							],
							"usedEvents": [
								1260,
								1275,
								1284,
								1291
							]
						}
					],
					"src": "109:16825:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1363
						],
						"IERC165": [
							1772
						]
					},
					"id": 1364,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1242,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1244,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1364,
							"sourceUnit": 1773,
							"src": "136:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1243,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1772,
										"src": "144:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1246,
										"name": "IERC165",
										"nameLocations": [
											"359:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1772,
										"src": "359:7:3"
									},
									"id": 1247,
									"nodeType": "InheritanceSpecifier",
									"src": "359:7:3"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1245,
								"nodeType": "StructuredDocumentation",
								"src": "200:136:3",
								"text": " @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."
							},
							"fullyImplemented": false,
							"id": 1363,
							"linearizedBaseContracts": [
								1363,
								1772
							],
							"name": "IERC1155",
							"nameLocation": "347:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "373:125:3",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1260,
									"name": "TransferSingle",
									"nameLocation": "509:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "540:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "524:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "566:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "550:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "588:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "572:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "600:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "592:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "612:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "604:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "523:95:3"
									},
									"src": "503:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "625:144:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1275,
									"name": "TransferBatch",
									"nameLocation": "780:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "819:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "803:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "853:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "837:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "883:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "867:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "905:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "895:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1268,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "895:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1269,
													"nodeType": "ArrayTypeName",
													"src": "895:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "928:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "918:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1271,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "918:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1272,
													"nodeType": "ArrayTypeName",
													"src": "918:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:147:3"
									},
									"src": "774:167:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "947:147:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1284,
									"name": "ApprovalForAll",
									"nameLocation": "1105:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1136:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "1120:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1161:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "1145:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1176:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "1171:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:66:3"
									},
									"src": "1099:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "1192:343:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1291,
									"name": "URI",
									"nameLocation": "1546:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1557:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "1550:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1286,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1550:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1580:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "1564:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:34:3"
									},
									"src": "1540:44:3"
								},
								{
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "1590:172:3",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1301,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1776:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1794:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "1786:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1811:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "1803:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1785:29:3"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "1838:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1837:9:3"
									},
									"scope": 1363,
									"src": "1767:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "1853:188:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2055:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2098:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2079:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1303,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2079:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1304,
													"nodeType": "ArrayTypeName",
													"src": "2079:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2135:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2116:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1306,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2116:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1307,
													"nodeType": "ArrayTypeName",
													"src": "2116:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:75:3"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2168:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1310,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2168:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1311,
													"nodeType": "ArrayTypeName",
													"src": "2168:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2167:18:3"
									},
									"scope": 1363,
									"src": "2046:140:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "2192:248:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2454:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2480:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "2472:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2495:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "2490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2490:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2471:33:3"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2513:0:3"
									},
									"scope": 1363,
									"src": "2445:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "2520:135:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2669:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2694:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "2686:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2711:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "2703:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2685:35:3"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "2744:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1329,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2744:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:6:3"
									},
									"scope": 1363,
									"src": "2660:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "2756:910:3",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3680:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3705:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "3697:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3697:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3719:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "3711:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3731:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "3723:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3743:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "3735:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3735:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3765:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "3750:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1342,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3696:74:3"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3779:0:3"
									},
									"scope": 1363,
									"src": "3671:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "3786:814:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4614:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4653:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "4645:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4675:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "4667:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4706:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "4687:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1352,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4687:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1353,
													"nodeType": "ArrayTypeName",
													"src": "4687:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4738:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "4719:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1355,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4719:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1356,
													"nodeType": "ArrayTypeName",
													"src": "4719:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4769:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "4754:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4754:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4635:144:3"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4788:0:3"
									},
									"scope": 1363,
									"src": "4605:184:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1364,
							"src": "337:4454:3",
							"usedErrors": [],
							"usedEvents": [
								1260,
								1275,
								1284,
								1291
							]
						}
					],
					"src": "110:4682:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1405
						],
						"IERC165": [
							1772
						]
					},
					"id": 1406,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1365,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1406,
							"sourceUnit": 1773,
							"src": "144:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1366,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1772,
										"src": "152:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1369,
										"name": "IERC165",
										"nameLocations": [
											"357:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1772,
										"src": "357:7:4"
									},
									"id": 1370,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:4"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1368,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:4",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1405,
							"linearizedBaseContracts": [
								1405,
								1772
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "371:827:4",
										"text": " @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1212:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1247:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1239:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1273:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1265:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1295:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1287:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1315:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1307:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1345:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1330:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1380,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1330:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:126:4"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1374:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1374:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:8:4"
									},
									"scope": 1405,
									"src": "1203:179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "1388:995:4",
										"text": " @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2397:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2437:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "2429:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2463:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "2455:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2455:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2496:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "2477:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1392,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2477:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1393,
													"nodeType": "ArrayTypeName",
													"src": "2477:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2528:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "2509:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1395,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2509:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1396,
													"nodeType": "ArrayTypeName",
													"src": "2509:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2559:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "2544:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2544:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2419:150:4"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "2588:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1401,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2588:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2587:8:4"
									},
									"scope": 1405,
									"src": "2388:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1406,
							"src": "327:2271:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2481:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1363
						],
						"IERC1155MetadataURI": [
							1421
						]
					},
					"id": 1422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1407,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1409,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1422,
							"sourceUnit": 1364,
							"src": "158:41:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1408,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1363,
										"src": "166:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1411,
										"name": "IERC1155",
										"nameLocations": [
											"399:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1363,
										"src": "399:8:5"
									},
									"id": 1412,
									"nodeType": "InheritanceSpecifier",
									"src": "399:8:5"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1410,
								"nodeType": "StructuredDocumentation",
								"src": "201:164:5",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."
							},
							"fullyImplemented": false,
							"id": 1421,
							"linearizedBaseContracts": [
								1421,
								1363,
								1772
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "376:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "414:192:5",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "620:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "624:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:12:5"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "659:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "659:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:15:5"
									},
									"scope": 1421,
									"src": "611:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1422,
							"src": "366:310:5",
							"usedErrors": [],
							"usedEvents": [
								1260,
								1275,
								1284,
								1291
							]
						}
					],
					"src": "132:545:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							1604
						],
						"Math": [
							2827
						],
						"StorageSlot": [
							1736
						]
					},
					"id": 1605,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1425,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1605,
							"sourceUnit": 1737,
							"src": "126:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1424,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1736,
										"src": "134:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1427,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1605,
							"sourceUnit": 2828,
							"src": "173:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1426,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2827,
										"src": "181:4:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1428,
								"nodeType": "StructuredDocumentation",
								"src": "212:63:6",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1604,
							"linearizedBaseContracts": [
								1604
							],
							"name": "Arrays",
							"nameLocation": "284:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1431,
									"libraryName": {
										"id": 1429,
										"name": "StorageSlot",
										"nameLocations": [
											"303:11:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1736,
										"src": "303:11:6"
									},
									"nodeType": "UsingForDirective",
									"src": "297:30:6",
									"typeName": {
										"id": 1430,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "843:834:6",
										"statements": [
											{
												"assignments": [
													1443
												],
												"declarations": [
													{
														"constant": false,
														"id": 1443,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "861:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1513,
														"src": "853:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1442,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1445,
												"initialValue": {
													"hexValue": "30",
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "867:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "853:15:6"
											},
											{
												"assignments": [
													1447
												],
												"declarations": [
													{
														"constant": false,
														"id": 1447,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "886:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1513,
														"src": "878:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1446,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "878:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1450,
												"initialValue": {
													"expression": {
														"id": 1448,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "893:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "899:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "893:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:27:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1451,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "920:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "928:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "920:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1457,
												"nodeType": "IfStatement",
												"src": "916:48:6",
												"trueBody": {
													"id": 1456,
													"nodeType": "Block",
													"src": "931:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "952:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1441,
															"id": 1455,
															"nodeType": "Return",
															"src": "945:8:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 1489,
													"nodeType": "Block",
													"src": "993:423:6",
													"statements": [
														{
															"assignments": [
																1462
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1462,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "1015:3:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1489,
																	"src": "1007:11:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1461,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1007:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1468,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1465,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1443,
																		"src": "1034:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1466,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "1039:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1463,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2827,
																		"src": "1021:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2827_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1026:7:6",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2000,
																	"src": "1021:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1007:37:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1470,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1435,
																				"src": "1282:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1471,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1462,
																				"src": "1289:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1469,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1535,
																				1556,
																				1577
																			],
																			"referencedDeclaration": 1577,
																			"src": "1269:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1641_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:24:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1641_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1473,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1294:5:6",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1640,
																	"src": "1269:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1474,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "1302:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1269:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1487,
																"nodeType": "Block",
																"src": "1360:46:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1481,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1443,
																				"src": "1378:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1482,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1462,
																					"src": "1384:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1483,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1390:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1384:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1378:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1486,
																		"nodeType": "ExpressionStatement",
																		"src": "1378:13:6"
																	}
																]
															},
															"id": 1488,
															"nodeType": "IfStatement",
															"src": "1265:141:6",
															"trueBody": {
																"id": 1480,
																"nodeType": "Block",
																"src": "1311:43:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1476,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1447,
																				"src": "1329:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1477,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1462,
																				"src": "1336:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1329:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1479,
																		"nodeType": "ExpressionStatement",
																		"src": "1329:10:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1458,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "981:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1459,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "987:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "981:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1490,
												"nodeType": "WhileStatement",
												"src": "974:442:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1491,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "1533:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1533:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1495,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1435,
																		"src": "1557:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1496,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1443,
																			"src": "1564:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1570:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1564:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1494,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1535,
																		1556,
																		1577
																	],
																	"referencedDeclaration": 1577,
																	"src": "1544:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1641_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1544:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1641_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1640,
															"src": "1544:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1501,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "1582:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1544:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1533:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1511,
													"nodeType": "Block",
													"src": "1636:35:6",
													"statements": [
														{
															"expression": {
																"id": 1509,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "1657:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1441,
															"id": 1510,
															"nodeType": "Return",
															"src": "1650:10:6"
														}
													]
												},
												"id": 1512,
												"nodeType": "IfStatement",
												"src": "1529:142:6",
												"trueBody": {
													"id": 1508,
													"nodeType": "Block",
													"src": "1591:39:6",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1504,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "1612:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1612:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1441,
															"id": 1507,
															"nodeType": "Return",
															"src": "1605:14:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "333:407:6",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "754:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "787:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "769:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1433,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1434,
													"nodeType": "ArrayTypeName",
													"src": "769:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "802:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "794:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:42:6"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "834:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:9:6"
									},
									"scope": 1604,
									"src": "745:932:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "1993:459:6",
										"statements": [
											{
												"assignments": [
													1527
												],
												"declarations": [
													{
														"constant": false,
														"id": 1527,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2011:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "2003:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1526,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1528,
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:12:6"
											},
											{
												"AST": {
													"nativeSrc": "2316:92:6",
													"nodeType": "YulBlock",
													"src": "2316:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2337:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2337:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "2340:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "2340:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2330:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:6"
																},
																"nativeSrc": "2330:19:6",
																"nodeType": "YulFunctionCall",
																"src": "2330:19:6"
															},
															"nativeSrc": "2330:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "2330:19:6"
														},
														{
															"nativeSrc": "2362:36:6",
															"nodeType": "YulAssignment",
															"src": "2362:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2384:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2384:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2387:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "2374:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "2374:9:6"
																		},
																		"nativeSrc": "2374:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2394:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2394:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2370:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:6"
																},
																"nativeSrc": "2370:28:6",
																"nodeType": "YulFunctionCall",
																"src": "2370:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "2362:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1518,
														"isOffset": false,
														"isSlot": true,
														"src": "2340:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1520,
														"isOffset": false,
														"isSlot": false,
														"src": "2394:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1527,
														"isOffset": false,
														"isSlot": false,
														"src": "2362:4:6",
														"valueSize": 1
													}
												],
												"id": 1529,
												"nodeType": "InlineAssembly",
												"src": "2307:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1530,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "2424:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2429:14:6",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1658,
														"src": "2424:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1632_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1632_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1525,
												"id": 1533,
												"nodeType": "Return",
												"src": "2417:28:6"
											}
										]
									},
									"documentation": {
										"id": 1515,
										"nodeType": "StructuredDocumentation",
										"src": "1683:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1888:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1919:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1901:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1516,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1901:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1517,
													"nodeType": "ArrayTypeName",
													"src": "1901:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1932:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1924:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:36:6"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1960:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1632_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1523,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1522,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1960:11:6",
															"1972:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1632,
														"src": "1960:23:6"
													},
													"referencedDeclaration": 1632,
													"src": "1960:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1632_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:33:6"
									},
									"scope": 1604,
									"src": "1879:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "2768:459:6",
										"statements": [
											{
												"assignments": [
													1548
												],
												"declarations": [
													{
														"constant": false,
														"id": 1548,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2786:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1555,
														"src": "2778:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1547,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2778:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1549,
												"nodeType": "VariableDeclarationStatement",
												"src": "2778:12:6"
											},
											{
												"AST": {
													"nativeSrc": "3091:92:6",
													"nodeType": "YulBlock",
													"src": "3091:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3112:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3112:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3115:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3115:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3105:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:6"
																},
																"nativeSrc": "3105:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3105:19:6"
															},
															"nativeSrc": "3105:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3105:19:6"
														},
														{
															"nativeSrc": "3137:36:6",
															"nodeType": "YulAssignment",
															"src": "3137:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3159:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3159:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3162:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3162:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3149:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "3149:9:6"
																		},
																		"nativeSrc": "3149:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3169:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3169:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3145:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:6"
																},
																"nativeSrc": "3145:28:6",
																"nodeType": "YulFunctionCall",
																"src": "3145:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3137:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3137:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1539,
														"isOffset": false,
														"isSlot": true,
														"src": "3115:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1541,
														"isOffset": false,
														"isSlot": false,
														"src": "3169:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1548,
														"isOffset": false,
														"isSlot": false,
														"src": "3137:4:6",
														"valueSize": 1
													}
												],
												"id": 1550,
												"nodeType": "InlineAssembly",
												"src": "3082:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1551,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1548,
															"src": "3199:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3204:14:6",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1680,
														"src": "3199:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1638_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1638_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1546,
												"id": 1554,
												"nodeType": "Return",
												"src": "3192:28:6"
											}
										]
									},
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "2458:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2663:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2694:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "2676:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1537,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2676:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1538,
													"nodeType": "ArrayTypeName",
													"src": "2676:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2707:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "2699:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:36:6"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "2735:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1638_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1544,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1543,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2735:11:6",
															"2747:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1638,
														"src": "2735:23:6"
													},
													"referencedDeclaration": 1638,
													"src": "2735:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1638_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:33:6"
									},
									"scope": 1604,
									"src": "2654:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1576,
										"nodeType": "Block",
										"src": "3543:459:6",
										"statements": [
											{
												"assignments": [
													1569
												],
												"declarations": [
													{
														"constant": false,
														"id": 1569,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3561:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1576,
														"src": "3553:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1568,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1570,
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:12:6"
											},
											{
												"AST": {
													"nativeSrc": "3866:92:6",
													"nodeType": "YulBlock",
													"src": "3866:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3887:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3887:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3890:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3890:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3880:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:6"
																},
																"nativeSrc": "3880:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3880:19:6"
															},
															"nativeSrc": "3880:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3880:19:6"
														},
														{
															"nativeSrc": "3912:36:6",
															"nodeType": "YulAssignment",
															"src": "3912:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3934:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3937:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3937:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3924:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "3924:9:6"
																		},
																		"nativeSrc": "3924:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3944:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:6"
																},
																"nativeSrc": "3920:28:6",
																"nodeType": "YulFunctionCall",
																"src": "3920:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3912:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1560,
														"isOffset": false,
														"isSlot": true,
														"src": "3890:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1562,
														"isOffset": false,
														"isSlot": false,
														"src": "3944:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1569,
														"isOffset": false,
														"isSlot": false,
														"src": "3912:4:6",
														"valueSize": 1
													}
												],
												"id": 1571,
												"nodeType": "InlineAssembly",
												"src": "3857:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1572,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "3974:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:14:6",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1691,
														"src": "3974:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1641_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1641_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1567,
												"id": 1575,
												"nodeType": "Return",
												"src": "3967:28:6"
											}
										]
									},
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "3233:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3438:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3469:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "3451:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1558,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3451:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1559,
													"nodeType": "ArrayTypeName",
													"src": "3451:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3482:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "3474:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:36:6"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "3510:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1641_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1565,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1564,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3510:11:6",
															"3522:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1641,
														"src": "3510:23:6"
													},
													"referencedDeclaration": 1641,
													"src": "3510:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1641_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:33:6"
									},
									"scope": 1604,
									"src": "3429:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "4303:98:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4322:73:6",
													"nodeType": "YulBlock",
													"src": "4322:73:6",
													"statements": [
														{
															"nativeSrc": "4336:49:6",
															"nodeType": "YulAssignment",
															"src": "4336:49:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4357:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4357:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4362:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4362:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4353:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4353:3:6"
																				},
																				"nativeSrc": "4353:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4353:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4373:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4373:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4378:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4378:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4369:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4369:3:6"
																				},
																				"nativeSrc": "4369:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4369:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:6"
																		},
																		"nativeSrc": "4349:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:35:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4343:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4343:5:6"
																},
																"nativeSrc": "4343:42:6",
																"nodeType": "YulFunctionCall",
																"src": "4343:42:6"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4336:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1581,
														"isOffset": false,
														"isSlot": false,
														"src": "4357:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1583,
														"isOffset": false,
														"isSlot": false,
														"src": "4373:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1586,
														"isOffset": false,
														"isSlot": false,
														"src": "4336:3:6",
														"valueSize": 1
													}
												],
												"id": 1588,
												"nodeType": "InlineAssembly",
												"src": "4313:82:6"
											}
										]
									},
									"documentation": {
										"id": 1578,
										"nodeType": "StructuredDocumentation",
										"src": "4008:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4213:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4249:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "4232:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1579,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4232:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1580,
													"nodeType": "ArrayTypeName",
													"src": "4232:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4262:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "4254:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:35:6"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4298:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "4290:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:13:6"
									},
									"scope": 1604,
									"src": "4204:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "4702:98:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4721:73:6",
													"nodeType": "YulBlock",
													"src": "4721:73:6",
													"statements": [
														{
															"nativeSrc": "4735:49:6",
															"nodeType": "YulAssignment",
															"src": "4735:49:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4756:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4761:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4761:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4752:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4752:3:6"
																				},
																				"nativeSrc": "4752:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4752:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4772:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4772:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4777:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4777:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4768:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4768:3:6"
																				},
																				"nativeSrc": "4768:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4768:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4748:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:6"
																		},
																		"nativeSrc": "4748:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4748:35:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4742:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4742:5:6"
																},
																"nativeSrc": "4742:42:6",
																"nodeType": "YulFunctionCall",
																"src": "4742:42:6"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4735:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1594,
														"isOffset": false,
														"isSlot": false,
														"src": "4756:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1596,
														"isOffset": false,
														"isSlot": false,
														"src": "4772:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1599,
														"isOffset": false,
														"isSlot": false,
														"src": "4735:3:6",
														"valueSize": 1
													}
												],
												"id": 1601,
												"nodeType": "InlineAssembly",
												"src": "4712:82:6"
											}
										]
									},
									"documentation": {
										"id": 1591,
										"nodeType": "StructuredDocumentation",
										"src": "4407:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4612:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4648:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "4631:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1592,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4631:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1593,
													"nodeType": "ArrayTypeName",
													"src": "4631:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4661:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "4653:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:35:6"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4697:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "4689:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:13:6"
									},
									"scope": 1604,
									"src": "4603:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1605,
							"src": "276:4526:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:4703:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1626
						]
					},
					"id": 1627,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1606,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1607,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1626,
							"linearizedBaseContracts": [
								1626
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1612,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1611,
												"id": 1614,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1626,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1624,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1621,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1620,
												"id": 1623,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1626,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1627,
							"src": "624:235:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1736
						]
					},
					"id": 1737,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1628,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1629,
								"nodeType": "StructuredDocumentation",
								"src": "219:1026:8",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1736,
							"linearizedBaseContracts": [
								1736
							],
							"name": "StorageSlot",
							"nameLocation": "1254:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1632,
									"members": [
										{
											"constant": false,
											"id": 1631,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1309:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1632,
											"src": "1301:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1630,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1301:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1279:11:8",
									"nodeType": "StructDefinition",
									"scope": 1736,
									"src": "1272:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1635,
									"members": [
										{
											"constant": false,
											"id": 1634,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1361:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1635,
											"src": "1356:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1633,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1356:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1334:11:8",
									"nodeType": "StructDefinition",
									"scope": 1736,
									"src": "1327:46:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1638,
									"members": [
										{
											"constant": false,
											"id": 1637,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1416:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1638,
											"src": "1408:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1636,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1408:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1386:11:8",
									"nodeType": "StructDefinition",
									"scope": 1736,
									"src": "1379:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1641,
									"members": [
										{
											"constant": false,
											"id": 1640,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1471:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1641,
											"src": "1463:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1639,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1463:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1441:11:8",
									"nodeType": "StructDefinition",
									"scope": 1736,
									"src": "1434:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1644,
									"members": [
										{
											"constant": false,
											"id": 1643,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1524:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1644,
											"src": "1517:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1642,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1517:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1496:10:8",
									"nodeType": "StructDefinition",
									"scope": 1736,
									"src": "1489:47:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1647,
									"members": [
										{
											"constant": false,
											"id": 1646,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1575:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1647,
											"src": "1569:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1645,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1569:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1549:9:8",
									"nodeType": "StructDefinition",
									"scope": 1736,
									"src": "1542:45:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "1769:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1831:38:8",
													"nodeType": "YulBlock",
													"src": "1831:38:8",
													"statements": [
														{
															"nativeSrc": "1845:14:8",
															"nodeType": "YulAssignment",
															"src": "1845:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "1855:4:8",
																"nodeType": "YulIdentifier",
																"src": "1855:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1845:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1845:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1654,
														"isOffset": false,
														"isSlot": true,
														"src": "1845:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1650,
														"isOffset": false,
														"isSlot": false,
														"src": "1855:4:8",
														"valueSize": 1
													}
												],
												"id": 1656,
												"nodeType": "InlineAssembly",
												"src": "1822:47:8"
											}
										]
									},
									"documentation": {
										"id": 1648,
										"nodeType": "StructuredDocumentation",
										"src": "1593:87:8",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1694:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1717:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "1709:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1649,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:14:8"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1766:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "1746:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1632_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1653,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1652,
														"name": "AddressSlot",
														"nameLocations": [
															"1746:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1632,
														"src": "1746:11:8"
													},
													"referencedDeclaration": 1632,
													"src": "1746:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1632_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1745:23:8"
									},
									"scope": 1736,
									"src": "1685:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "2057:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2119:38:8",
													"nodeType": "YulBlock",
													"src": "2119:38:8",
													"statements": [
														{
															"nativeSrc": "2133:14:8",
															"nodeType": "YulAssignment",
															"src": "2133:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2143:4:8",
																"nodeType": "YulIdentifier",
																"src": "2143:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2133:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1665,
														"isOffset": false,
														"isSlot": true,
														"src": "2133:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1661,
														"isOffset": false,
														"isSlot": false,
														"src": "2143:4:8",
														"valueSize": 1
													}
												],
												"id": 1667,
												"nodeType": "InlineAssembly",
												"src": "2110:47:8"
											}
										]
									},
									"documentation": {
										"id": 1659,
										"nodeType": "StructuredDocumentation",
										"src": "1881:87:8",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1982:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2005:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1997:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1660,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:14:8"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2054:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "2034:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1635_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1664,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1663,
														"name": "BooleanSlot",
														"nameLocations": [
															"2034:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1635,
														"src": "2034:11:8"
													},
													"referencedDeclaration": 1635,
													"src": "2034:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1635_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2033:23:8"
									},
									"scope": 1736,
									"src": "1973:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "2345:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2407:38:8",
													"nodeType": "YulBlock",
													"src": "2407:38:8",
													"statements": [
														{
															"nativeSrc": "2421:14:8",
															"nodeType": "YulAssignment",
															"src": "2421:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2431:4:8",
																"nodeType": "YulIdentifier",
																"src": "2431:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2421:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1676,
														"isOffset": false,
														"isSlot": true,
														"src": "2421:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1672,
														"isOffset": false,
														"isSlot": false,
														"src": "2431:4:8",
														"valueSize": 1
													}
												],
												"id": 1678,
												"nodeType": "InlineAssembly",
												"src": "2398:47:8"
											}
										]
									},
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "2169:87:8",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2270:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2293:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "2285:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1671,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:14:8"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2342:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "2322:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1638_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1675,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1674,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2322:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1638,
														"src": "2322:11:8"
													},
													"referencedDeclaration": 1638,
													"src": "2322:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1638_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2321:23:8"
									},
									"scope": 1736,
									"src": "2261:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1690,
										"nodeType": "Block",
										"src": "2633:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2695:38:8",
													"nodeType": "YulBlock",
													"src": "2695:38:8",
													"statements": [
														{
															"nativeSrc": "2709:14:8",
															"nodeType": "YulAssignment",
															"src": "2709:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2719:4:8",
																"nodeType": "YulIdentifier",
																"src": "2719:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2709:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1687,
														"isOffset": false,
														"isSlot": true,
														"src": "2709:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1683,
														"isOffset": false,
														"isSlot": false,
														"src": "2719:4:8",
														"valueSize": 1
													}
												],
												"id": 1689,
												"nodeType": "InlineAssembly",
												"src": "2686:47:8"
											}
										]
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "2457:87:8",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2558:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2581:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "2573:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1682,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2573:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2572:14:8"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2630:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "2610:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1641_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1686,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1685,
														"name": "Uint256Slot",
														"nameLocations": [
															"2610:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1641,
														"src": "2610:11:8"
													},
													"referencedDeclaration": 1641,
													"src": "2610:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1641_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2609:23:8"
									},
									"scope": 1736,
									"src": "2549:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1701,
										"nodeType": "Block",
										"src": "2918:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2980:38:8",
													"nodeType": "YulBlock",
													"src": "2980:38:8",
													"statements": [
														{
															"nativeSrc": "2994:14:8",
															"nodeType": "YulAssignment",
															"src": "2994:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3004:4:8",
																"nodeType": "YulIdentifier",
																"src": "3004:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2994:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2994:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1698,
														"isOffset": false,
														"isSlot": true,
														"src": "2994:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1694,
														"isOffset": false,
														"isSlot": false,
														"src": "3004:4:8",
														"valueSize": 1
													}
												],
												"id": 1700,
												"nodeType": "InlineAssembly",
												"src": "2971:47:8"
											}
										]
									},
									"documentation": {
										"id": 1692,
										"nodeType": "StructuredDocumentation",
										"src": "2745:86:8",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2845:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2867:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "2859:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1693,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2859:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2858:14:8"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2915:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "2896:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1644_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1697,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1696,
														"name": "StringSlot",
														"nameLocations": [
															"2896:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "2896:10:8"
													},
													"referencedDeclaration": 1644,
													"src": "2896:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1644_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2895:22:8"
									},
									"scope": 1736,
									"src": "2836:188:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "3226:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3288:44:8",
													"nodeType": "YulBlock",
													"src": "3288:44:8",
													"statements": [
														{
															"nativeSrc": "3302:20:8",
															"nodeType": "YulAssignment",
															"src": "3302:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3312:10:8",
																"nodeType": "YulIdentifier",
																"src": "3312:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3302:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3302:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1709,
														"isOffset": false,
														"isSlot": true,
														"src": "3302:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1705,
														"isOffset": false,
														"isSlot": true,
														"src": "3312:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1711,
												"nodeType": "InlineAssembly",
												"src": "3279:53:8"
											}
										]
									},
									"documentation": {
										"id": 1703,
										"nodeType": "StructuredDocumentation",
										"src": "3030:101:8",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3145:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3174:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "3159:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1704,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3159:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3158:22:8"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3223:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "3204:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1644_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1708,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1707,
														"name": "StringSlot",
														"nameLocations": [
															"3204:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "3204:10:8"
													},
													"referencedDeclaration": 1644,
													"src": "3204:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1644_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3203:22:8"
									},
									"scope": 1736,
									"src": "3136:202:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "3514:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3576:38:8",
													"nodeType": "YulBlock",
													"src": "3576:38:8",
													"statements": [
														{
															"nativeSrc": "3590:14:8",
															"nodeType": "YulAssignment",
															"src": "3590:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3600:4:8",
																"nodeType": "YulIdentifier",
																"src": "3600:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3590:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3590:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1720,
														"isOffset": false,
														"isSlot": true,
														"src": "3590:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1716,
														"isOffset": false,
														"isSlot": false,
														"src": "3600:4:8",
														"valueSize": 1
													}
												],
												"id": 1722,
												"nodeType": "InlineAssembly",
												"src": "3567:47:8"
											}
										]
									},
									"documentation": {
										"id": 1714,
										"nodeType": "StructuredDocumentation",
										"src": "3344:85:8",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3443:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3464:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "3456:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1715,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3456:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3455:14:8"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3511:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "3493:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1647_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1719,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1718,
														"name": "BytesSlot",
														"nameLocations": [
															"3493:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1647,
														"src": "3493:9:8"
													},
													"referencedDeclaration": 1647,
													"src": "3493:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1647_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:21:8"
									},
									"scope": 1736,
									"src": "3434:186:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "3817:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3879:44:8",
													"nodeType": "YulBlock",
													"src": "3879:44:8",
													"statements": [
														{
															"nativeSrc": "3893:20:8",
															"nodeType": "YulAssignment",
															"src": "3893:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3903:10:8",
																"nodeType": "YulIdentifier",
																"src": "3903:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3893:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3893:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1731,
														"isOffset": false,
														"isSlot": true,
														"src": "3893:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1727,
														"isOffset": false,
														"isSlot": true,
														"src": "3903:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1733,
												"nodeType": "InlineAssembly",
												"src": "3870:53:8"
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "3626:99:8",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3739:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3766:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "3752:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1726,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3752:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3751:21:8"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3814:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "3796:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1647_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1730,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1729,
														"name": "BytesSlot",
														"nameLocations": [
															"3796:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1647,
														"src": "3796:9:8"
													},
													"referencedDeclaration": 1647,
													"src": "3796:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1647_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3795:21:8"
									},
									"scope": 1736,
									"src": "3730:199:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1737,
							"src": "1246:2685:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3739:8"
				},
				"id": 8
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1760
						],
						"IERC165": [
							1772
						]
					},
					"id": 1761,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1738,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1740,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1761,
							"sourceUnit": 1773,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1739,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1772,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1742,
										"name": "IERC165",
										"nameLocations": [
											"688:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1772,
										"src": "688:7:9"
									},
									"id": 1743,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1741,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1760,
							"linearizedBaseContracts": [
								1760,
								1772
							],
							"name": "ERC165",
							"nameLocation": "678:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1771
									],
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "845:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1751,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1746,
														"src": "862:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1753,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1772,
																	"src": "882:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1772_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1772_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1752,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1772",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1750,
												"id": 1757,
												"nodeType": "Return",
												"src": "855:47:9"
											}
										]
									},
									"documentation": {
										"id": 1744,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "790:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1745,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:9"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "839:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1748,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:9"
									},
									"scope": 1760,
									"src": "763:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1761,
							"src": "660:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:9"
				},
				"id": 9
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1772
						]
					},
					"id": 1773,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1762,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1763,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1772,
							"linearizedBaseContracts": [
								1772
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1765,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1768,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1772,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1773,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2827
						]
					},
					"id": 2828,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1774,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1775,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:11",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2827,
							"linearizedBaseContracts": [
								2827
							],
							"name": "Math",
							"nameLocation": "211:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:11",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1778,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:11"
									},
									"src": "277:29:11"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1783,
									"members": [
										{
											"id": 1779,
											"name": "Floor",
											"nameLocation": "336:5:11",
											"nodeType": "EnumValue",
											"src": "336:5:11"
										},
										{
											"id": 1780,
											"name": "Ceil",
											"nameLocation": "379:4:11",
											"nodeType": "EnumValue",
											"src": "379:4:11"
										},
										{
											"id": 1781,
											"name": "Trunc",
											"nameLocation": "421:5:11",
											"nodeType": "EnumValue",
											"src": "421:5:11"
										},
										{
											"id": 1782,
											"name": "Expand",
											"nameLocation": "451:6:11",
											"nodeType": "EnumValue",
											"src": "451:6:11"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:11",
									"nodeType": "EnumDefinition",
									"src": "312:169:11"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "661:140:11",
										"statements": [
											{
												"id": 1813,
												"nodeType": "UncheckedBlock",
												"src": "671:124:11",
												"statements": [
													{
														"assignments": [
															1796
														],
														"declarations": [
															{
																"constant": false,
																"id": 1796,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1813,
																"src": "695:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1795,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1800,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1797,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1786,
																"src": "707:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1798,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "711:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1801,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1796,
																"src": "730:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1802,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1786,
																"src": "734:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1808,
														"nodeType": "IfStatement",
														"src": "726:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1806,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1794,
															"id": 1807,
															"nodeType": "Return",
															"src": "737:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1810,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1796,
																	"src": "782:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1811,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1794,
														"id": 1812,
														"nodeType": "Return",
														"src": "768:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:11",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "612:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:11"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "646:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "652:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:11"
									},
									"scope": 2827,
									"src": "585:216:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "984:113:11",
										"statements": [
											{
												"id": 1841,
												"nodeType": "UncheckedBlock",
												"src": "994:97:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1827,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1820,
																"src": "1022:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1828,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1818,
																"src": "1026:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1834,
														"nodeType": "IfStatement",
														"src": "1018:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1832,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1826,
															"id": 1833,
															"nodeType": "Return",
															"src": "1029:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1836,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1818,
																		"src": "1074:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1837,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1820,
																		"src": "1078:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1839,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1826,
														"id": 1840,
														"nodeType": "Return",
														"src": "1060:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:11",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "924:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "935:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:11"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "969:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "975:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:11"
									},
									"scope": 2827,
									"src": "908:189:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1884,
										"nodeType": "Block",
										"src": "1283:417:11",
										"statements": [
											{
												"id": 1883,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1855,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "1551:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1862,
														"nodeType": "IfStatement",
														"src": "1547:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1860,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1854,
															"id": 1861,
															"nodeType": "Return",
															"src": "1559:16:11"
														}
													},
													{
														"assignments": [
															1864
														],
														"declarations": [
															{
																"constant": false,
																"id": 1864,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1883,
																"src": "1589:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1863,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1868,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1865,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "1601:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1866,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1848,
																"src": "1605:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1869,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "1624:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1870,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "1628:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1872,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1848,
																"src": "1633:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1878,
														"nodeType": "IfStatement",
														"src": "1620:33:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1876,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1854,
															"id": 1877,
															"nodeType": "Return",
															"src": "1636:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1880,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "1681:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1881,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1854,
														"id": 1882,
														"nodeType": "Return",
														"src": "1667:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:11",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "1223:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "1234:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:11"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "1268:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1850,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "1274:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:11"
									},
									"scope": 2827,
									"src": "1207:493:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1912,
										"nodeType": "Block",
										"src": "1887:114:11",
										"statements": [
											{
												"id": 1911,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1897,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1890,
																"src": "1925:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1904,
														"nodeType": "IfStatement",
														"src": "1921:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1902,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1896,
															"id": 1903,
															"nodeType": "Return",
															"src": "1933:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1906,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1888,
																		"src": "1978:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1907,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1890,
																		"src": "1982:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1909,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1896,
														"id": 1910,
														"nodeType": "Return",
														"src": "1964:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1886,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:11",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "1827:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "1838:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:11"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "1872:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1892,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "1878:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:11"
									},
									"scope": 2827,
									"src": "1811:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1940,
										"nodeType": "Block",
										"src": "2198:114:11",
										"statements": [
											{
												"id": 1939,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1925,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1918,
																"src": "2236:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1932,
														"nodeType": "IfStatement",
														"src": "2232:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1930,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1924,
															"id": 1931,
															"nodeType": "Return",
															"src": "2244:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1934,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1916,
																		"src": "2289:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1935,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1918,
																		"src": "2293:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1937,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1924,
														"id": 1938,
														"nodeType": "Return",
														"src": "2275:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1914,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "2138:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "2149:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:11"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "2183:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1920,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "2189:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:11"
									},
									"scope": 2827,
									"src": "2122:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "2449:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1951,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "2466:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1952,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1946,
															"src": "2470:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1955,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1946,
														"src": "2478:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:11",
													"trueExpression": {
														"id": 1954,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "2474:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1950,
												"id": 1957,
												"nodeType": "Return",
												"src": "2459:20:11"
											}
										]
									},
									"documentation": {
										"id": 1942,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:11",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "2395:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "2406:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:11"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "2440:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:11"
									},
									"scope": 2827,
									"src": "2382:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1976,
										"nodeType": "Block",
										"src": "2624:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1969,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "2641:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1970,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1964,
															"src": "2645:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1973,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1964,
														"src": "2653:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:11",
													"trueExpression": {
														"id": 1972,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1962,
														"src": "2649:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1968,
												"id": 1975,
												"nodeType": "Return",
												"src": "2634:20:11"
											}
										]
									},
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:11",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "2570:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "2581:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:11"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "2615:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:11"
									},
									"scope": 2827,
									"src": "2557:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1999,
										"nodeType": "Block",
										"src": "2845:82:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1987,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1980,
																	"src": "2900:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1988,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1982,
																	"src": "2904:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1990,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1991,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1980,
																		"src": "2910:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1992,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1982,
																		"src": "2914:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1994,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1986,
												"id": 1998,
												"nodeType": "Return",
												"src": "2892:28:11"
											}
										]
									},
									"documentation": {
										"id": 1978,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:11",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "2791:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "2802:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:11"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "2836:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:11"
									},
									"scope": 2827,
									"src": "2774:153:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2034,
										"nodeType": "Block",
										"src": "3219:596:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2010,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2005,
														"src": "3233:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2018,
												"nodeType": "IfStatement",
												"src": "3229:127:11",
												"trueBody": {
													"id": 2017,
													"nodeType": "Block",
													"src": "3241:115:11",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2013,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2003,
																	"src": "3340:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2014,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2005,
																	"src": "3344:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2009,
															"id": 2016,
															"nodeType": "Return",
															"src": "3333:12:11"
														}
													]
												}
											},
											{
												"id": 2033,
												"nodeType": "UncheckedBlock",
												"src": "3739:70:11",
												"statements": [
													{
														"expression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2019,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2003,
																	"src": "3770:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3775:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3770:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2023,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2003,
																					"src": "3784:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2024,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3788:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "3784:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2026,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3783:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2027,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2005,
																		"src": "3793:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3783:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3797:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3783:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "3770:28:11",
															"trueExpression": {
																"hexValue": "30",
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3779:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2009,
														"id": 2032,
														"nodeType": "Return",
														"src": "3763:35:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2001,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:11",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "3165:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "3176:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:11"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "3210:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:11"
									},
									"scope": 2827,
									"src": "3148:667:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2160,
										"nodeType": "Block",
										"src": "4237:4018:11",
										"statements": [
											{
												"id": 2159,
												"nodeType": "UncheckedBlock",
												"src": "4247:4002:11",
												"statements": [
													{
														"assignments": [
															2048
														],
														"declarations": [
															{
																"constant": false,
																"id": 2048,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4576:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2159,
																"src": "4568:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2047,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4568:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2052,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2049,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2038,
																"src": "4584:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2050,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2040,
																"src": "4588:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4584:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4568:21:11"
													},
													{
														"assignments": [
															2054
														],
														"declarations": [
															{
																"constant": false,
																"id": 2054,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4656:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2159,
																"src": "4648:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2053,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4648:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2055,
														"nodeType": "VariableDeclarationStatement",
														"src": "4648:13:11"
													},
													{
														"AST": {
															"nativeSrc": "4728:122:11",
															"nodeType": "YulBlock",
															"src": "4728:122:11",
															"statements": [
																{
																	"nativeSrc": "4746:30:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4746:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4763:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4763:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4766:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4766:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4773:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4773:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4769:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4769:3:11"
																				},
																				"nativeSrc": "4769:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4769:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4756:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4756:6:11"
																		},
																		"nativeSrc": "4756:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4756:20:11"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4750:2:11",
																			"nodeType": "YulTypedName",
																			"src": "4750:2:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4793:43:11",
																	"nodeType": "YulAssignment",
																	"src": "4793:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4810:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4810:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4814:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4814:5:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4806:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4806:3:11"
																				},
																				"nativeSrc": "4806:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4806:14:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4825:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4825:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4829:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4829:5:11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4822:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "4822:2:11"
																				},
																				"nativeSrc": "4822:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4822:13:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4802:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4802:3:11"
																		},
																		"nativeSrc": "4802:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4802:34:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4793:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4793:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2048,
																"isOffset": false,
																"isSlot": false,
																"src": "4814:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2048,
																"isOffset": false,
																"isSlot": false,
																"src": "4829:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2054,
																"isOffset": false,
																"isSlot": false,
																"src": "4793:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2038,
																"isOffset": false,
																"isSlot": false,
																"src": "4763:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2040,
																"isOffset": false,
																"isSlot": false,
																"src": "4766:1:11",
																"valueSize": 1
															}
														],
														"id": 2056,
														"nodeType": "InlineAssembly",
														"src": "4719:131:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2057,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2054,
																"src": "4931:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4940:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4931:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2065,
														"nodeType": "IfStatement",
														"src": "4927:368:11",
														"trueBody": {
															"id": 2064,
															"nodeType": "Block",
															"src": "4943:352:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2060,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2048,
																			"src": "5261:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2061,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2042,
																			"src": "5269:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5261:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2046,
																	"id": 2063,
																	"nodeType": "Return",
																	"src": "5254:26:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2066,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "5401:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2067,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2054,
																"src": "5416:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5401:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2073,
														"nodeType": "IfStatement",
														"src": "5397:88:11",
														"trueBody": {
															"id": 2072,
															"nodeType": "Block",
															"src": "5423:62:11",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2069,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1778,
																			"src": "5448:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5448:22:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2071,
																	"nodeType": "RevertStatement",
																	"src": "5441:29:11"
																}
															]
														}
													},
													{
														"assignments": [
															2075
														],
														"declarations": [
															{
																"constant": false,
																"id": 2075,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5748:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 2159,
																"src": "5740:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2074,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5740:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2076,
														"nodeType": "VariableDeclarationStatement",
														"src": "5740:17:11"
													},
													{
														"AST": {
															"nativeSrc": "5780:291:11",
															"nodeType": "YulBlock",
															"src": "5780:291:11",
															"statements": [
																{
																	"nativeSrc": "5849:38:11",
																	"nodeType": "YulAssignment",
																	"src": "5849:38:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5869:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5869:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5872:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5872:1:11"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5875:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "5875:11:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5862:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5862:6:11"
																		},
																		"nativeSrc": "5862:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5862:25:11"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5849:9:11",
																			"nodeType": "YulIdentifier",
																			"src": "5849:9:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5969:41:11",
																	"nodeType": "YulAssignment",
																	"src": "5969:41:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5982:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5982:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5992:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5992:9:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "6003:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6003:5:11"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5989:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "5989:2:11"
																				},
																				"nativeSrc": "5989:20:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5989:20:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5978:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5978:3:11"
																		},
																		"nativeSrc": "5978:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5978:32:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5969:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5969:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6027:30:11",
																	"nodeType": "YulAssignment",
																	"src": "6027:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6040:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6040:5:11"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "6047:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6047:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6036:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6036:3:11"
																		},
																		"nativeSrc": "6036:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6036:21:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6027:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6027:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2042,
																"isOffset": false,
																"isSlot": false,
																"src": "5875:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2048,
																"isOffset": false,
																"isSlot": false,
																"src": "6003:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2048,
																"isOffset": false,
																"isSlot": false,
																"src": "6027:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2048,
																"isOffset": false,
																"isSlot": false,
																"src": "6040:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2054,
																"isOffset": false,
																"isSlot": false,
																"src": "5969:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2054,
																"isOffset": false,
																"isSlot": false,
																"src": "5982:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2075,
																"isOffset": false,
																"isSlot": false,
																"src": "5849:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2075,
																"isOffset": false,
																"isSlot": false,
																"src": "5992:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2075,
																"isOffset": false,
																"isSlot": false,
																"src": "6047:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2038,
																"isOffset": false,
																"isSlot": false,
																"src": "5869:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2040,
																"isOffset": false,
																"isSlot": false,
																"src": "5872:1:11",
																"valueSize": 1
															}
														],
														"id": 2077,
														"nodeType": "InlineAssembly",
														"src": "5771:300:11"
													},
													{
														"assignments": [
															2079
														],
														"declarations": [
															{
																"constant": false,
																"id": 2079,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "6283:4:11",
																"nodeType": "VariableDeclaration",
																"scope": 2159,
																"src": "6275:12:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2078,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6275:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2086,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2080,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "6290:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6305:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2082,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2042,
																			"src": "6309:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6305:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2084,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6304:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6290:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6275:46:11"
													},
													{
														"AST": {
															"nativeSrc": "6344:362:11",
															"nodeType": "YulBlock",
															"src": "6344:362:11",
															"statements": [
																{
																	"nativeSrc": "6409:37:11",
																	"nodeType": "YulAssignment",
																	"src": "6409:37:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6428:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "6428:11:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6441:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6441:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6424:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6424:3:11"
																		},
																		"nativeSrc": "6424:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6424:22:11"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6409:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "6409:11:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6513:25:11",
																	"nodeType": "YulAssignment",
																	"src": "6513:25:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6526:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6526:5:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6533:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6533:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6522:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6522:3:11"
																		},
																		"nativeSrc": "6522:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6522:16:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6513:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6513:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6653:39:11",
																	"nodeType": "YulAssignment",
																	"src": "6653:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6673:1:11",
																								"nodeType": "YulLiteral",
																								"src": "6673:1:11",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6676:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "6676:4:11"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6669:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6669:3:11"
																						},
																						"nativeSrc": "6669:12:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6669:12:11"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6683:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "6683:4:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6665:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6665:3:11"
																				},
																				"nativeSrc": "6665:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6665:23:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6690:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6690:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6661:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6661:3:11"
																		},
																		"nativeSrc": "6661:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6661:31:11"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6653:4:11",
																			"nodeType": "YulIdentifier",
																			"src": "6653:4:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2042,
																"isOffset": false,
																"isSlot": false,
																"src": "6409:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2042,
																"isOffset": false,
																"isSlot": false,
																"src": "6428:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2048,
																"isOffset": false,
																"isSlot": false,
																"src": "6513:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2048,
																"isOffset": false,
																"isSlot": false,
																"src": "6526:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "6441:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "6533:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "6653:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "6676:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "6683:4:11",
																"valueSize": 1
															}
														],
														"id": 2087,
														"nodeType": "InlineAssembly",
														"src": "6335:371:11"
													},
													{
														"expression": {
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2088,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2048,
																"src": "6772:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2089,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2054,
																	"src": "6781:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2090,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2079,
																	"src": "6789:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6781:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6772:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2093,
														"nodeType": "ExpressionStatement",
														"src": "6772:21:11"
													},
													{
														"assignments": [
															2095
														],
														"declarations": [
															{
																"constant": false,
																"id": 2095,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "7119:7:11",
																"nodeType": "VariableDeclaration",
																"scope": 2159,
																"src": "7111:15:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2094,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7111:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2102,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7130:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2097,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2042,
																			"src": "7134:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7130:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2099,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7129:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7149:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "7129:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7111:39:11"
													},
													{
														"expression": {
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2103,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2095,
																"src": "7367:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7378:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2105,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2042,
																		"src": "7382:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2106,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2095,
																		"src": "7396:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7382:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7378:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7367:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2110,
														"nodeType": "ExpressionStatement",
														"src": "7367:36:11"
													},
													{
														"expression": {
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2111,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2095,
																"src": "7436:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7447:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2113,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2042,
																		"src": "7451:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2114,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2095,
																		"src": "7465:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7451:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7447:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7436:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2118,
														"nodeType": "ExpressionStatement",
														"src": "7436:36:11"
													},
													{
														"expression": {
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2119,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2095,
																"src": "7506:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7517:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2121,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2042,
																		"src": "7521:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2122,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2095,
																		"src": "7535:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7521:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7517:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7506:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2126,
														"nodeType": "ExpressionStatement",
														"src": "7506:36:11"
													},
													{
														"expression": {
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2127,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2095,
																"src": "7576:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7587:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2129,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2042,
																		"src": "7591:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2130,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2095,
																		"src": "7605:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7591:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7587:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7576:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2134,
														"nodeType": "ExpressionStatement",
														"src": "7576:36:11"
													},
													{
														"expression": {
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2135,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2095,
																"src": "7646:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7657:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2137,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2042,
																		"src": "7661:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2138,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2095,
																		"src": "7675:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7661:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7657:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7646:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2142,
														"nodeType": "ExpressionStatement",
														"src": "7646:36:11"
													},
													{
														"expression": {
															"id": 2149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2143,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2095,
																"src": "7717:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7728:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2145,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2042,
																		"src": "7732:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2146,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2095,
																		"src": "7746:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7732:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7728:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7717:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2150,
														"nodeType": "ExpressionStatement",
														"src": "7717:36:11"
													},
													{
														"expression": {
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2151,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "8187:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2152,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2048,
																	"src": "8196:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2153,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2095,
																	"src": "8204:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8196:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8187:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2156,
														"nodeType": "ExpressionStatement",
														"src": "8187:24:11"
													},
													{
														"expression": {
															"id": 2157,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2045,
															"src": "8232:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2046,
														"id": 2158,
														"nodeType": "Return",
														"src": "8225:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2036,
										"nodeType": "StructuredDocumentation",
										"src": "3821:313:11",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "4148:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4163:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "4155:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4155:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4174:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "4166:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4166:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "4185:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "4177:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4177:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4154:43:11"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4229:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "4221:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:16:11"
									},
									"scope": 2827,
									"src": "4139:4116:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2203,
										"nodeType": "Block",
										"src": "8497:192:11",
										"statements": [
											{
												"assignments": [
													2177
												],
												"declarations": [
													{
														"constant": false,
														"id": 2177,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8515:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2203,
														"src": "8507:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2176,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8507:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2183,
												"initialValue": {
													"arguments": [
														{
															"id": 2179,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "8531:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2180,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2166,
															"src": "8534:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2181,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "8537:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2178,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2161,
															2204
														],
														"referencedDeclaration": 2161,
														"src": "8524:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8524:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8507:42:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2185,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2171,
																"src": "8580:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1783",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1783",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2184,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2826,
															"src": "8563:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1783_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8563:26:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2188,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2164,
																	"src": "8600:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2189,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2166,
																	"src": "8603:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2190,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "8606:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2187,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8593:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8593:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8621:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8593:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8563:59:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2200,
												"nodeType": "IfStatement",
												"src": "8559:101:11",
												"trueBody": {
													"id": 2199,
													"nodeType": "Block",
													"src": "8624:36:11",
													"statements": [
														{
															"expression": {
																"id": 2197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2195,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "8638:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8648:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8638:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2198,
															"nodeType": "ExpressionStatement",
															"src": "8638:11:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2201,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2177,
													"src": "8676:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2175,
												"id": 2202,
												"nodeType": "Return",
												"src": "8669:13:11"
											}
										]
									},
									"documentation": {
										"id": 2162,
										"nodeType": "StructuredDocumentation",
										"src": "8261:121:11",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8396:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8411:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "8403:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8403:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8422:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "8414:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8414:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8433:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "8425:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8425:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8455:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "8446:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1783",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2170,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2169,
														"name": "Rounding",
														"nameLocations": [
															"8446:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1783,
														"src": "8446:8:11"
													},
													"referencedDeclaration": 1783,
													"src": "8446:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1783",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8402:62:11"
									},
									"returnParameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "8488:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8488:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8487:9:11"
									},
									"scope": 2827,
									"src": "8387:302:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2315,
										"nodeType": "Block",
										"src": "8980:1585:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2212,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2207,
														"src": "8994:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8999:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8994:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2218,
												"nodeType": "IfStatement",
												"src": "8990:45:11",
												"trueBody": {
													"id": 2217,
													"nodeType": "Block",
													"src": "9002:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9023:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2211,
															"id": 2216,
															"nodeType": "Return",
															"src": "9016:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2220
												],
												"declarations": [
													{
														"constant": false,
														"id": 2220,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9722:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2315,
														"src": "9714:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2219,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9714:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2229,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9731:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2223,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "9742:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2222,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2483,
																			2518
																		],
																		"referencedDeclaration": 2483,
																		"src": "9737:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9737:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9748:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9737:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2227,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9736:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9731:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9714:36:11"
											},
											{
												"id": 2314,
												"nodeType": "UncheckedBlock",
												"src": "10151:408:11",
												"statements": [
													{
														"expression": {
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2230,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2220,
																"src": "10175:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2231,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2220,
																				"src": "10185:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2232,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2207,
																					"src": "10194:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2233,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2220,
																					"src": "10198:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10194:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10185:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2236,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10184:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10209:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10184:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10175:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2240,
														"nodeType": "ExpressionStatement",
														"src": "10175:35:11"
													},
													{
														"expression": {
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2241,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2220,
																"src": "10224:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2242,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2220,
																				"src": "10234:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2243,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2207,
																					"src": "10243:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2244,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2220,
																					"src": "10247:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10243:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10234:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2247,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10233:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10258:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10233:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10224:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2251,
														"nodeType": "ExpressionStatement",
														"src": "10224:35:11"
													},
													{
														"expression": {
															"id": 2261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2252,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2220,
																"src": "10273:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2253,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2220,
																				"src": "10283:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2254,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2207,
																					"src": "10292:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2255,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2220,
																					"src": "10296:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10292:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10283:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2258,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10282:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10307:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10282:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10273:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2262,
														"nodeType": "ExpressionStatement",
														"src": "10273:35:11"
													},
													{
														"expression": {
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2263,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2220,
																"src": "10322:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2264,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2220,
																				"src": "10332:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2267,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2265,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2207,
																					"src": "10341:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2266,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2220,
																					"src": "10345:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10341:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10332:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2269,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10331:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10356:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10331:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10322:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2273,
														"nodeType": "ExpressionStatement",
														"src": "10322:35:11"
													},
													{
														"expression": {
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2274,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2220,
																"src": "10371:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2275,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2220,
																				"src": "10381:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2278,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2276,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2207,
																					"src": "10390:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2277,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2220,
																					"src": "10394:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10390:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10381:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2280,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10380:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10405:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10380:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10371:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2284,
														"nodeType": "ExpressionStatement",
														"src": "10371:35:11"
													},
													{
														"expression": {
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2285,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2220,
																"src": "10420:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2286,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2220,
																				"src": "10430:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2287,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2207,
																					"src": "10439:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2288,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2220,
																					"src": "10443:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10439:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10430:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2291,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10429:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10454:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10429:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10420:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2295,
														"nodeType": "ExpressionStatement",
														"src": "10420:35:11"
													},
													{
														"expression": {
															"id": 2305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2296,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2220,
																"src": "10469:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2297,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2220,
																				"src": "10479:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2298,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2207,
																					"src": "10488:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2299,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2220,
																					"src": "10492:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10488:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10479:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2302,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10478:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10503:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10478:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10469:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2306,
														"nodeType": "ExpressionStatement",
														"src": "10469:35:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2308,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2220,
																	"src": "10529:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2309,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2207,
																		"src": "10537:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2310,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2220,
																		"src": "10541:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10537:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2307,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1977,
																"src": "10525:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10525:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2211,
														"id": 2313,
														"nodeType": "Return",
														"src": "10518:30:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2205,
										"nodeType": "StructuredDocumentation",
										"src": "8695:223:11",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8932:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8945:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "8937:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8937:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8936:11:11"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "8971:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8971:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8970:9:11"
									},
									"scope": 2827,
									"src": "8923:1642:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2350,
										"nodeType": "Block",
										"src": "10741:164:11",
										"statements": [
											{
												"id": 2349,
												"nodeType": "UncheckedBlock",
												"src": "10751:148:11",
												"statements": [
													{
														"assignments": [
															2328
														],
														"declarations": [
															{
																"constant": false,
																"id": 2328,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10783:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2349,
																"src": "10775:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2327,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10775:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2332,
														"initialValue": {
															"arguments": [
																{
																	"id": 2330,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2319,
																	"src": "10797:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2329,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2316,
																	2351
																],
																"referencedDeclaration": 2316,
																"src": "10792:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10792:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10775:24:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2333,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2328,
																"src": "10820:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2335,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2322,
																						"src": "10847:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1783",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1783",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2334,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2826,
																					"src": "10830:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1783_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10830:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2339,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2337,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2328,
																						"src": "10860:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2338,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2328,
																						"src": "10869:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10860:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2340,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2319,
																					"src": "10878:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10860:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10830:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10886:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10830:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10882:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2346,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10829:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10820:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2326,
														"id": 2348,
														"nodeType": "Return",
														"src": "10813:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2317,
										"nodeType": "StructuredDocumentation",
										"src": "10571:89:11",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10674:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10687:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "10679:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10679:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10699:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "10690:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1783",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2321,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2320,
														"name": "Rounding",
														"nameLocations": [
															"10690:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1783,
														"src": "10690:8:11"
													},
													"referencedDeclaration": 1783,
													"src": "10690:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1783",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10678:30:11"
									},
									"returnParameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "10732:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10732:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10731:9:11"
									},
									"scope": 2827,
									"src": "10665:240:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2482,
										"nodeType": "Block",
										"src": "11096:922:11",
										"statements": [
											{
												"assignments": [
													2360
												],
												"declarations": [
													{
														"constant": false,
														"id": 2360,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11114:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2482,
														"src": "11106:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2359,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11106:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2362,
												"initialValue": {
													"hexValue": "30",
													"id": 2361,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11123:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11106:18:11"
											},
											{
												"id": 2479,
												"nodeType": "UncheckedBlock",
												"src": "11134:855:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2363,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2354,
																	"src": "11162:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11171:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11162:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11177:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11162:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2377,
														"nodeType": "IfStatement",
														"src": "11158:99:11",
														"trueBody": {
															"id": 2376,
															"nodeType": "Block",
															"src": "11180:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 2370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2368,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2354,
																			"src": "11198:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11208:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11198:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2371,
																	"nodeType": "ExpressionStatement",
																	"src": "11198:13:11"
																},
																{
																	"expression": {
																		"id": 2374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2372,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "11229:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11239:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11229:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2375,
																	"nodeType": "ExpressionStatement",
																	"src": "11229:13:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2378,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2354,
																	"src": "11274:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11283:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11274:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11288:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11274:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2392,
														"nodeType": "IfStatement",
														"src": "11270:96:11",
														"trueBody": {
															"id": 2391,
															"nodeType": "Block",
															"src": "11291:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2383,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2354,
																			"src": "11309:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11319:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11309:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2386,
																	"nodeType": "ExpressionStatement",
																	"src": "11309:12:11"
																},
																{
																	"expression": {
																		"id": 2389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2387,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "11339:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11349:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11339:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2390,
																	"nodeType": "ExpressionStatement",
																	"src": "11339:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2393,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2354,
																	"src": "11383:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11392:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11383:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11397:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11383:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2407,
														"nodeType": "IfStatement",
														"src": "11379:96:11",
														"trueBody": {
															"id": 2406,
															"nodeType": "Block",
															"src": "11400:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2398,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2354,
																			"src": "11418:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11428:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11418:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2401,
																	"nodeType": "ExpressionStatement",
																	"src": "11418:12:11"
																},
																{
																	"expression": {
																		"id": 2404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2402,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "11448:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11458:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11448:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2405,
																	"nodeType": "ExpressionStatement",
																	"src": "11448:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2408,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2354,
																	"src": "11492:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11501:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11492:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11506:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11492:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2422,
														"nodeType": "IfStatement",
														"src": "11488:96:11",
														"trueBody": {
															"id": 2421,
															"nodeType": "Block",
															"src": "11509:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2413,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2354,
																			"src": "11527:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11537:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11527:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2416,
																	"nodeType": "ExpressionStatement",
																	"src": "11527:12:11"
																},
																{
																	"expression": {
																		"id": 2419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2417,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "11557:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11567:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11557:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2420,
																	"nodeType": "ExpressionStatement",
																	"src": "11557:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2423,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2354,
																	"src": "11601:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11610:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11601:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11614:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11601:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2437,
														"nodeType": "IfStatement",
														"src": "11597:93:11",
														"trueBody": {
															"id": 2436,
															"nodeType": "Block",
															"src": "11617:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2428,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2354,
																			"src": "11635:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11645:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11635:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2431,
																	"nodeType": "ExpressionStatement",
																	"src": "11635:11:11"
																},
																{
																	"expression": {
																		"id": 2434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2432,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "11664:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11674:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11664:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2435,
																	"nodeType": "ExpressionStatement",
																	"src": "11664:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2438,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2354,
																	"src": "11707:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11716:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11707:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11720:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11707:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2452,
														"nodeType": "IfStatement",
														"src": "11703:93:11",
														"trueBody": {
															"id": 2451,
															"nodeType": "Block",
															"src": "11723:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2443,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2354,
																			"src": "11741:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11751:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11741:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2446,
																	"nodeType": "ExpressionStatement",
																	"src": "11741:11:11"
																},
																{
																	"expression": {
																		"id": 2449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2447,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "11770:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11780:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11770:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2450,
																	"nodeType": "ExpressionStatement",
																	"src": "11770:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2453,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2354,
																	"src": "11813:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11822:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11813:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11826:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11813:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2467,
														"nodeType": "IfStatement",
														"src": "11809:93:11",
														"trueBody": {
															"id": 2466,
															"nodeType": "Block",
															"src": "11829:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2458,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2354,
																			"src": "11847:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11857:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11847:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2461,
																	"nodeType": "ExpressionStatement",
																	"src": "11847:11:11"
																},
																{
																	"expression": {
																		"id": 2464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2462,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "11876:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11886:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11876:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2465,
																	"nodeType": "ExpressionStatement",
																	"src": "11876:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2468,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2354,
																	"src": "11919:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11928:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11919:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11932:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11919:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2478,
														"nodeType": "IfStatement",
														"src": "11915:64:11",
														"trueBody": {
															"id": 2477,
															"nodeType": "Block",
															"src": "11935:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2473,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2360,
																			"src": "11953:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11963:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11953:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2476,
																	"nodeType": "ExpressionStatement",
																	"src": "11953:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2480,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2360,
													"src": "12005:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2358,
												"id": 2481,
												"nodeType": "Return",
												"src": "11998:13:11"
											}
										]
									},
									"documentation": {
										"id": 2352,
										"nodeType": "StructuredDocumentation",
										"src": "10911:119:11",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11044:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11057:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "11049:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11049:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11048:15:11"
									},
									"returnParameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "11087:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11087:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11086:9:11"
									},
									"scope": 2827,
									"src": "11035:983:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2517,
										"nodeType": "Block",
										"src": "12251:168:11",
										"statements": [
											{
												"id": 2516,
												"nodeType": "UncheckedBlock",
												"src": "12261:152:11",
												"statements": [
													{
														"assignments": [
															2495
														],
														"declarations": [
															{
																"constant": false,
																"id": 2495,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12293:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2516,
																"src": "12285:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12285:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2499,
														"initialValue": {
															"arguments": [
																{
																	"id": 2497,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2486,
																	"src": "12307:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2496,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2483,
																	2518
																],
																"referencedDeclaration": 2483,
																"src": "12302:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12302:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12285:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2500,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2495,
																"src": "12334:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2502,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2489,
																						"src": "12361:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1783",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1783",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2501,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2826,
																					"src": "12344:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1783_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12344:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2506,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2504,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12374:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2505,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2495,
																						"src": "12379:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12374:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2507,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2486,
																					"src": "12388:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12374:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12344:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12400:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12344:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12396:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2513,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12343:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12334:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2493,
														"id": 2515,
														"nodeType": "Return",
														"src": "12327:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2484,
										"nodeType": "StructuredDocumentation",
										"src": "12024:142:11",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "12180:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12193:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "12185:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12185:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12209:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "12200:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1783",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2487,
														"name": "Rounding",
														"nameLocations": [
															"12200:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1783,
														"src": "12200:8:11"
													},
													"referencedDeclaration": 1783,
													"src": "12200:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1783",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12184:34:11"
									},
									"returnParameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "12242:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12242:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12241:9:11"
									},
									"scope": 2827,
									"src": "12171:248:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2646,
										"nodeType": "Block",
										"src": "12612:854:11",
										"statements": [
											{
												"assignments": [
													2527
												],
												"declarations": [
													{
														"constant": false,
														"id": 2527,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12630:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2646,
														"src": "12622:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2526,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12622:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2529,
												"initialValue": {
													"hexValue": "30",
													"id": 2528,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12639:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12622:18:11"
											},
											{
												"id": 2643,
												"nodeType": "UncheckedBlock",
												"src": "12650:787:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2530,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2521,
																"src": "12678:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12687:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12693:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12687:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12678:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2546,
														"nodeType": "IfStatement",
														"src": "12674:103:11",
														"trueBody": {
															"id": 2545,
															"nodeType": "Block",
															"src": "12697:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2535,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2521,
																			"src": "12715:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12724:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12730:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12724:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12715:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2540,
																	"nodeType": "ExpressionStatement",
																	"src": "12715:17:11"
																},
																{
																	"expression": {
																		"id": 2543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2541,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2527,
																			"src": "12750:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12760:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12750:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2544,
																	"nodeType": "ExpressionStatement",
																	"src": "12750:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2547,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2521,
																"src": "12794:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12803:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12809:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12803:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12794:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2563,
														"nodeType": "IfStatement",
														"src": "12790:103:11",
														"trueBody": {
															"id": 2562,
															"nodeType": "Block",
															"src": "12813:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2552,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2521,
																			"src": "12831:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2553,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12840:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2554,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12846:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12840:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12831:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2557,
																	"nodeType": "ExpressionStatement",
																	"src": "12831:17:11"
																},
																{
																	"expression": {
																		"id": 2560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2558,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2527,
																			"src": "12866:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12876:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12866:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2561,
																	"nodeType": "ExpressionStatement",
																	"src": "12866:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2564,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2521,
																"src": "12910:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12919:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12919:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12910:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2580,
														"nodeType": "IfStatement",
														"src": "12906:103:11",
														"trueBody": {
															"id": 2579,
															"nodeType": "Block",
															"src": "12929:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2569,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2521,
																			"src": "12947:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12956:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2571,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12962:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12956:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12947:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2574,
																	"nodeType": "ExpressionStatement",
																	"src": "12947:17:11"
																},
																{
																	"expression": {
																		"id": 2577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2575,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2527,
																			"src": "12982:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12992:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12982:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2578,
																	"nodeType": "ExpressionStatement",
																	"src": "12982:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2581,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2521,
																"src": "13026:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13035:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13041:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "13035:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "13026:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2597,
														"nodeType": "IfStatement",
														"src": "13022:100:11",
														"trueBody": {
															"id": 2596,
															"nodeType": "Block",
															"src": "13044:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2586,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2521,
																			"src": "13062:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13071:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13077:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "13071:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "13062:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2591,
																	"nodeType": "ExpressionStatement",
																	"src": "13062:16:11"
																},
																{
																	"expression": {
																		"id": 2594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2592,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2527,
																			"src": "13096:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13106:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "13096:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2595,
																	"nodeType": "ExpressionStatement",
																	"src": "13096:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2598,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2521,
																"src": "13139:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13148:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13154:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "13148:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "13139:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2614,
														"nodeType": "IfStatement",
														"src": "13135:100:11",
														"trueBody": {
															"id": 2613,
															"nodeType": "Block",
															"src": "13157:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2603,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2521,
																			"src": "13175:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13184:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13190:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "13184:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "13175:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2608,
																	"nodeType": "ExpressionStatement",
																	"src": "13175:16:11"
																},
																{
																	"expression": {
																		"id": 2611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2609,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2527,
																			"src": "13209:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13219:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "13209:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2612,
																	"nodeType": "ExpressionStatement",
																	"src": "13209:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2615,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2521,
																"src": "13252:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13261:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13267:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "13261:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "13252:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2631,
														"nodeType": "IfStatement",
														"src": "13248:100:11",
														"trueBody": {
															"id": 2630,
															"nodeType": "Block",
															"src": "13270:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2620,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2521,
																			"src": "13288:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2621,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13297:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2622,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13303:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "13297:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "13288:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2625,
																	"nodeType": "ExpressionStatement",
																	"src": "13288:16:11"
																},
																{
																	"expression": {
																		"id": 2628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2626,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2527,
																			"src": "13322:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13332:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "13322:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2629,
																	"nodeType": "ExpressionStatement",
																	"src": "13322:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2632,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2521,
																"src": "13365:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13374:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13380:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13374:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13365:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2642,
														"nodeType": "IfStatement",
														"src": "13361:66:11",
														"trueBody": {
															"id": 2641,
															"nodeType": "Block",
															"src": "13383:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2637,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2527,
																			"src": "13401:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13411:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13401:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2640,
																	"nodeType": "ExpressionStatement",
																	"src": "13401:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2644,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2527,
													"src": "13453:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2525,
												"id": 2645,
												"nodeType": "Return",
												"src": "13446:13:11"
											}
										]
									},
									"documentation": {
										"id": 2519,
										"nodeType": "StructuredDocumentation",
										"src": "12425:120:11",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12559:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12573:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "12565:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12565:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12564:15:11"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "12603:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12603:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12602:9:11"
									},
									"scope": 2827,
									"src": "12550:916:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2681,
										"nodeType": "Block",
										"src": "13701:170:11",
										"statements": [
											{
												"id": 2680,
												"nodeType": "UncheckedBlock",
												"src": "13711:154:11",
												"statements": [
													{
														"assignments": [
															2659
														],
														"declarations": [
															{
																"constant": false,
																"id": 2659,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13743:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2680,
																"src": "13735:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2658,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13735:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2663,
														"initialValue": {
															"arguments": [
																{
																	"id": 2661,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2650,
																	"src": "13758:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2660,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2647,
																	2682
																],
																"referencedDeclaration": 2647,
																"src": "13752:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13752:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13735:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2664,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2659,
																"src": "13785:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2666,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2653,
																						"src": "13812:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1783",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1783",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2665,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2826,
																					"src": "13795:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1783_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13795:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2672,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2670,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2668,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13825:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2669,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2659,
																						"src": "13831:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13825:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2671,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2650,
																					"src": "13840:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13825:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13795:50:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13852:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13795:58:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13848:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2677,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13794:60:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13785:69:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2657,
														"id": 2679,
														"nodeType": "Return",
														"src": "13778:76:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2648,
										"nodeType": "StructuredDocumentation",
										"src": "13472:143:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13629:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13643:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "13635:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13635:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13659:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "13650:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1783",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2652,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2651,
														"name": "Rounding",
														"nameLocations": [
															"13650:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1783,
														"src": "13650:8:11"
													},
													"referencedDeclaration": 1783,
													"src": "13650:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1783",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13634:34:11"
									},
									"returnParameters": {
										"id": 2657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "13692:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13692:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13691:9:11"
									},
									"scope": 2827,
									"src": "13620:251:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2768,
										"nodeType": "Block",
										"src": "14191:600:11",
										"statements": [
											{
												"assignments": [
													2691
												],
												"declarations": [
													{
														"constant": false,
														"id": 2691,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "14209:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2768,
														"src": "14201:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2690,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14201:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2693,
												"initialValue": {
													"hexValue": "30",
													"id": 2692,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14218:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14201:18:11"
											},
											{
												"id": 2765,
												"nodeType": "UncheckedBlock",
												"src": "14229:533:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2694,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2685,
																	"src": "14257:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14266:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "14257:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14272:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14257:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2708,
														"nodeType": "IfStatement",
														"src": "14253:98:11",
														"trueBody": {
															"id": 2707,
															"nodeType": "Block",
															"src": "14275:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2699,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2685,
																			"src": "14293:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14303:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "14293:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2702,
																	"nodeType": "ExpressionStatement",
																	"src": "14293:13:11"
																},
																{
																	"expression": {
																		"id": 2705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2703,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2691,
																			"src": "14324:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14334:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14324:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2706,
																	"nodeType": "ExpressionStatement",
																	"src": "14324:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2709,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2685,
																	"src": "14368:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14377:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14368:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14382:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14368:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2723,
														"nodeType": "IfStatement",
														"src": "14364:95:11",
														"trueBody": {
															"id": 2722,
															"nodeType": "Block",
															"src": "14385:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2714,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2685,
																			"src": "14403:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14413:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14403:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2717,
																	"nodeType": "ExpressionStatement",
																	"src": "14403:12:11"
																},
																{
																	"expression": {
																		"id": 2720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2718,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2691,
																			"src": "14433:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14443:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14433:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2721,
																	"nodeType": "ExpressionStatement",
																	"src": "14433:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2724,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2685,
																	"src": "14476:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14485:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14476:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14490:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14476:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2738,
														"nodeType": "IfStatement",
														"src": "14472:95:11",
														"trueBody": {
															"id": 2737,
															"nodeType": "Block",
															"src": "14493:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2729,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2685,
																			"src": "14511:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14521:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14511:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2732,
																	"nodeType": "ExpressionStatement",
																	"src": "14511:12:11"
																},
																{
																	"expression": {
																		"id": 2735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2733,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2691,
																			"src": "14541:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14551:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14541:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2736,
																	"nodeType": "ExpressionStatement",
																	"src": "14541:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2739,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2685,
																	"src": "14584:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14593:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14584:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14598:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14584:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2753,
														"nodeType": "IfStatement",
														"src": "14580:95:11",
														"trueBody": {
															"id": 2752,
															"nodeType": "Block",
															"src": "14601:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2744,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2685,
																			"src": "14619:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14629:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14619:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2747,
																	"nodeType": "ExpressionStatement",
																	"src": "14619:12:11"
																},
																{
																	"expression": {
																		"id": 2750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2748,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2691,
																			"src": "14649:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14659:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14649:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2751,
																	"nodeType": "ExpressionStatement",
																	"src": "14649:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2754,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2685,
																	"src": "14692:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14701:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14692:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14705:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14692:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2764,
														"nodeType": "IfStatement",
														"src": "14688:64:11",
														"trueBody": {
															"id": 2763,
															"nodeType": "Block",
															"src": "14708:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2759,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2691,
																			"src": "14726:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14736:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14726:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2762,
																	"nodeType": "ExpressionStatement",
																	"src": "14726:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2766,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2691,
													"src": "14778:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2689,
												"id": 2767,
												"nodeType": "Return",
												"src": "14771:13:11"
											}
										]
									},
									"documentation": {
										"id": 2683,
										"nodeType": "StructuredDocumentation",
										"src": "13877:246:11",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14137:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14152:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2769,
												"src": "14144:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14144:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14143:15:11"
									},
									"returnParameters": {
										"id": 2689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2769,
												"src": "14182:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14182:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14181:9:11"
									},
									"scope": 2827,
									"src": "14128:663:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2806,
										"nodeType": "Block",
										"src": "15028:177:11",
										"statements": [
											{
												"id": 2805,
												"nodeType": "UncheckedBlock",
												"src": "15038:161:11",
												"statements": [
													{
														"assignments": [
															2781
														],
														"declarations": [
															{
																"constant": false,
																"id": 2781,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "15070:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2805,
																"src": "15062:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2780,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15062:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2785,
														"initialValue": {
															"arguments": [
																{
																	"id": 2783,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2772,
																	"src": "15086:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2782,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2769,
																	2807
																],
																"referencedDeclaration": 2769,
																"src": "15079:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15079:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15062:30:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2786,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2781,
																"src": "15113:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2788,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2775,
																						"src": "15140:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1783",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1783",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2787,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2826,
																					"src": "15123:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1783_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2789,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15123:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2795,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2790,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15153:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2793,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2791,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2781,
																									"src": "15159:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2792,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15169:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "15159:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2794,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "15158:13:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15153:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2796,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2772,
																					"src": "15174:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15153:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "15123:56:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15186:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "15123:64:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15182:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2802,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15122:66:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "15113:75:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2779,
														"id": 2804,
														"nodeType": "Return",
														"src": "15106:82:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2770,
										"nodeType": "StructuredDocumentation",
										"src": "14797:144:11",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14955:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14970:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2807,
												"src": "14962:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14962:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14986:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2807,
												"src": "14977:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1783",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2774,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2773,
														"name": "Rounding",
														"nameLocations": [
															"14977:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1783,
														"src": "14977:8:11"
													},
													"referencedDeclaration": 1783,
													"src": "14977:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1783",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14961:34:11"
									},
									"returnParameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2807,
												"src": "15019:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15019:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:9:11"
									},
									"scope": 2827,
									"src": "14946:259:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2825,
										"nodeType": "Block",
										"src": "15403:48:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2818,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2811,
																	"src": "15426:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1783",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1783",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15420:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2816,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15420:5:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15420:15:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15438:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15420:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15443:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15420:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2815,
												"id": 2824,
												"nodeType": "Return",
												"src": "15413:31:11"
											}
										]
									},
									"documentation": {
										"id": 2808,
										"nodeType": "StructuredDocumentation",
										"src": "15211:113:11",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15338:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2811,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15364:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "15355:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1783",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2810,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2809,
														"name": "Rounding",
														"nameLocations": [
															"15355:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1783,
														"src": "15355:8:11"
													},
													"referencedDeclaration": 1783,
													"src": "15355:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1783",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15354:19:11"
									},
									"returnParameters": {
										"id": 2815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "15397:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2813,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15397:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15396:6:11"
									},
									"scope": 2827,
									"src": "15329:122:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2828,
							"src": "203:15250:11",
							"usedErrors": [
								1778
							],
							"usedEvents": []
						}
					],
					"src": "103:15351:11"
				},
				"id": 11
			}
		}
	}
}